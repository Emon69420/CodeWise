Directory structure:
└── emon69420-navigit/
    ├── README.md
    ├── AI_PROJECT_ANALYZER_SETUP.md
    ├── app.py
    ├── clone_analysis_result.json
    ├── debug_github.py
    ├── hazmap_deep_analysis.json
    ├── hello_world_output.txt
    ├── package.json
    ├── quick_test.py
    ├── quick_token_test.py
    ├── rag_repo.py
    ├── requirements.txt
    ├── run_clean.py
    ├── server.js
    ├── simple_gitingest_integration.py
    ├── streamlit_app.py
    ├── suppress_warnings.py
    ├── test_api.py
    ├── test_clone.py
    ├── test_consistent_indexing.py
    ├── test_deep_analysis.py
    ├── test_final.py
    ├── test_find_functions.py
    ├── test_find_functions_clean.py
    ├── test_github_auth.py
    ├── test_gitingest.py
    ├── test_gitingest_simple.py
    ├── test_gitingest_with_output.py
    ├── test_hazmap.py
    ├── test_hazmap_rag.py
    ├── test_rag_simple.py
    ├── test_rag_system.py
    ├── test_silent.py
    ├── test_timing_small.py
    ├── test_token.py
    ├── test_with_token.py
    ├── .env.example
    ├── clean_rag_storage/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── final_rag/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── frontend/
    │   └── src/
    │       └── App.tsx
    ├── gitingest_outputs/
    │   ├── Emon69420_HazMapApp_20250905_194000.txt
    │   ├── Emon69420_Navigit_20250906_111750.txt
    │   ├── github_gitignore_20250905_193039.txt
    │   ├── github_gitignore_20250905_194008.txt
    │   ├── gitignore_raw_20250905_192308.txt
    │   ├── gitignore_structured_20250905_192308.json
    │   ├── Hello-World_raw_20250905_192258.txt
    │   ├── Hello-World_structured_20250905_192258.json
    │   ├── octocat_Hello-World_20250905_193031.txt
    │   ├── Samay1011_Project_ecommerce_React_20250906_104832.txt
    │   ├── urvashixo_land_registry_20250906_162438.txt
    │   ├── urvashixo_land_registry_20250906_164238.txt
    │   ├── gitignore_files_20250905_192308/
    │   │   ├── README.md.txt
    │   │   ├── CONTRIBUTING.md.txt
    │   │   ├── Global_README.md.txt
    │   │   ├── LICENSE.txt
    │   │   ├── .github_PULL_REQUEST_TEMPLATE.md.txt
    │   │   └── .github_workflows_stale.yml.txt
    │   └── Hello-World_files_20250905_192258/
    │       └── README.txt
    ├── hazmap_rag_storage/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── rag_test_storage/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── services/
    │   ├── __init__.py
    │   ├── code_analyzer.py
    │   ├── config.py
    │   ├── gitingest_processor.py
    │   ├── rag_service.py
    │   └── rag_system.py
    ├── silent_rag/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── temp_consistency_test_1/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── temp_consistency_test_2/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── temp_consistency_test_3/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── temp_rag_storage/
    │   ├── chunks_metadata.json
    │   └── project_structure.json
    ├── .kiro/
    │   └── specs/
    │       ├── ai-project-analyzer/
    │       │   ├── design.md
    │       │   ├── requirements.md
    │       │   └── tasks.md
    │       ├── gitingest-integration/
    │       │   ├── design.md
    │       │   ├── requirements.md
    │       │   └── tasks.md
    │       ├── self-configuring-ai-agents/
    │       │   └── requirements.md
    │       └── streamlit-frontend/
    │           ├── design.md
    │           ├── requirements.md
    │           └── tasks.md
    └── .streamlit/
        └── config.toml

================================================
FILE: README.md
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x81 in position 3880: character maps to <undefined>


================================================
FILE: AI_PROJECT_ANALYZER_SETUP.md
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8f in position 3078: character maps to <undefined>


================================================
FILE: app.py
================================================
from flask import Flask, request, jsonify, session
from flask_cors import CORS
import os
import requests
from datetime import datetime
import logging
import re
from urllib.parse import urlparse
import subprocess
import shutil
from pathlib import Path
import tempfile

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Flask(__name__)
app.secret_key = os.environ.get('SECRET_KEY', 'dev-secret-key-change-in-production')

# Enable CORS for frontend integration
CORS(app, supports_credentials=True)

# GitHub OAuth configuration
GITHUB_CLIENT_ID = os.environ.get('GITHUB_CLIENT_ID')
GITHUB_CLIENT_SECRET = os.environ.get('GITHUB_CLIENT_SECRET')
GITHUB_REDIRECT_URI = os.environ.get('GITHUB_REDIRECT_URI', 'http://localhost:5000/auth/github/callback')

class GitHubService:
    """Service for handling GitHub authentication and repository access"""
    
    def __init__(self):
        self.base_url = "https://api.github.com"
        
    def validate_token(self, token):
        """Validate GitHub personal access token"""
        try:
            headers = {
                'Authorization': f'token {token}',
                'Accept': 'application/vnd.github.v3+json'
            }
            
            response = requests.get(f'{self.base_url}/user', headers=headers)
            
            if response.status_code == 200:
                user_data = response.json()
                return {
                    'valid': True,
                    'user': {
                        'login': user_data.get('login'),
                        'id': user_data.get('id'),
                        'name': user_data.get('name'),
                        'email': user_data.get('email')
                    },
                    'scopes': response.headers.get('X-OAuth-Scopes', '').split(', ')
                }
            else:
                return {
                    'valid': False,
                    'error': 'Invalid token or insufficient permissions'
                }
                
        except requests.RequestException as e:
            logger.error(f"GitHub API error: {str(e)}")
            return {
                'valid': False,
                'error': 'Failed to validate token with GitHub API'
            }
    
    def get_oauth_url(self, state=None):
        """Generate GitHub OAuth authorization URL"""
        if not GITHUB_CLIENT_ID:
            raise ValueError("GitHub Client ID not configured")
            
        params = {
            'client_id': GITHUB_CLIENT_ID,
            'redirect_uri': GITHUB_REDIRECT_URI,
            'scope': 'repo,user:email',
            'state': state or 'default'
        }
        
        query_string = '&'.join([f"{k}={v}" for k, v in params.items()])
        return f"https://github.com/login/oauth/authorize?{query_string}"
    
    def exchange_code_for_token(self, code, state):
        """Exchange OAuth code for access token"""
        try:
            data = {
                'client_id': GITHUB_CLIENT_ID,
                'client_secret': GITHUB_CLIENT_SECRET,
                'code': code,
                'redirect_uri': GITHUB_REDIRECT_URI,
                'state': state
            }
            
            headers = {
                'Accept': 'application/json'
            }
            
            response = requests.post(
                'https://github.com/login/oauth/access_token',
                data=data,
                headers=headers
            )
            
            if response.status_code == 200:
                token_data = response.json()
                if 'access_token' in token_data:
                    return {
                        'success': True,
                        'access_token': token_data['access_token'],
                        'token_type': token_data.get('token_type', 'bearer'),
                        'scope': token_data.get('scope', '')
                    }
                else:
                    return {
                        'success': False,
                        'error': token_data.get('error_description', 'Failed to get access token')
                    }
            else:
                return {
                    'success': False,
                    'error': 'GitHub OAuth server error'
                }
                
        except requests.RequestException as e:
            logger.error(f"OAuth token exchange error: {str(e)}")
            return {
                'success': False,
                'error': 'Failed to exchange code for token'
            }
    
    def parse_github_url(self, url):
        """Parse GitHub repository URL to extract owner and repo name"""
        try:
            # Handle different GitHub URL formats
            patterns = [
                r'github\.com[:/]([^/]+)/([^/]+?)(?:\.git)?/?$',
                r'github\.com/([^/]+)/([^/]+?)(?:/.*)?$'
            ]
            
            for pattern in patterns:
                match = re.search(pattern, url)
                if match:
                    owner, repo = match.groups()
                    # Remove .git suffix if present
                    repo = repo.replace('.git', '')
                    return {'owner': owner, 'repo': repo}
            
            return None
        except Exception as e:
            logger.error(f"URL parsing error: {str(e)}")
            return None
    
    def validate_repository_access(self, owner, repo, token=None):
        """Validate repository exists and check access permissions"""
        try:
            headers = {
                'Accept': 'application/vnd.github.v3+json',
                'User-Agent': 'AI-Project-Analyzer/1.0'
            }
            
            if token:
                headers['Authorization'] = f'token {token}'
            
            # Check repository existence and basic info
            response = requests.get(
                f'{self.base_url}/repos/{owner}/{repo}',
                headers=headers
            )
            
            if response.status_code == 200:
                repo_data = response.json()
                return {
                    'accessible': True,
                    'repo_info': {
                        'name': repo_data.get('name'),
                        'full_name': repo_data.get('full_name'),
                        'description': repo_data.get('description'),
                        'private': repo_data.get('private', False),
                        'size': repo_data.get('size', 0),
                        'language': repo_data.get('language'),
                        'languages_url': repo_data.get('languages_url'),
                        'default_branch': repo_data.get('default_branch', 'main'),
                        'clone_url': repo_data.get('clone_url'),
                        'html_url': repo_data.get('html_url'),
                        'created_at': repo_data.get('created_at'),
                        'updated_at': repo_data.get('updated_at'),
                        'stargazers_count': repo_data.get('stargazers_count', 0),
                        'forks_count': repo_data.get('forks_count', 0)
                    }
                }
            elif response.status_code == 404:
                return {
                    'accessible': False,
                    'error': 'Repository not found or not accessible'
                }
            elif response.status_code == 403:
                return {
                    'accessible': False,
                    'error': 'Access forbidden - repository may be private or rate limited'
                }
            else:
                return {
                    'accessible': False,
                    'error': f'GitHub API error: {response.status_code}'
                }
                
        except requests.RequestException as e:
            logger.error(f"Repository validation error: {str(e)}")
            return {
                'accessible': False,
                'error': 'Failed to connect to GitHub API'
            }
    
    def get_repository_tree(self, owner, repo, token=None, branch=None):
        """Get repository file tree structure"""
        try:
            headers = {
                'Accept': 'application/vnd.github.v3+json',
                'User-Agent': 'AI-Project-Analyzer/1.0'
            }
            
            if token:
                headers['Authorization'] = f'token {token}'
            
            # Get default branch if not specified
            if not branch:
                repo_info = self.validate_repository_access(owner, repo, token)
                if repo_info['accessible']:
                    branch = repo_info['repo_info']['default_branch']
                else:
                    return repo_info
            
            # Get repository tree
            response = requests.get(
                f'{self.base_url}/repos/{owner}/{repo}/git/trees/{branch}?recursive=1',
                headers=headers
            )
            
            if response.status_code == 200:
                tree_data = response.json()
                
                # Process tree data
                files = []
                directories = []
                
                for item in tree_data.get('tree', []):
                    if item['type'] == 'blob':  # File
                        files.append({
                            'path': item['path'],
                            'sha': item['sha'],
                            'size': item.get('size', 0),
                            'url': item.get('url')
                        })
                    elif item['type'] == 'tree':  # Directory
                        directories.append({
                            'path': item['path'],
                            'sha': item['sha']
                        })
                
                return {
                    'success': True,
                    'tree': {
                        'files': files,
                        'directories': directories,
                        'total_files': len(files),
                        'total_directories': len(directories),
                        'sha': tree_data.get('sha'),
                        'truncated': tree_data.get('truncated', False)
                    }
                }
            else:
                return {
                    'success': False,
                    'error': f'Failed to get repository tree: {response.status_code}'
                }
                
        except requests.RequestException as e:
            logger.error(f"Repository tree error: {str(e)}")
            return {
                'success': False,
                'error': 'Failed to fetch repository tree'
            }
    
    def get_file_content(self, owner, repo, file_path, token=None, branch=None):
        """Get content of a specific file from repository"""
        try:
            headers = {
                'Accept': 'application/vnd.github.v3+json',
                'User-Agent': 'AI-Project-Analyzer/1.0'
            }
            
            if token:
                headers['Authorization'] = f'token {token}'
            
            # Build URL with branch if specified
            url = f'{self.base_url}/repos/{owner}/{repo}/contents/{file_path}'
            if branch:
                url += f'?ref={branch}'
            
            response = requests.get(url, headers=headers)
            
            if response.status_code == 200:
                file_data = response.json()
                
                # Handle file vs directory
                if isinstance(file_data, list):
                    return {
                        'success': False,
                        'error': 'Path is a directory, not a file'
                    }
                
                return {
                    'success': True,
                    'file': {
                        'name': file_data.get('name'),
                        'path': file_data.get('path'),
                        'sha': file_data.get('sha'),
                        'size': file_data.get('size'),
                        'content': file_data.get('content'),  # Base64 encoded
                        'encoding': file_data.get('encoding'),
                        'download_url': file_data.get('download_url'),
                        'html_url': file_data.get('html_url')
                    }
                }
            elif response.status_code == 404:
                return {
                    'success': False,
                    'error': 'File not found'
                }
            else:
                return {
                    'success': False,
                    'error': f'Failed to get file content: {response.status_code}'
                }
                
        except requests.RequestException as e:
            logger.error(f"File content error: {str(e)}")
            return {
                'success': False,
                'error': 'Failed to fetch file content'
            }
    
    def deep_analyze_repository(self, owner, repo, token=None, max_file_size=1024*1024):
        """
        Perform deep analysis of repository - fetch all files with content
        Returns complete repository structure with file contents
        """
        import time
        start_time = time.time()
        
        try:
            # First get repository info and tree
            repo_info = self.validate_repository_access(owner, repo, token)
            if not repo_info['accessible']:
                return repo_info
            
            tree_result = self.get_repository_tree(owner, repo, token)
            if not tree_result['success']:
                return tree_result
            
            # Initialize result structure
            deep_analysis = {
                'repository_info': repo_info['repo_info'],
                'structure': {
                    'total_files': tree_result['tree']['total_files'],
                    'total_directories': tree_result['tree']['total_directories'],
                    'directories': tree_result['tree']['directories'],
                    'files_with_content': [],
                    'skipped_files': [],
                    'processing_stats': {
                        'processed': 0,
                        'skipped_large': 0,
                        'skipped_binary': 0,
                        'errors': 0,
                        'start_time': datetime.utcnow().isoformat(),
                        'files_per_second': 0
                    }
                }
            }
            
            # Define file extensions to skip (binary files)
            binary_extensions = {
                '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.ico', '.svg',
                '.pdf', '.zip', '.tar', '.gz', '.rar', '.7z',
                '.exe', '.dll', '.so', '.dylib',
                '.mp4', '.avi', '.mov', '.wmv', '.flv',
                '.mp3', '.wav', '.ogg', '.flac',
                '.woff', '.woff2', '.ttf', '.eot',
                '.bin', '.dat', '.db', '.sqlite'
            }
            
            # Process each file
            for file_info in tree_result['tree']['files']:
                file_path = file_info['path']
                file_size = file_info.get('size', 0)
                
                # Skip large files
                if file_size > max_file_size:
                    deep_analysis['structure']['skipped_files'].append({
                        'path': file_path,
                        'reason': 'file_too_large',
                        'size': file_size,
                        'max_size': max_file_size
                    })
                    deep_analysis['structure']['processing_stats']['skipped_large'] += 1
                    continue
                
                # Skip binary files based on extension
                file_ext = '.' + file_path.split('.')[-1].lower() if '.' in file_path else ''
                if file_ext in binary_extensions:
                    deep_analysis['structure']['skipped_files'].append({
                        'path': file_path,
                        'reason': 'binary_file',
                        'extension': file_ext
                    })
                    deep_analysis['structure']['processing_stats']['skipped_binary'] += 1
                    continue
                
                # Fetch file content
                try:
                    file_result = self.get_file_content(owner, repo, file_path, token)
                    
                    if file_result['success']:
                        file_data = file_result['file']
                        
                        # Decode content if it's base64 encoded
                        content = file_data.get('content', '')
                        if content and file_data.get('encoding') == 'base64':
                            try:
                                import base64
                                decoded_content = base64.b64decode(content).decode('utf-8')
                                content = decoded_content
                            except (UnicodeDecodeError, Exception):
                                # If decoding fails, treat as binary
                                deep_analysis['structure']['skipped_files'].append({
                                    'path': file_path,
                                    'reason': 'decode_error',
                                    'size': file_size
                                })
                                deep_analysis['structure']['processing_stats']['skipped_binary'] += 1
                                continue
                        
                        # Add file with content to results
                        deep_analysis['structure']['files_with_content'].append({
                            'path': file_path,
                            'name': file_data['name'],
                            'size': file_data['size'],
                            'sha': file_data['sha'],
                            'content': content,
                            'download_url': file_data.get('download_url'),
                            'html_url': file_data.get('html_url'),
                            'lines': len(content.split('\n')) if content else 0,
                            'extension': file_ext
                        })
                        
                        deep_analysis['structure']['processing_stats']['processed'] += 1
                        
                    else:
                        deep_analysis['structure']['skipped_files'].append({
                            'path': file_path,
                            'reason': 'fetch_error',
                            'error': file_result.get('error')
                        })
                        deep_analysis['structure']['processing_stats']['errors'] += 1
                        
                except Exception as e:
                    logger.error(f"Error processing file {file_path}: {str(e)}")
                    deep_analysis['structure']['skipped_files'].append({
                        'path': file_path,
                        'reason': 'processing_error',
                        'error': str(e)
                    })
                    deep_analysis['structure']['processing_stats']['errors'] += 1
            
            end_time = time.time()
            processing_time = end_time - start_time
            
            # Update processing stats with timing info
            total_files_processed = deep_analysis['structure']['processing_stats']['processed']
            files_per_second = total_files_processed / processing_time if processing_time > 0 else 0
            deep_analysis['structure']['processing_stats']['files_per_second'] = round(files_per_second, 2)
            deep_analysis['structure']['processing_stats']['end_time'] = datetime.utcnow().isoformat()
            deep_analysis['structure']['processing_stats']['total_processing_time_seconds'] = round(processing_time, 2)
            
            return {
                'success': True,
                'deep_analysis': deep_analysis,
                'analyzed_at': datetime.utcnow().isoformat(),
                'processing_time': {
                    'seconds': round(processing_time, 2),
                    'minutes': round(processing_time / 60, 2),
                    'formatted': f"{int(processing_time // 60)}m {int(processing_time % 60)}s"
                }
            }
            
        except Exception as e:
            logger.error(f"Deep analysis error: {str(e)}")
            return {
                'success': False,
                'error': f'Deep analysis failed: {str(e)}'
            }
    
    def clone_repository(self, owner, repo, token=None, target_dir="./my_repos"):
        """
        Clone a GitHub repository to local directory
        Returns path to cloned repository and metadata
        """
        try:
            # Create target directory if it doesn't exist
            repos_dir = Path(target_dir)
            repos_dir.mkdir(exist_ok=True)
            
            # Create owner directory
            owner_dir = repos_dir / owner
            owner_dir.mkdir(exist_ok=True)
            
            # Repository path
            repo_path = owner_dir / repo
            
            # If repository already exists, remove it for fresh clone
            if repo_path.exists():
                logger.info(f"Removing existing repository at {repo_path}")
                shutil.rmtree(repo_path)
            
            # Build clone URL
            if token:
                # Use token for authentication (works for both public and private repos)
                clone_url = f"https://{token}@github.com/{owner}/{repo}.git"
            else:
                # Public repository clone
                clone_url = f"https://github.com/{owner}/{repo}.git"
            
            logger.info(f"Cloning repository: {owner}/{repo}")
            
            # Clone the repository
            result = subprocess.run([
                'git', 'clone', 
                '--depth', '1',  # Shallow clone for faster operation
                clone_url, 
                str(repo_path)
            ], capture_output=True, text=True, timeout=300)  # 5 minute timeout
            
            if result.returncode == 0:
                # Get repository statistics
                stats = self._get_local_repo_stats(repo_path)
                
                return {
                    'success': True,
                    'clone_path': str(repo_path),
                    'clone_url': clone_url.replace(token, '***') if token else clone_url,
                    'stats': stats,
                    'cloned_at': datetime.utcnow().isoformat()
                }
            else:
                error_msg = result.stderr.strip() if result.stderr else "Unknown git error"
                # Don't expose token in error messages
                if token:
                    error_msg = error_msg.replace(token, '***')
                
                return {
                    'success': False,
                    'error': f'Git clone failed: {error_msg}'
                }
                
        except subprocess.TimeoutExpired:
            return {
                'success': False,
                'error': 'Repository clone timed out (5 minutes)'
            }
        except FileNotFoundError:
            return {
                'success': False,
                'error': 'Git is not installed or not in PATH'
            }
        except Exception as e:
            logger.error(f"Clone error: {str(e)}")
            return {
                'success': False,
                'error': f'Clone failed: {str(e)}'
            }
    
    def _get_local_repo_stats(self, repo_path):
        """Get statistics from locally cloned repository"""
        try:
            stats = {
                'total_files': 0,
                'total_directories': 0,
                'file_types': {},
                'size_bytes': 0,
                'languages': {}
            }
            
            # Walk through all files
            for root, dirs, files in os.walk(repo_path):
                # Skip .git directory
                if '.git' in dirs:
                    dirs.remove('.git')
                
                stats['total_directories'] += len(dirs)
                
                for file in files:
                    file_path = Path(root) / file
                    
                    # Count files
                    stats['total_files'] += 1
                    
                    # Get file size
                    try:
                        stats['size_bytes'] += file_path.stat().st_size
                    except:
                        pass
                    
                    # Count file extensions
                    ext = file_path.suffix.lower()
                    if ext:
                        stats['file_types'][ext] = stats['file_types'].get(ext, 0) + 1
                    
                    # Detect languages by extension
                    language = self._detect_language_by_extension(ext)
                    if language:
                        stats['languages'][language] = stats['languages'].get(language, 0) + 1
            
            return stats
            
        except Exception as e:
            logger.error(f"Stats error: {str(e)}")
            return {'error': str(e)}
    
    def _detect_language_by_extension(self, ext):
        """Detect programming language by file extension"""
        language_map = {
            '.js': 'JavaScript',
            '.jsx': 'JavaScript',
            '.ts': 'TypeScript',
            '.tsx': 'TypeScript',
            '.py': 'Python',
            '.java': 'Java',
            '.kt': 'Kotlin',
            '.cs': 'C#',
            '.go': 'Go',
            '.rs': 'Rust',
            '.cpp': 'C++',
            '.cc': 'C++',
            '.cxx': 'C++',
            '.c': 'C',
            '.h': 'C/C++',
            '.hpp': 'C++',
            '.swift': 'Swift',
            '.php': 'PHP',
            '.rb': 'Ruby',
            '.scala': 'Scala',
            '.sh': 'Shell',
            '.bash': 'Shell',
            '.ps1': 'PowerShell',
            '.html': 'HTML',
            '.css': 'CSS',
            '.scss': 'SCSS',
            '.sass': 'Sass',
            '.less': 'Less',
            '.vue': 'Vue',
            '.svelte': 'Svelte',
            '.sql': 'SQL',
            '.json': 'JSON',
            '.xml': 'XML',
            '.yaml': 'YAML',
            '.yml': 'YAML',
            '.toml': 'TOML',
            '.md': 'Markdown',
            '.dockerfile': 'Docker',
            '.r': 'R',
            '.m': 'Objective-C',
            '.mm': 'Objective-C++',
            '.dart': 'Dart',
            '.lua': 'Lua',
            '.pl': 'Perl',
            '.clj': 'Clojure',
            '.ex': 'Elixir',
            '.exs': 'Elixir',
            '.erl': 'Erlang',
            '.hrl': 'Erlang',
            '.fs': 'F#',
            '.fsx': 'F#',
            '.ml': 'OCaml',
            '.mli': 'OCaml',
            '.hs': 'Haskell',
            '.elm': 'Elm',
            '.jl': 'Julia',
            '.nim': 'Nim',
            '.zig': 'Zig'
        }
        return language_map.get(ext)
    
    def analyze_local_repository(self, repo_path, max_file_size=1024*1024):
        """
        Analyze locally cloned repository - much faster than API approach
        """
        try:
            repo_path = Path(repo_path)
            if not repo_path.exists():
                return {
                    'success': False,
                    'error': 'Repository path does not exist'
                }
            
            # Get repository stats
            stats = self._get_local_repo_stats(repo_path)
            
            # Initialize analysis result
            analysis = {
                'repository_path': str(repo_path),
                'stats': stats,
                'files_with_content': [],
                'skipped_files': [],
                'processing_stats': {
                    'processed': 0,
                    'skipped_large': 0,
                    'skipped_binary': 0,
                    'errors': 0
                }
            }
            
            # Binary file extensions to skip
            binary_extensions = {
                '.png', '.jpg', '.jpeg', '.gif', '.bmp', '.ico', '.svg',
                '.pdf', '.zip', '.tar', '.gz', '.rar', '.7z',
                '.exe', '.dll', '.so', '.dylib',
                '.mp4', '.avi', '.mov', '.wmv', '.flv',
                '.mp3', '.wav', '.ogg', '.flac',
                '.woff', '.woff2', '.ttf', '.eot',
                '.bin', '.dat', '.db', '.sqlite',
                '.node', '.pyc', '.class', '.jar'
            }
            
            # Process all files
            for root, dirs, files in os.walk(repo_path):
                # Skip .git directory
                if '.git' in dirs:
                    dirs.remove('.git')
                
                # Skip node_modules and other common build directories
                skip_dirs = {'.git', 'node_modules', '__pycache__', '.venv', 'venv', 
                           'build', 'dist', 'target', '.gradle', '.idea', '.vscode'}
                dirs[:] = [d for d in dirs if d not in skip_dirs]
                
                for file in files:
                    file_path = Path(root) / file
                    relative_path = file_path.relative_to(repo_path)
                    
                    try:
                        # Get file size
                        file_size = file_path.stat().st_size
                        
                        # Skip large files
                        if file_size > max_file_size:
                            analysis['skipped_files'].append({
                                'path': str(relative_path),
                                'reason': 'file_too_large',
                                'size': file_size
                            })
                            analysis['processing_stats']['skipped_large'] += 1
                            continue
                        
                        # Skip binary files
                        file_ext = file_path.suffix.lower()
                        if file_ext in binary_extensions:
                            analysis['skipped_files'].append({
                                'path': str(relative_path),
                                'reason': 'binary_file',
                                'extension': file_ext
                            })
                            analysis['processing_stats']['skipped_binary'] += 1
                            continue
                        
                        # Read file content
                        try:
                            with open(file_path, 'r', encoding='utf-8') as f:
                                content = f.read()
                            
                            # Add to analysis
                            analysis['files_with_content'].append({
                                'path': str(relative_path),
                                'name': file_path.name,
                                'size': file_size,
                                'content': content,
                                'lines': len(content.split('\n')),
                                'extension': file_ext,
                                'language': self._detect_language_by_extension(file_ext)
                            })
                            
                            analysis['processing_stats']['processed'] += 1
                            
                        except UnicodeDecodeError:
                            # File is likely binary
                            analysis['skipped_files'].append({
                                'path': str(relative_path),
                                'reason': 'encoding_error',
                                'size': file_size
                            })
                            analysis['processing_stats']['skipped_binary'] += 1
                            
                    except Exception as e:
                        analysis['skipped_files'].append({
                            'path': str(relative_path),
                            'reason': 'processing_error',
                            'error': str(e)
                        })
                        analysis['processing_stats']['errors'] += 1
            
            return {
                'success': True,
                'analysis': analysis,
                'analyzed_at': datetime.utcnow().isoformat()
            }
            
        except Exception as e:
            logger.error(f"Local analysis error: {str(e)}")
            return {
                'success': False,
                'error': f'Local analysis failed: {str(e)}'
            }

# Initialize services
github_service = GitHubService()

@app.route('/auth/github/login', methods=['POST'])
def github_login():
    """Initiate GitHub OAuth login or validate personal access token"""
    try:
        # Better JSON parsing with error handling
        if not request.is_json:
            return jsonify({'error': 'Content-Type must be application/json'}), 415
        
        try:
            data = request.get_json(force=True)
        except Exception as json_error:
            logger.error(f"JSON parsing error: {str(json_error)}")
            return jsonify({'error': 'Invalid JSON format'}), 400
        
        if not data:
            return jsonify({'error': 'Request body required'}), 400
        
        # Handle personal access token authentication
        if 'token' in data:
            token = data['token'].strip()
            
            if not token:
                return jsonify({'error': 'Token cannot be empty'}), 400
            
            # Validate the token
            validation_result = github_service.validate_token(token)
            
            if validation_result['valid']:
                # Store token in session (in-memory only)
                session['github_token'] = token
                session['github_user'] = validation_result['user']
                session['login_time'] = datetime.utcnow().isoformat()
                
                return jsonify({
                    'success': True,
                    'user': validation_result['user'],
                    'scopes': validation_result['scopes'],
                    'auth_method': 'token'
                })
            else:
                return jsonify({
                    'success': False,
                    'error': validation_result['error']
                }), 401
        
        # Handle OAuth flow initiation
        elif 'oauth' in data and data['oauth']:
            try:
                state = data.get('state', 'default')
                oauth_url = github_service.get_oauth_url(state)
                
                return jsonify({
                    'success': True,
                    'oauth_url': oauth_url,
                    'auth_method': 'oauth'
                })
            except ValueError as e:
                return jsonify({
                    'success': False,
                    'error': str(e)
                }), 500
        
        else:
            return jsonify({
                'error': 'Either "token" or "oauth": true must be provided'
            }), 400
            
    except Exception as e:
        logger.error(f"Login error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/auth/github/callback', methods=['GET'])
def github_callback():
    """Handle GitHub OAuth callback"""
    try:
        code = request.args.get('code')
        state = request.args.get('state')
        error = request.args.get('error')
        
        if error:
            return jsonify({
                'success': False,
                'error': f'GitHub OAuth error: {error}'
            }), 400
        
        if not code:
            return jsonify({
                'success': False,
                'error': 'Authorization code not provided'
            }), 400
        
        # Exchange code for token
        token_result = github_service.exchange_code_for_token(code, state)
        
        if token_result['success']:
            # Validate the received token
            validation_result = github_service.validate_token(token_result['access_token'])
            
            if validation_result['valid']:
                # Store token in session
                session['github_token'] = token_result['access_token']
                session['github_user'] = validation_result['user']
                session['login_time'] = datetime.utcnow().isoformat()
                
                return jsonify({
                    'success': True,
                    'user': validation_result['user'],
                    'scopes': validation_result['scopes'],
                    'auth_method': 'oauth'
                })
            else:
                return jsonify({
                    'success': False,
                    'error': 'Failed to validate received token'
                }), 401
        else:
            return jsonify({
                'success': False,
                'error': token_result['error']
            }), 400
            
    except Exception as e:
        logger.error(f"OAuth callback error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/auth/status', methods=['GET'])
def auth_status():
    """Check current authentication status"""
    try:
        if 'github_token' in session and 'github_user' in session:
            return jsonify({
                'authenticated': True,
                'user': session['github_user'],
                'login_time': session.get('login_time')
            })
        else:
            return jsonify({
                'authenticated': False
            })
    except Exception as e:
        logger.error(f"Auth status error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/auth/logout', methods=['POST'])
def logout():
    """Clear authentication session"""
    try:
        # Clear all authentication data from session
        session.pop('github_token', None)
        session.pop('github_user', None)
        session.pop('login_time', None)
        
        return jsonify({
            'success': True,
            'message': 'Successfully logged out'
        })
    except Exception as e:
        logger.error(f"Logout error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

# Repository endpoints
@app.route('/api/repositories/validate', methods=['POST'])
def validate_repository():
    """Validate repository URL and check access"""
    try:
        # Better JSON parsing with error handling
        if not request.is_json:
            return jsonify({'error': 'Content-Type must be application/json'}), 415
        
        try:
            data = request.get_json(force=True)
        except Exception as json_error:
            logger.error(f"JSON parsing error: {str(json_error)}")
            return jsonify({'error': 'Invalid JSON format'}), 400
        
        if not data or 'url' not in data:
            return jsonify({'error': 'Repository URL is required'}), 400
        
        repo_url = data['url'].strip()
        if not repo_url:
            return jsonify({'error': 'Repository URL cannot be empty'}), 400
        
        # Parse GitHub URL
        parsed = github_service.parse_github_url(repo_url)
        if not parsed:
            return jsonify({
                'error': 'Invalid GitHub repository URL format'
            }), 400
        
        owner, repo = parsed['owner'], parsed['repo']
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Validate repository access
        validation_result = github_service.validate_repository_access(owner, repo, token)
        
        if validation_result['accessible']:
            return jsonify({
                'success': True,
                'repository': validation_result['repo_info'],
                'parsed': {'owner': owner, 'repo': repo}
            })
        else:
            return jsonify({
                'success': False,
                'error': validation_result['error']
            }), 404
            
    except Exception as e:
        logger.error(f"Repository validation error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/<owner>/<repo>/tree', methods=['GET'])
def get_repository_tree(owner, repo):
    """Get repository file tree structure"""
    try:
        # Get optional branch parameter
        branch = request.args.get('branch')
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Get repository tree
        tree_result = github_service.get_repository_tree(owner, repo, token, branch)
        
        if tree_result.get('success'):
            return jsonify(tree_result)
        else:
            return jsonify({
                'error': tree_result.get('error', 'Failed to get repository tree')
            }), 400
            
    except Exception as e:
        logger.error(f"Repository tree error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/<owner>/<repo>/files/<path:file_path>', methods=['GET'])
def get_file_content(owner, repo, file_path):
    """Get content of a specific file from repository"""
    try:
        # Get optional branch parameter
        branch = request.args.get('branch')
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Get file content
        file_result = github_service.get_file_content(owner, repo, file_path, token, branch)
        
        if file_result.get('success'):
            return jsonify(file_result)
        else:
            return jsonify({
                'error': file_result.get('error', 'Failed to get file content')
            }), 404
            
    except Exception as e:
        logger.error(f"File content error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/analyze', methods=['POST'])
def analyze_repository():
    """Start repository analysis process"""
    try:
        # Better JSON parsing with error handling
        if not request.is_json:
            return jsonify({'error': 'Content-Type must be application/json'}), 415
        
        try:
            data = request.get_json(force=True)
        except Exception as json_error:
            logger.error(f"JSON parsing error: {str(json_error)}")
            return jsonify({'error': 'Invalid JSON format'}), 400
        
        if not data or 'url' not in data:
            return jsonify({'error': 'Repository URL is required'}), 400
        
        repo_url = data['url'].strip()
        
        # Parse GitHub URL
        parsed = github_service.parse_github_url(repo_url)
        if not parsed:
            return jsonify({
                'error': 'Invalid GitHub repository URL format'
            }), 400
        
        owner, repo = parsed['owner'], parsed['repo']
        
        # Get token from session if available
        token = session.get('github_token')
        
        # First validate repository access
        validation_result = github_service.validate_repository_access(owner, repo, token)
        
        if not validation_result['accessible']:
            return jsonify({
                'success': False,
                'error': validation_result['error']
            }), 404
        
        # Get repository structure
        tree_result = github_service.get_repository_tree(owner, repo, token)
        
        if not tree_result.get('success'):
            return jsonify({
                'success': False,
                'error': tree_result.get('error', 'Failed to analyze repository structure')
            }), 400
        
        # Return analysis results
        return jsonify({
            'success': True,
            'analysis': {
                'repository': validation_result['repo_info'],
                'structure': tree_result['tree'],
                'parsed': {'owner': owner, 'repo': repo},
                'analyzed_at': datetime.utcnow().isoformat()
            }
        })
        
    except Exception as e:
        logger.error(f"Repository analysis error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/deep-analyze', methods=['POST'])
def deep_analyze_repository():
    """Perform deep analysis of repository - fetch all files with their content"""
    try:
        # Better JSON parsing with error handling
        if not request.is_json:
            return jsonify({'error': 'Content-Type must be application/json'}), 415
        
        try:
            data = request.get_json(force=True)
        except Exception as json_error:
            logger.error(f"JSON parsing error: {str(json_error)}")
            return jsonify({'error': 'Invalid JSON format'}), 400
        
        if not data or 'url' not in data:
            return jsonify({'error': 'Repository URL is required'}), 400
        
        repo_url = data['url'].strip()
        max_file_size = data.get('max_file_size', 1024*1024)  # Default 1MB limit
        
        # Parse GitHub URL
        parsed = github_service.parse_github_url(repo_url)
        if not parsed:
            return jsonify({
                'error': 'Invalid GitHub repository URL format'
            }), 400
        
        owner, repo = parsed['owner'], parsed['repo']
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Perform deep analysis
        logger.info(f"Starting deep analysis of {owner}/{repo}")
        analysis_result = github_service.deep_analyze_repository(owner, repo, token, max_file_size)
        
        if analysis_result.get('success'):
            logger.info(f"Deep analysis completed for {owner}/{repo}")
            return jsonify(analysis_result)
        else:
            return jsonify({
                'success': False,
                'error': analysis_result.get('error', 'Deep analysis failed')
            }), 400
            
    except Exception as e:
        logger.error(f"Deep analysis endpoint error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/<owner>/<repo>/explore', methods=['GET'])
def explore_repository_structure(owner, repo):
    """Get detailed repository structure with file contents (alternative endpoint)"""
    try:
        # Get optional parameters
        max_file_size = request.args.get('max_file_size', 1024*1024, type=int)
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Perform deep analysis
        logger.info(f"Exploring repository structure: {owner}/{repo}")
        analysis_result = github_service.deep_analyze_repository(owner, repo, token, max_file_size)
        
        if analysis_result.get('success'):
            return jsonify(analysis_result)
        else:
            return jsonify({
                'error': analysis_result.get('error', 'Repository exploration failed')
            }), 400
            
    except Exception as e:
        logger.error(f"Repository exploration error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/clone', methods=['POST'])
def clone_repository():
    """Clone a GitHub repository to local storage"""
    try:
        # Better JSON parsing with error handling
        if not request.is_json:
            return jsonify({'error': 'Content-Type must be application/json'}), 415
        
        try:
            data = request.get_json(force=True)
        except Exception as json_error:
            logger.error(f"JSON parsing error: {str(json_error)}")
            return jsonify({'error': 'Invalid JSON format'}), 400
        
        if not data or 'url' not in data:
            return jsonify({'error': 'Repository URL is required'}), 400
        
        repo_url = data['url'].strip()
        target_dir = data.get('target_dir', './my_repos')
        
        # Parse GitHub URL
        parsed = github_service.parse_github_url(repo_url)
        if not parsed:
            return jsonify({
                'error': 'Invalid GitHub repository URL format'
            }), 400
        
        owner, repo = parsed['owner'], parsed['repo']
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Clone repository
        logger.info(f"Cloning repository: {owner}/{repo}")
        clone_result = github_service.clone_repository(owner, repo, token, target_dir)
        
        if clone_result.get('success'):
            logger.info(f"Repository cloned successfully: {clone_result['clone_path']}")
            return jsonify(clone_result)
        else:
            return jsonify({
                'success': False,
                'error': clone_result.get('error', 'Clone failed')
            }), 400
            
    except Exception as e:
        logger.error(f"Clone endpoint error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

@app.route('/api/repositories/clone-and-analyze', methods=['POST'])
def clone_and_analyze_repository():
    """Clone repository and perform local analysis - much faster than API approach"""
    try:
        # Better JSON parsing with error handling
        if not request.is_json:
            return jsonify({'error': 'Content-Type must be application/json'}), 415
        
        try:
            data = request.get_json(force=True)
        except Exception as json_error:
            logger.error(f"JSON parsing error: {str(json_error)}")
            return jsonify({'error': 'Invalid JSON format'}), 400
        
        if not data or 'url' not in data:
            return jsonify({'error': 'Repository URL is required'}), 400
        
        repo_url = data['url'].strip()
        target_dir = data.get('target_dir', './my_repos')
        max_file_size = data.get('max_file_size', 1024*1024)  # Default 1MB
        cleanup_after = data.get('cleanup_after', False)  # Whether to delete after analysis
        
        # Parse GitHub URL
        parsed = github_service.parse_github_url(repo_url)
        if not parsed:
            return jsonify({
                'error': 'Invalid GitHub repository URL format'
            }), 400
        
        owner, repo = parsed['owner'], parsed['repo']
        
        # Get token from session if available
        token = session.get('github_token')
        
        # Step 1: Clone repository
        logger.info(f"Cloning repository: {owner}/{repo}")
        clone_result = github_service.clone_repository(owner, repo, token, target_dir)
        
        if not clone_result.get('success'):
            return jsonify({
                'success': False,
                'error': clone_result.get('error', 'Clone failed')
            }), 400
        
        repo_path = clone_result['clone_path']
        
        try:
            # Step 2: Analyze local repository
            logger.info(f"Analyzing local repository: {repo_path}")
            analysis_result = github_service.analyze_local_repository(repo_path, max_file_size)
            
            if analysis_result.get('success'):
                # Combine clone and analysis results
                combined_result = {
                    'success': True,
                    'clone_info': clone_result,
                    'analysis': analysis_result['analysis'],
                    'analyzed_at': analysis_result['analyzed_at']
                }
                
                # Cleanup if requested
                if cleanup_after:
                    try:
                        shutil.rmtree(repo_path)
                        combined_result['cleanup'] = 'Repository deleted after analysis'
                        logger.info(f"Cleaned up repository: {repo_path}")
                    except Exception as cleanup_error:
                        combined_result['cleanup_error'] = str(cleanup_error)
                        logger.warning(f"Failed to cleanup {repo_path}: {cleanup_error}")
                
                logger.info(f"Clone and analysis completed for {owner}/{repo}")
                return jsonify(combined_result)
            else:
                return jsonify({
                    'success': False,
                    'error': analysis_result.get('error', 'Analysis failed'),
                    'clone_info': clone_result
                }), 400
                
        except Exception as analysis_error:
            logger.error(f"Analysis error: {str(analysis_error)}")
            return jsonify({
                'success': False,
                'error': f'Analysis failed: {str(analysis_error)}',
                'clone_info': clone_result
            }), 500
            
    except Exception as e:
        logger.error(f"Clone and analyze endpoint error: {str(e)}")
        return jsonify({'error': 'Internal server error'}), 500

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)


================================================
FILE: clone_analysis_result.json
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8f in position 438639: character maps to <undefined>


================================================
FILE: debug_github.py
================================================
#!/usr/bin/env python3
"""
Debug script to check GitHub API status and rate limits
"""

import requests
import json

def check_github_api():
    """Check GitHub API status and rate limits"""
    print("🔍 Debugging GitHub API access...")
    print("=" * 50)
    
    # Check API rate limit status
    print("1. Checking GitHub API rate limits...")
    try:
        response = requests.get("https://api.github.com/rate_limit")
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            rate_data = response.json()
            core = rate_data['resources']['core']
            print(f"✅ Rate limit status:")
            print(f"   Limit: {core['limit']}")
            print(f"   Used: {core['used']}")
            print(f"   Remaining: {core['remaining']}")
            print(f"   Reset time: {core['reset']}")
            
            if core['remaining'] == 0:
                print("❌ RATE LIMIT EXCEEDED! This is the issue.")
                import datetime
                reset_time = datetime.datetime.fromtimestamp(core['reset'])
                print(f"   Rate limit resets at: {reset_time}")
            else:
                print("✅ Rate limit OK")
        else:
            print(f"❌ Failed to check rate limits: {response.status_code}")
    except Exception as e:
        print(f"❌ Error checking rate limits: {e}")
    
    print()
    
    # Test direct repository access
    print("2. Testing direct repository access...")
    try:
        repo_url = "https://api.github.com/repos/Emon69420/HazMapApp"
        response = requests.get(repo_url)
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            repo_data = response.json()
            print(f"✅ Repository accessible:")
            print(f"   Name: {repo_data['full_name']}")
            print(f"   Private: {repo_data['private']}")
            print(f"   Size: {repo_data['size']} KB")
        elif response.status_code == 403:
            print("❌ 403 Forbidden - Likely rate limited")
            print("Response headers:")
            for header, value in response.headers.items():
                if 'rate' in header.lower() or 'limit' in header.lower():
                    print(f"   {header}: {value}")
        elif response.status_code == 404:
            print("❌ 404 Not Found - Repository doesn't exist or is private")
        else:
            print(f"❌ Unexpected status: {response.status_code}")
            print(f"Response: {response.text[:200]}")
    except Exception as e:
        print(f"❌ Error testing repository: {e}")
    
    print()
    
    # Test with a known public repository
    print("3. Testing with known public repository (octocat/Hello-World)...")
    try:
        repo_url = "https://api.github.com/repos/octocat/Hello-World"
        response = requests.get(repo_url)
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            print("✅ Known public repo accessible - API is working")
        elif response.status_code == 403:
            print("❌ Even known public repo is forbidden - definitely rate limited")
        else:
            print(f"❌ Unexpected status for known repo: {response.status_code}")
    except Exception as e:
        print(f"❌ Error testing known repo: {e}")

def check_flask_server():
    """Check if Flask server is responding"""
    print("\n4. Testing Flask server...")
    try:
        response = requests.get("http://localhost:5000/auth/status")
        print(f"Flask server status: {response.status_code}")
        if response.status_code == 200:
            print("✅ Flask server is running")
        else:
            print("❌ Flask server issue")
    except requests.exceptions.ConnectionError:
        print("❌ Flask server not running - start with: python app.py")
    except Exception as e:
        print(f"❌ Flask server error: {e}")

if __name__ == "__main__":
    check_github_api()
    check_flask_server()
    
    print("\n💡 Solutions:")
    print("1. If rate limited: Wait for reset time or use GitHub token")
    print("2. If server not running: python app.py")
    print("3. If repo changed: Check repository URL and permissions")


================================================
FILE: hazmap_deep_analysis.json
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8f in position 28163: character maps to <undefined>


================================================
FILE: hello_world_output.txt
================================================
Directory structure:
â””â”€â”€ octocat-hello-world/
    â””â”€â”€ README

================================================
FILE: README
================================================
Hello World!





================================================
FILE: package.json
================================================
{
  "name": "workflow-automation",
  "version": "1.0.0",
  "description": "Complete workflow automation platform with visual builder",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "build": "cd client && npm run build",
    "install:all": "npm install && cd client && npm install"
  },
  "dependencies": {
    "@huggingface/inference": "^4.7.1",
    "@octokit/rest": "^22.0.0",
    "cors": "^2.8.5",
    "d3": "^7.9.0",
    "dotenv": "^17.2.1",
    "express": "^4.18.2",
    "redis": "^5.8.2"
  },
  "devDependencies": {
    "nodemon": "^3.0.1"
  }
}



================================================
FILE: quick_test.py
================================================
#!/usr/bin/env python3
import requests
import json

# Test with a well-known public repository
BASE_URL = "http://localhost:5000"

def test_with_known_repo():
    print("Testing with octocat/Hello-World (known public repo)...")
    
    url = f"{BASE_URL}/api/repositories/validate"
    data = {"url": "https://github.com/octocat/Hello-World"}
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    print(f"Response: {response.json()}")
    print()

def test_with_your_repo():
    print("Testing with Emon69420/HazMapApp...")
    
    url = f"{BASE_URL}/api/repositories/validate"
    data = {"url": "https://github.com/Emon69420/HazMapApp"}
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    print(f"Response: {response.json()}")
    print()

if __name__ == "__main__":
    try:
        test_with_known_repo()
        test_with_your_repo()
    except requests.exceptions.ConnectionError:
        print("Error: Could not connect to Flask server.")
        print("Make sure the server is running with: python app.py")
    except Exception as e:
        print(f"Error: {e}")


================================================
FILE: quick_token_test.py
================================================
#!/usr/bin/env python3
"""
Quick test to verify your GitHub token works
"""

import requests

def test_github_token():
    """Test if your GitHub token works"""
    print("🔑 GitHub Token Tester")
    print("=" * 30)
    
    # Get token from user
    token = input("Paste your GitHub token here: ").strip()
    
    if not token:
        print("❌ No token provided!")
        return
    
    if not token.startswith('ghp_'):
        print("⚠️  Warning: Token should start with 'ghp_'")
    
    print("\n🔍 Testing token...")
    
    # Test the token
    headers = {
        'Authorization': f'token {token}',
        'Accept': 'application/vnd.github.v3+json'
    }
    
    try:
        # Test 1: Get user info
        response = requests.get('https://api.github.com/user', headers=headers)
        
        if response.status_code == 200:
            user_data = response.json()
            print(f"✅ Token valid!")
            print(f"   User: {user_data.get('login')}")
            print(f"   Name: {user_data.get('name', 'Not set')}")
            print(f"   Email: {user_data.get('email', 'Not public')}")
            
            # Test 2: Check rate limits
            rate_response = requests.get('https://api.github.com/rate_limit', headers=headers)
            if rate_response.status_code == 200:
                rate_data = rate_response.json()
                core = rate_data['resources']['core']
                print(f"\n📊 Rate Limits:")
                print(f"   Limit: {core['limit']} requests/hour")
                print(f"   Remaining: {core['remaining']}")
                print(f"   Used: {core['used']}")
            
            # Test 3: Access your repository
            print(f"\n🔍 Testing repository access...")
            repo_response = requests.get('https://api.github.com/repos/Emon69420/HazMapApp', headers=headers)
            
            if repo_response.status_code == 200:
                repo_data = repo_response.json()
                print(f"✅ Repository accessible!")
                print(f"   Name: {repo_data['full_name']}")
                print(f"   Private: {repo_data['private']}")
                print(f"   Size: {repo_data['size']} KB")
                
                print(f"\n🎉 Token is working perfectly!")
                print(f"💾 Save this token: {token}")
                
            else:
                print(f"❌ Repository access failed: {repo_response.status_code}")
                
        elif response.status_code == 401:
            print("❌ Token is invalid or expired")
        elif response.status_code == 403:
            print("❌ Token doesn't have required permissions")
        else:
            print(f"❌ Unexpected error: {response.status_code}")
            
    except Exception as e:
        print(f"❌ Error testing token: {e}")

if __name__ == "__main__":
    test_github_token()
    
    print("\n💡 Next steps:")
    print("1. If token works: Run 'python test_with_token.py'")
    print("2. If token fails: Check permissions and regenerate")
    print("3. Keep your token safe - don't share it!")


================================================
FILE: rag_repo.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x9d in position 4276: character maps to <undefined>


================================================
FILE: requirements.txt
================================================
# Streamlit Frontend Dependencies
streamlit>=1.28.0
requests>=2.31.0
pandas>=2.0.0
numpy>=1.24.0

# Gitingest Integration
gitingest>=0.1.0

# Additional utilities
python-dateutil>=2.8.2
urllib3>=2.0.0

# Development and testing (optional)
pytest>=7.4.0
pytest-mock>=3.11.0


================================================
FILE: run_clean.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8f in position 1552: character maps to <undefined>


================================================
FILE: server.js
================================================
const express = require('express');
const cors = require('cors');
const path = require('path');

const app = express();

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.static(path.join(__dirname, 'client/build')));

// In-memory storage
let workflows = [];
let executions = [];

// All available nodes (500+ nodes like n8n)
const nodes = {
  triggers: {
    'manual': {
      name: 'Manual',
      description: 'Trigger workflow manually',
      icon: '🎯',
      category: 'triggers',
      parameters: []
    },
    'cron': {
      name: 'Cron',
      description: 'Schedule workflow execution',
      icon: '⏰',
      category: 'triggers',
      parameters: [
        { name: 'expression', type: 'string', required: true, default: '0 9 * * *' }
      ]
    },
    'webhook': {
      name: 'Webhook',
      description: 'Trigger via HTTP webhook',
      icon: '🔗',
      category: 'triggers',
      parameters: [
        { name: 'path', type: 'string', required: true, default: '/webhook' }
      ]
    }
  },
  actions: {
    'http_request': {
      name: 'HTTP Request',
      description: 'Make HTTP requests',
      icon: '🌐',
      category: 'actions',
      parameters: [
        { name: 'url', type: 'string', required: true },
        { name: 'method', type: 'select', options: ['GET', 'POST', 'PUT', 'DELETE'], default: 'GET' },
        { name: 'headers', type: 'object', required: false },
        { name: 'body', type: 'object', required: false }
      ]
    },
    'email': {
      name: 'Send Email',
      description: 'Send email notifications',
      icon: '📧',
      category: 'actions',
      parameters: [
        { name: 'to', type: 'string', required: true },
        { name: 'subject', type: 'string', required: true },
        { name: 'body', type: 'string', required: true }
      ]
    },
    'slack': {
      name: 'Slack',
      description: 'Send Slack messages',
      icon: '💬',
      category: 'actions',
      parameters: [
        { name: 'webhook_url', type: 'string', required: true },
        { name: 'message', type: 'string', required: true }
      ]
    }
  },
  integrations: {
    'google_sheets': {
      name: 'Google Sheets',
      description: 'Read/write Google Sheets',
      icon: '📊',
      category: 'integrations',
      parameters: [
        { name: 'operation', type: 'select', options: ['read', 'write', 'append'], required: true },
        { name: 'spreadsheet_id', type: 'string', required: true },
        { name: 'range', type: 'string', required: true }
      ]
    },
    'github': {
      name: 'GitHub',
      description: 'GitHub API operations',
      icon: '🐙',
      category: 'integrations',
      parameters: [
        { name: 'operation', type: 'select', options: ['create_issue', 'create_pr', 'get_repos'], required: true },
        { name: 'token', type: 'string', required: true },
        { name: 'owner', type: 'string', required: true },
        { name: 'repo', type: 'string', required: true }
      ]
    }
  },
  databases: {
    'mysql': {
      name: 'MySQL',
      description: 'MySQL database operations',
      icon: '🗄️',
      category: 'databases',
      parameters: [
        { name: 'operation', type: 'select', options: ['query', 'insert', 'update', 'delete'], required: true },
        { name: 'host', type: 'string', required: true },
        { name: 'port', type: 'number', required: true },
        { name: 'database', type: 'string', required: true },
        { name: 'username', type: 'string', required: true },
        { name: 'password', type: 'password', required: true }
      ]
    },
    'postgresql': {
      name: 'PostgreSQL',
      description: 'PostgreSQL database operations',
      icon: '🐘',
      category: 'databases',
      parameters: [
        { name: 'operation', type: 'select', options: ['query', 'insert', 'update', 'delete'], required: true },
        { name: 'host', type: 'string', required: true },
        { name: 'port', type: 'number', required: true },
        { name: 'database', type: 'string', required: true },
        { name: 'username', type: 'string', required: true },
        { name: 'password', type: 'password', required: true }
      ]
    }
  },
  apis: {
    'weather': {
      name: 'Weather API',
      description: 'Get weather information',
      icon: '🌤️',
      category: 'apis',
      parameters: [
        { name: 'location', type: 'string', required: true },
        { name: 'api_key', type: 'string', required: true }
      ]
    },
    'news': {
      name: 'News API',
      description: 'Get news articles',
      icon: '📰',
      category: 'apis',
      parameters: [
        { name: 'query', type: 'string', required: true },
        { name: 'api_key', type: 'string', required: true }
      ]
    }
  },
  logic: {
    'if': {
      name: 'IF',
      description: 'Conditional logic',
      icon: '❓',
      category: 'logic',
      parameters: [
        { name: 'condition', type: 'string', required: true }
      ]
    },
    'switch': {
      name: 'Switch',
      description: 'Multi-case logic',
      icon: '🔀',
      category: 'logic',
      parameters: [
        { name: 'value', type: 'string', required: true },
        { name: 'cases', type: 'object', required: true }
      ]
    }
  },
  transform: {
    'set': {
      name: 'Set',
      description: 'Set variables',
      icon: '⚙️',
      category: 'transform',
      parameters: [
        { name: 'values', type: 'object', required: true }
      ]
    },
    'code': {
      name: 'Code',
      description: 'Execute custom code',
      icon: '💻',
      category: 'transform',
      parameters: [
        { name: 'code', type: 'string', required: true }
      ]
    }
  }
};

// API Routes

// Get all workflows
app.get('/api/workflows', (req, res) => {
  res.json(workflows);
});

// Create new workflow
app.post('/api/workflows', (req, res) => {
  const workflow = {
    id: Date.now().toString(),
    name: req.body.name || 'New Workflow',
    description: req.body.description || '',
    nodes: req.body.nodes || [],
    connections: req.body.connections || {},
    active: false,
    createdAt: new Date(),
    updatedAt: new Date()
  };
  
  workflows.push(workflow);
  res.status(201).json(workflow);
});

// Get all nodes
app.get('/api/nodes', (req, res) => {
  res.json(nodes);
});

// Get node categories
app.get('/api/nodes/categories', (req, res) => {
  const categories = Object.keys(nodes).map(category => ({
    name: category,
    count: Object.keys(nodes[category]).length,
    icon: getCategoryIcon(category)
  }));
  
  res.json(categories);
});

function getCategoryIcon(category) {
  const icons = {
    triggers: '🎯',
    actions: '⚡',
    integrations: '🔗',
    databases: '🗄️',
    apis: '🌐',
    logic: '🧠',
    transform: '🔧'
  };
  return icons[category] || '📦';
}

// Execute workflow
app.post('/api/execution/workflow/:id', (req, res) => {
  const workflowId = req.params.id;
  const workflow = workflows.find(w => w.id === workflowId);
  
  if (!workflow) {
    return res.status(404).json({ error: 'Workflow not found' });
  }
  
  const execution = {
    id: Date.now().toString(),
    workflowId,
    status: 'completed',
    startedAt: new Date(),
    completedAt: new Date(),
    input: req.body.input || {},
    output: { message: 'Workflow executed successfully' },
    logs: ['Workflow executed successfully']
  };
  
  executions.push(execution);
  res.json(execution);
});

// Serve React app
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/build/index.html'));
});

const PORT = process.env.PORT || 3000;

app.listen(PORT, () => {
  console.log(`🚀 Workflow Automation Platform running on port ${PORT}`);
  console.log(`📱 Frontend: http://localhost:${PORT}`);
  console.log(`🔧 API: http://localhost:${PORT}/api`);
}); 


================================================
FILE: simple_gitingest_integration.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x81 in position 7705: character maps to <undefined>


================================================
FILE: streamlit_app.py
================================================
import streamlit as st
import requests
from datetime import datetime
import os
import json

def load_custom_css():
    """Load custom CSS for dark theme styling"""
    st.markdown("""
    <style>
    .main {
        background-color: #0E1117;
    }
    
    .stApp {
        background-color: #0E1117;
    }
    
    .css-1d391kg {
        background-color: #0E1117;
    }
    
    .stSelectbox > div > div {
        background-color: #262730;
        color: #FAFAFA;
    }
    
    .stTextInput > div > div > input {
        background-color: #262730;
        color: #FAFAFA;
        border: 1px solid #4F4F4F;
    }
    
    .stButton > button {
        background-color: #FF4B4B;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 0.5rem 1rem;
    }
    
    .stButton > button:hover {
        background-color: #FF6B6B;
    }
    
    .success-message {
        background-color: #00CC88;
        color: white;
        padding: 0.5rem;
        border-radius: 4px;
        margin: 0.5rem 0;
    }
    
    .error-message {
        background-color: #FF6B6B;
        color: white;
        padding: 0.5rem;
        border-radius: 4px;
        margin: 0.5rem 0;
    }
    
    .info-message {
        background-color: #4A90E2;
        color: white;
        padding: 0.5rem;
        border-radius: 4px;
        margin: 0.5rem 0;
    }
    
    .repo-card {
        background-color: #262730;
        padding: 1rem;
        border-radius: 8px;
        margin: 0.5rem 0;
        border: 1px solid #4F4F4F;
    }
    
    .repo-card:hover {
        border-color: #FF4B4B;
        transition: border-color 0.3s ease;
    }
    </style>
    """, unsafe_allow_html=True)

def initialize_session_state():
    """Initialize session state variables"""
    if 'repositories' not in st.session_state:
        st.session_state.repositories = []
    if 'loading' not in st.session_state:
        st.session_state.loading = False
    if 'current_operation' not in st.session_state:
        st.session_state.current_operation = ""
    if 'notifications' not in st.session_state:
        st.session_state.notifications = []
    if 'github_token' not in st.session_state:
        st.session_state.github_token = ""
    if 'last_refresh' not in st.session_state:
        st.session_state.last_refresh = None

def render_header():
    """Render the application header"""
    st.title("ðŸš€ AI Project Analyzer")
    st.markdown("---")

def main():
    """Main application entry point"""
    # Configure Streamlit page
    st.set_page_config(
        page_title="AI Project Analyzer",
        page_icon="ðŸš€",
        layout="wide",
        initial_sidebar_state="collapsed"
    )
    
    # Load custom styling
    load_custom_css()
    
    # Initialize session state
    initialize_session_state()
    
    # Render header
    render_header()
    
    # Placeholder content for now
    st.info("ðŸ”§ Application structure set up successfully!")
    st.markdown("### Next Steps:")
    st.markdown("- Dark theme styling system")
    st.markdown("- API client module")
    st.markdown("- Repository list display")
    st.markdown("- Add repository form")

if __name__ == "__main__":
    main()


================================================
FILE: suppress_warnings.py
================================================
#!/usr/bin/env python3
"""
Utility to suppress ONNX Runtime warnings and other verbose output
"""

import os
import sys
import warnings
import logging

def suppress_all_warnings():
    """Suppress all the annoying warnings from ML libraries"""
    
    # 1. Suppress TensorFlow warnings
    os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'  # Only show errors
    os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'  # Disable oneDNN warnings
    
    # 2. Suppress ONNX Runtime warnings
    os.environ['ORT_DISABLE_ALL_LOGS'] = '1'
    
    # 3. Suppress Python warnings
    warnings.filterwarnings('ignore')
    
    # 4. Suppress specific library warnings
    logging.getLogger('tensorflow').setLevel(logging.ERROR)
    logging.getLogger('onnxruntime').setLevel(logging.ERROR)
    logging.getLogger('transformers').setLevel(logging.ERROR)
    logging.getLogger('sentence_transformers').setLevel(logging.ERROR)
    logging.getLogger('chromadb').setLevel(logging.ERROR)
    
    # 5. Redirect stderr temporarily to suppress C++ warnings
    import contextlib
    
    @contextlib.contextmanager
    def suppress_stderr():
        with open(os.devnull, "w") as devnull:
            old_stderr = sys.stderr
            sys.stderr = devnull
            try:
                yield
            finally:
                sys.stderr = old_stderr
    
    return suppress_stderr

# Call this at the start of any script
def setup_clean_environment():
    """Set up a clean environment without warnings"""
    suppress_all_warnings()
    
    # Also suppress the specific ONNX warnings by setting environment variables
    os.environ['CUDA_VISIBLE_DEVICES'] = ''  # Force CPU-only
    os.environ['OMP_NUM_THREADS'] = '1'  # Reduce threading warnings
    
    print("ðŸ”‡ Warnings suppressed - clean output enabled!")

if __name__ == "__main__":
    setup_clean_environment()
    print("âœ… Warning suppression configured!")


================================================
FILE: test_api.py
================================================
#!/usr/bin/env python3
"""
Simple test script to verify the API endpoints work correctly
"""

import requests
import json

BASE_URL = "http://localhost:5000"

def test_repository_validation():
    """Test repository validation endpoint"""
    print("Testing repository validation...")
    
    url = f"{BASE_URL}/api/repositories/validate"
    data = {"url": "https://github.com/Emon69420/HazMapApp"}
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    print(f"Response: {response.json()}")
    print()

def test_repository_analysis():
    """Test repository analysis endpoint"""
    print("Testing repository analysis...")
    
    url = f"{BASE_URL}/api/repositories/analyze"
    data = {"url": "https://github.com/Emon69420/HazMapApp"}
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    print(f"Response: {response.json()}")
    print()

def test_repository_tree():
    """Test repository tree endpoint"""
    print("Testing repository tree...")
    
    url = f"{BASE_URL}/api/repositories/Emon69420/HazMapApp/tree"
    
    response = requests.get(url)
    print(f"Status: {response.status_code}")
    result = response.json()
    if 'tree' in result:
        print(f"Files found: {result['tree']['total_files']}")
        print(f"Directories found: {result['tree']['total_directories']}")
        # Show first few files
        files = result['tree']['files'][:5]
        print("Sample files:")
        for file in files:
            print(f"  - {file['path']}")
    else:
        print(f"Response: {result}")
    print()

def test_file_content():
    """Test file content endpoint"""
    print("Testing file content...")
    
    url = f"{BASE_URL}/api/repositories/Emon69420/HazMapApp/files/README.md"
    
    response = requests.get(url)
    print(f"Status: {response.status_code}")
    result = response.json()
    if 'file' in result:
        print(f"File: {result['file']['name']}")
        print(f"Size: {result['file']['size']} bytes")
        print(f"Encoding: {result['file']['encoding']}")
    else:
        print(f"Response: {result}")
    print()

if __name__ == "__main__":
    print("Testing AI Project Analyzer API endpoints")
    print("=" * 50)
    
    try:
        test_repository_validation()
        test_repository_analysis()
        test_repository_tree()
        test_file_content()
        
        print("All tests completed!")
        
    except requests.exceptions.ConnectionError:
        print("Error: Could not connect to Flask server.")
        print("Make sure the server is running with: python app.py")
    except Exception as e:
        print(f"Error: {e}")


================================================
FILE: test_clone.py
================================================
#!/usr/bin/env python3
"""
Test script for repository cloning functionality
"""

import requests
import json
import os
from pathlib import Path

BASE_URL = "http://localhost:5000"

def test_clone_repository():
    """Test cloning a repository"""
    print("🔄 Testing repository cloning...")
    print("=" * 50)
    
    url = f"{BASE_URL}/api/repositories/clone"
    data = {
        "url": "https://github.com/Emon69420/HazMapApp",
        "target_dir": "./my_repos"
    }
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print(f"✅ Clone successful!")
        print(f"📁 Clone path: {result['clone_path']}")
        print(f"📊 Total files: {result['stats']['total_files']}")
        print(f"📂 Total directories: {result['stats']['total_directories']}")
        print(f"💾 Size: {result['stats']['size_bytes']} bytes")
        print(f"🔤 Languages detected:")
        for lang, count in result['stats']['languages'].items():
            print(f"   - {lang}: {count} files")
        
        # Check if directory actually exists
        clone_path = Path(result['clone_path'])
        if clone_path.exists():
            print(f"✅ Directory exists: {clone_path}")
            
            # List some files
            files = list(clone_path.rglob('*'))[:10]
            print(f"📄 Sample files:")
            for file in files:
                if file.is_file():
                    print(f"   - {file.relative_to(clone_path)}")
        else:
            print(f"❌ Directory not found: {clone_path}")
            
    else:
        print(f"❌ Clone failed: {response.json()}")
    
    print()

def test_clone_and_analyze():
    """Test clone and analyze in one operation"""
    print("🔍 Testing clone and analyze...")
    print("=" * 50)
    
    url = f"{BASE_URL}/api/repositories/clone-and-analyze"
    data = {
        "url": "https://github.com/Emon69420/HazMapApp",
        "target_dir": "./my_repos",
        "max_file_size": 512 * 1024,  # 512KB limit
        "cleanup_after": False  # Keep the repository for inspection
    }
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        
        # Clone info
        clone_info = result['clone_info']
        print(f"✅ Clone successful!")
        print(f"📁 Clone path: {clone_info['clone_path']}")
        print(f"⏰ Cloned at: {clone_info['cloned_at']}")
        
        # Analysis info
        analysis = result['analysis']
        stats = analysis['processing_stats']
        
        print(f"\n📈 Analysis Results:")
        print(f"  ✅ Files processed: {stats['processed']}")
        print(f"  ⚠️  Files skipped (too large): {stats['skipped_large']}")
        print(f"  🚫 Files skipped (binary): {stats['skipped_binary']}")
        print(f"  ❌ Errors: {stats['errors']}")
        
        # Repository stats
        repo_stats = analysis['stats']
        print(f"\n📊 Repository Statistics:")
        print(f"  📄 Total files: {repo_stats['total_files']}")
        print(f"  📂 Total directories: {repo_stats['total_directories']}")
        print(f"  💾 Size: {repo_stats['size_bytes']} bytes")
        
        # Languages
        if repo_stats['languages']:
            print(f"\n🔤 Languages detected:")
            for lang, count in sorted(repo_stats['languages'].items(), key=lambda x: x[1], reverse=True):
                print(f"   - {lang}: {count} files")
        
        # Show some processed files
        files_with_content = analysis['files_with_content'][:5]
        print(f"\n📄 Sample processed files:")
        for file_info in files_with_content:
            print(f"   - {file_info['path']} ({file_info['lines']} lines, {file_info['language'] or 'Unknown'})")
        
        if len(analysis['files_with_content']) > 5:
            print(f"   ... and {len(analysis['files_with_content']) - 5} more files")
        
        # Save detailed results
        output_file = "clone_analysis_result.json"
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(result, f, indent=2, ensure_ascii=False)
        
        print(f"\n💾 Full results saved to: {output_file}")
        
    else:
        print(f"❌ Clone and analyze failed: {response.json()}")
    
    print()

def test_performance_comparison():
    """Compare API vs Clone performance"""
    print("⚡ Performance Comparison: API vs Clone")
    print("=" * 50)
    
    import time
    
    # Test API approach
    print("Testing API approach...")
    start_time = time.time()
    
    api_url = f"{BASE_URL}/api/repositories/deep-analyze"
    api_data = {
        "url": "https://github.com/octocat/Hello-World",  # Small repo for fair comparison
        "max_file_size": 1024 * 1024
    }
    
    api_response = requests.post(api_url, json=api_data)
    api_time = time.time() - start_time
    
    print(f"API approach: {api_time:.2f} seconds")
    
    # Test Clone approach
    print("Testing Clone approach...")
    start_time = time.time()
    
    clone_url = f"{BASE_URL}/api/repositories/clone-and-analyze"
    clone_data = {
        "url": "https://github.com/octocat/Hello-World",
        "cleanup_after": True  # Clean up after test
    }
    
    clone_response = requests.post(clone_url, json=clone_data)
    clone_time = time.time() - start_time
    
    print(f"Clone approach: {clone_time:.2f} seconds")
    
    # Compare results
    if api_response.status_code == 200 and clone_response.status_code == 200:
        api_files = len(api_response.json()['deep_analysis']['structure']['files_with_content'])
        clone_files = len(clone_response.json()['analysis']['files_with_content'])
        
        print(f"\n📊 Results:")
        print(f"API files processed: {api_files}")
        print(f"Clone files processed: {clone_files}")
        print(f"Speed improvement: {api_time/clone_time:.1f}x faster" if clone_time < api_time else f"API was {clone_time/api_time:.1f}x faster")
    
    print()

if __name__ == "__main__":
    print("🚀 Testing Repository Cloning System")
    print("=" * 60)
    
    try:
        # Check if git is available
        import subprocess
        result = subprocess.run(['git', '--version'], capture_output=True, text=True)
        if result.returncode != 0:
            print("❌ Git is not installed or not in PATH")
            print("Please install Git to use cloning functionality")
            exit(1)
        else:
            print(f"✅ Git available: {result.stdout.strip()}")
            print()
        
        test_clone_repository()
        test_clone_and_analyze()
        test_performance_comparison()
        
        print("🎉 All cloning tests completed!")
        
    except requests.exceptions.ConnectionError:
        print("❌ Error: Could not connect to Flask server.")
        print("Make sure the server is running with: python app.py")
    except Exception as e:
        print(f"❌ Error: {e}")


================================================
FILE: test_consistent_indexing.py
================================================
#!/usr/bin/env python3
"""
Test to check consistency of RAG indexing across multiple runs
"""

import sys
import os
from pathlib import Path

# Add services to path
sys.path.append(str(Path(__file__).parent))

try:
    from services.rag_system import CPUOptimizedRAGSystem
except ImportError as e:
    print(f"❌ Import error: {e}")
    sys.exit(1)


def run_indexing_test(run_number):
    """Run a single indexing test and return metrics"""
    print(f"\n🔄 Run {run_number}:")
    print("-" * 30)
    
    gitingest_file = "gitingest_outputs/Samay1011_Project_ecommerce_React_20250906_104832.txt"
    
    if not os.path.exists(gitingest_file):
        print(f"❌ Gitingest file not found: {gitingest_file}")
        return None
    
    try:
        # Initialize RAG system with unique storage path
        storage_path = f"./temp_consistency_test_{run_number}"
        rag = CPUOptimizedRAGSystem(storage_path=storage_path)
        
        # Build RAG system
        metrics = rag.build_rag_from_gitingest(gitingest_file, f"consistency_test_{run_number}")
        print(f"✅ Indexed {metrics.total_chunks} chunks from {metrics.total_files} files")
        
        # Get all chunks to analyze
        all_results = rag.query("*", max_results=200, collection_name=f"consistency_test_{run_number}")
        
        # Count by file type
        file_types = {}
        chunk_types = {}
        python_files = []
        
        for chunk in all_results.chunks:
            # File extension
            ext = Path(chunk.file_path).suffix or 'no-ext'
            file_types[ext] = file_types.get(ext, 0) + 1
            
            # Chunk type
            chunk_types[chunk.chunk_type] = chunk_types.get(chunk.chunk_type, 0) + 1
            
            # Track Python files specifically
            if ext == '.py':
                python_files.append({
                    'file': chunk.file_path,
                    'type': chunk.chunk_type,
                    'content_preview': chunk.content[:100].replace('\n', ' ')
                })
        
        print("📁 File types:")
        for ext, count in sorted(file_types.items(), key=lambda x: x[1], reverse=True):
            print(f"   {ext}: {count}")
        
        print("🧩 Chunk types:")
        for chunk_type, count in sorted(chunk_types.items(), key=lambda x: x[1], reverse=True):
            print(f"   {chunk_type}: {count}")
        
        if python_files:
            print("🐍 Python files found:")
            for py_file in python_files:
                print(f"   {py_file['type']}: {py_file['file']}")
                print(f"      Preview: {py_file['content_preview']}...")
        
        return {
            'total_chunks': metrics.total_chunks,
            'total_files': metrics.total_files,
            'file_types': file_types,
            'chunk_types': chunk_types,
            'python_files': python_files
        }
        
    except Exception as e:
        print(f"❌ Run {run_number} failed: {str(e)}")
        return None
    
    finally:
        # Clean up
        try:
            if 'rag' in locals():
                rag.chroma_client = None
                rag.collection = None
            
            import shutil
            import time
            time.sleep(0.5)
            if os.path.exists(storage_path):
                shutil.rmtree(storage_path)
        except Exception as e:
            print(f"⚠️  Warning: Could not clean up run {run_number}: {e}")


def test_consistency():
    """Test consistency across multiple runs"""
    print("🔍 Testing RAG Indexing Consistency")
    print("=" * 50)
    
    results = []
    num_runs = 3
    
    for i in range(1, num_runs + 1):
        result = run_indexing_test(i)
        if result:
            results.append(result)
    
    if len(results) < 2:
        print("❌ Not enough successful runs to compare")
        return
    
    print(f"\n📊 Consistency Analysis ({len(results)} runs):")
    print("=" * 40)
    
    # Compare total counts
    chunk_counts = [r['total_chunks'] for r in results]
    file_counts = [r['total_files'] for r in results]
    
    print(f"📦 Total chunks: {chunk_counts}")
    print(f"📁 Total files: {file_counts}")
    
    if len(set(chunk_counts)) == 1:
        print("✅ Chunk counts are consistent")
    else:
        print("⚠️  Chunk counts vary between runs")
    
    if len(set(file_counts)) == 1:
        print("✅ File counts are consistent")
    else:
        print("⚠️  File counts vary between runs")
    
    # Compare file type distributions
    print(f"\n📁 File Type Consistency:")
    all_extensions = set()
    for result in results:
        all_extensions.update(result['file_types'].keys())
    
    for ext in sorted(all_extensions):
        counts = [result['file_types'].get(ext, 0) for result in results]
        if len(set(counts)) == 1:
            print(f"   {ext}: {counts[0]} ✅")
        else:
            print(f"   {ext}: {counts} ⚠️")
    
    # Compare Python file detection
    print(f"\n🐍 Python File Detection:")
    py_file_counts = [len(r['python_files']) for r in results]
    print(f"Python chunks found: {py_file_counts}")
    
    if len(set(py_file_counts)) == 1:
        print("✅ Python file detection is consistent")
    else:
        print("⚠️  Python file detection varies")
        
        # Show what Python files were found in each run
        for i, result in enumerate(results, 1):
            print(f"  Run {i} Python files:")
            for py_file in result['python_files']:
                print(f"    - {py_file['file']} ({py_file['type']})")


if __name__ == "__main__":
    test_consistency()


================================================
FILE: test_deep_analysis.py
================================================
#!/usr/bin/env python3
"""
Test script for deep repository analysis - fetches all files with their content
"""

import requests
import json
import os

BASE_URL = "http://localhost:5000"

def test_deep_analysis():
    """Test deep analysis of HazMapApp repository"""
    print("🔍 Starting deep analysis of HazMapApp repository...")
    print("=" * 60)
    
    url = f"{BASE_URL}/api/repositories/deep-analyze"
    data = {
        "url": "https://github.com/Redomic/NeuThera-Drug-Discovery-Toolkit",
        "max_file_size": 1024 * 1024  # 512KB limit for demo
    }
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        deep_analysis = result['deep_analysis']
        
        # Repository info
        repo_info = deep_analysis['repository_info']
        print(f"\n📁 Repository: {repo_info['full_name']}")
        print(f"📝 Description: {repo_info['description']}")
        print(f"🔤 Language: {repo_info['language']}")
        print(f"📊 Size: {repo_info['size']} KB")
        print(f"⭐ Stars: {repo_info['stargazers_count']}")
        
        # Structure stats
        structure = deep_analysis['structure']
        stats = structure['processing_stats']
        
        print(f"\n📈 Processing Statistics:")
        print(f"  ✅ Files processed: {stats['processed']}")
        print(f"  ⚠️  Files skipped (too large): {stats['skipped_large']}")
        print(f"  🚫 Files skipped (binary): {stats['skipped_binary']}")
        print(f"  ❌ Errors: {stats['errors']}")
        print(f"  📂 Total directories: {structure['total_directories']}")
        print(f"  📄 Total files: {structure['total_files']}")
        
        # Display timing information
        if 'processing_time' in result:
            timing = result['processing_time']
            print(f"\n⏱️  Performance Metrics:")
            print(f"  🕐 Processing time: {timing['formatted']} ({timing['seconds']}s)")
            print(f"  🚀 Files per second: {stats.get('files_per_second', 0)}")
            print(f"  📊 Average time per file: {round(timing['seconds'] / max(stats['processed'], 1), 3)}s")
        
        # Show directory structure
        print(f"\n📂 Directory Structure:")
        for directory in structure['directories'][:10]:
            print(f"  📁 {directory['path']}")
        if len(structure['directories']) > 10:
            print(f"  ... and {len(structure['directories']) - 10} more directories")
        
        # Show files with content
        print(f"\n📄 Files with Content ({len(structure['files_with_content'])}):")
        for i, file_info in enumerate(structure['files_with_content'][:5]):
            print(f"\n  {i+1}. 📄 {file_info['path']}")
            print(f"     Size: {file_info['size']} bytes")
            print(f"     Lines: {file_info['lines']}")
            print(f"     Extension: {file_info['extension']}")
            
            # Show first few lines of content
            content = file_info['content']
            if content:
                lines = content.split('\n')
                print(f"     Content preview (first 3 lines):")
                for j, line in enumerate(lines[:3]):
                    print(f"       {j+1}: {line[:80]}{'...' if len(line) > 80 else ''}")
            else:
                print(f"     Content: [Empty file]")
        
        if len(structure['files_with_content']) > 5:
            print(f"\n  ... and {len(structure['files_with_content']) - 5} more files with content")
        
        # Show skipped files
        if structure['skipped_files']:
            print(f"\n⚠️  Skipped Files ({len(structure['skipped_files'])}):")
            for skip_info in structure['skipped_files'][:5]:
                reason = skip_info['reason']
                path = skip_info['path']
                if reason == 'file_too_large':
                    print(f"  📏 {path} (too large: {skip_info['size']} bytes)")
                elif reason == 'binary_file':
                    print(f"  🔧 {path} (binary: {skip_info['extension']})")
                else:
                    print(f"  ❌ {path} ({reason})")
            
            if len(structure['skipped_files']) > 5:
                print(f"  ... and {len(structure['skipped_files']) - 5} more skipped files")
        
        # Save detailed results to file
        output_file = "hazmap_deep_analysis.json"
        with open(output_file, 'w', encoding='utf-8') as f:
            json.dump(result, f, indent=2, ensure_ascii=False)
        
        print(f"\n💾 Full analysis saved to: {output_file}")
        print(f"📊 Analysis completed at: {result['analyzed_at']}")
        
        if 'processing_time' in result:
            print(f"⚡ Total processing time: {result['processing_time']['formatted']}")
        
    else:
        print(f"❌ Error: {response.json()}")

def test_explore_endpoint():
    """Test the alternative explore endpoint"""
    print("\n🔍 Testing explore endpoint...")
    print("=" * 40)
    
    url = f"{BASE_URL}/api/repositories/Redomic/NeuThera-Drug-Discovery-Toolkit/explore?max_file_size=102400"  # 100KB limit
    
    response = requests.get(url)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        stats = result['deep_analysis']['structure']['processing_stats']
        print(f"✅ Processed {stats['processed']} files")
        print(f"⚠️  Skipped {stats['skipped_large'] + stats['skipped_binary']} files")
    else:
        print(f"❌ Error: {response.json()}")

if __name__ == "__main__":
    try:
        test_deep_analysis()
        test_explore_endpoint()
        
        print("\n🎉 Deep analysis testing completed!")
        
    except requests.exceptions.ConnectionError:
        print("❌ Error: Could not connect to Flask server.")
        print("Make sure the server is running with: python app.py")
    except Exception as e:
        print(f"❌ Error: {e}")


================================================
FILE: test_final.py
================================================
#!/usr/bin/env python3
"""
Final clean RAG test - no warnings, no Unicode issues
"""

import os
import sys
import warnings

# Suppress everything
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'
os.environ['PYTHONWARNINGS'] = 'ignore'
warnings.filterwarnings('ignore')

from pathlib import Path
import logging
logging.disable(logging.CRITICAL)

sys.path.append(str(Path(__file__).parent))

def main():
    print("Running Clean RAG Test")
    print("=" * 30)
    
    try:
        from services.rag_system import CPUOptimizedRAGSystem
        
        gitingest_file = "gitingest_outputs/Emon69420_HazMapApp_20250905_194000.txt"
        
        if not os.path.exists(gitingest_file):
            print(f"File not found: {gitingest_file}")
            return
        
        print("Building RAG index...")
        
        # Silent build
        with open(os.devnull, 'w') as devnull:
            old_stdout = sys.stdout
            old_stderr = sys.stderr
            sys.stdout = devnull
            sys.stderr = devnull
            
            try:
                rag = CPUOptimizedRAGSystem(storage_path="./final_rag")
                metrics = rag.build_rag_from_gitingest(gitingest_file, "final_test")
            finally:
                sys.stdout = old_stdout
                sys.stderr = old_stderr
        
        print(f"SUCCESS: {metrics.total_chunks} chunks from {metrics.total_files} files")
        
        # Test searches
        searches = [
            ("login authentication", "Login"),
            ("wildfire prediction", "Wildfire"),
            ("location GPS", "Location"),
            ("map component", "Map"),
            ("background task", "Background"),
            ("user profile", "Profile")
        ]
        
        print(f"\nTesting {len(searches)} searches:")
        
        for query, desc in searches:
            # Silent query
            with open(os.devnull, 'w') as devnull:
                old_stderr = sys.stderr
                sys.stderr = devnull
                try:
                    result = rag.query(query, max_results=1, collection_name="final_test")
                finally:
                    sys.stderr = old_stderr
            
            if result.chunks:
                chunk = result.chunks[0]
                file_name = Path(chunk.file_path).name
                func_name = chunk.metadata.get('function_name', 'N/A')
                print(f"  {desc}: {func_name} in {file_name}")
        
        print(f"\nSummary: {metrics.total_files} files, {metrics.total_chunks} chunks")
        print("Test complete!")
        
        # Cleanup
        try:
            rag.chroma_client = None
            rag.collection = None
            import shutil
            import time
            time.sleep(0.5)
            if os.path.exists("./final_rag"):
                shutil.rmtree("./final_rag")
        except:
            pass
            
    except Exception as e:
        print(f"Error: {e}")

if __name__ == "__main__":
    main()


================================================
FILE: test_find_functions.py
================================================
#!/usr/bin/env python3
"""

"""

import sys
import os
from pathlib import Path

# Add services to path
sys.path.append(str(Path(__file__).parent))

try:
    from services.rag_system import CPUOptimizedRAGSystem
except ImportError as e:
    print(f"❌ Import error: {e}")
    sys.exit(1)


def test_find_specific_functions():
    """Test finding specific functions and components"""
    print("🔍 Testing Function & Component Discovery")
    print("=" * 50)
    
    gitingest_file = "https://github.com/Emon69420/MedMint"
    
    if not os.path.exists(gitingest_file):
        print(f"❌ Gitingest file not found: {gitingest_file}")
        return
    
    try:
        # Initialize RAG system
        print("🔧 Building RAG index...")
        rag = CPUOptimizedRAGSystem(storage_path="./temp_rag_storage")
        
        # Build RAG system
        metrics = rag.build_rag_from_gitingest(gitingest_file, "find_functions_test")
        print(f"✅ Indexed {metrics.total_chunks} chunks from {metrics.total_files} files")
        
        # Test specific function/component searches
        searches = [
            {
                "query": "authentication login function",
                "expect": "Should find login-related code"
            },
            {
                "query": "wildfire risk prediction algorithm",
                "expect": "Should find prediction functions in Flask backend"
            },
            {
                "query": "Flask backend get_wildfire_risk_prediction function",
                "expect": "Should find the main Python prediction function"
            },
            {
                "query": "gee_data Google Earth Engine API",
                "expect": "Should find the GEE data processing function"
            },
            {
                "query": "Python Flask route handler",
                "expect": "Should find Flask route functions like home and about"
            },
            {
                "query": "environmental data processing Python",
                "expect": "Should find Python functions that process environmental data"
            },
            {
                "query": "location tracking GPS coordinates",
                "expect": "Should find LocationContext and location services"
            },
            {
                "query": "air quality monitoring API calls",
                "expect": "Should find air quality related functions"
            },
            {
                "query": "React Native map component MapView",
                "expect": "Should find map implementation"
            },
            {
                "query": "background task notification system",
                "expect": "Should find background task services"
            },
            {
                "query": "user profile management settings",
                "expect": "Should find profile screen and user management"
            },
            {
                "query": "evacuation route planning emergency",
                "expect": "Should find evacuation-related components"
            },
            {
                "query": "Python test functions pytest",
                "expect": "Should find test functions in test_app.py"
            },
            {
                "query": "Flask app configuration setup",
                "expect": "Should find Flask app initialization and config"
            }
        ]
        
        print(f"\n🎯 Testing {len(searches)} specific searches:")
        print("=" * 50)
        
        for i, search in enumerate(searches, 1):
            print(f"\n🔎 Search {i}: '{search['query']}'")
            print(f"   Expected: {search['expect']}")
            
            # Query the RAG system
            result = rag.query(search['query'], max_results=3, collection_name="find_functions_test")
            
            print(f"   ⚡ Found {len(result.chunks)} results:")
            
            # Show results with confidence scores
            for j, (chunk, confidence) in enumerate(zip(result.chunks, result.confidence_scores)):
                confidence_emoji = "🎯" if confidence > 0.1 else "📍" if confidence > 0.05 else "📌"
                print(f"     {confidence_emoji} {chunk.chunk_type} in {chunk.file_path}")
                print(f"        Confidence: {confidence:.3f}")
                
                # Show content preview
                preview = chunk.content.replace('\n', ' ')[:80]
                print(f"        Preview: {preview}...")
                
                # Show metadata if available
                if chunk.metadata:
                    relevant_meta = {}
                    for key in ['function_name', 'class_name', 'method_name']:
                        if key in chunk.metadata and chunk.metadata[key]:
                            relevant_meta[key] = chunk.metadata[key]
                    if relevant_meta:
                        print(f"        Metadata: {relevant_meta}")
            
            # Show relationships if found
            if result.relationships and any(result.relationships.values()):
                related_info = []
                for rel_type, items in result.relationships.items():
                    if items:
                        related_info.append(f"{rel_type}: {len(items)}")
                if related_info:
                    print(f"   🔗 Related: {', '.join(related_info)}")
        
        # Test finding specific code patterns
        print(f"\n🧩 Testing Code Pattern Discovery:")
        print("=" * 30)
        
        pattern_searches = [
            "async function with await",
            "React useState hook",
            "API fetch request",
            "error handling try catch",
            "TypeScript interface definition",
            "Python Flask route decorator",
            "Python function with parameters",
            "Python import statement",
            "Python class definition",
            "Python exception handling try except"
        ]
        
        for pattern in pattern_searches:
            print(f"\n🔍 Pattern: '{pattern}'")
            result = rag.query(pattern, max_results=2, collection_name="find_functions_test")
            
            for chunk, confidence in zip(result.chunks[:2], result.confidence_scores[:2]):
                if confidence > 0.01:  # Only show if there's some relevance
                    print(f"   📄 {chunk.file_path} (confidence: {confidence:.3f})")
                    # Show a longer preview for code patterns
                    preview = chunk.content.replace('\n', ' ')[:120]
                    print(f"      {preview}...")
        
        # Summary of what we found
        print(f"\n📊 Discovery Summary:")
        print("=" * 20)
        
        # Get all chunks to analyze what we have
        all_results = rag.query("*", max_results=50, collection_name="find_functions_test")
        
        # Count by file type
        file_types = {}
        chunk_types = {}
        
        for chunk in all_results.chunks:
            # File extension
            ext = Path(chunk.file_path).suffix or 'no-ext'
            file_types[ext] = file_types.get(ext, 0) + 1
            
            # Chunk type
            chunk_types[chunk.chunk_type] = chunk_types.get(chunk.chunk_type, 0) + 1
        
        print("📁 File types indexed:")
        for ext, count in sorted(file_types.items(), key=lambda x: x[1], reverse=True):
            print(f"   {ext}: {count} chunks")
        
        print("\n🧩 Chunk types created:")
        for chunk_type, count in sorted(chunk_types.items(), key=lambda x: x[1], reverse=True):
            print(f"   {chunk_type}: {count} chunks")
        
        print(f"\n🎉 Function discovery test complete!")
        
    except Exception as e:
        print(f"\n❌ Test failed: {str(e)}")
        import traceback
        traceback.print_exc()
        return 1
    
    finally:
        # Clean up
        try:
            if 'rag' in locals():
                rag.chroma_client = None
                rag.collection = None
            
            import shutil
            import time
            time.sleep(1)
            if os.path.exists("./temp_rag_storage"):
                print("🧹 Cleaning up...")
                shutil.rmtree("./temp_rag_storage")
        except Exception as e:
            print(f"⚠️  Warning: Could not clean up: {e}")
    
    return 0


if __name__ == "__main__":
    exit_code = test_find_specific_functions()
    sys.exit(exit_code)


================================================
FILE: test_find_functions_clean.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x9d in position 1034: character maps to <undefined>


================================================
FILE: test_github_auth.py
================================================
import unittest
from unittest.mock import patch, MagicMock
import json
from app import app, GitHubService

class TestGitHubService(unittest.TestCase):
    
    def setUp(self):
        self.app = app.test_client()
        self.app.testing = True
        self.github_service = GitHubService()
    
    @patch('requests.get')
    def test_validate_token_success(self, mock_get):
        """Test successful token validation"""
        # Mock successful GitHub API response
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            'login': 'testuser',
            'id': 12345,
            'name': 'Test User',
            'email': 'test@example.com'
        }
        mock_response.headers = {'X-OAuth-Scopes': 'repo, user:email'}
        mock_get.return_value = mock_response
        
        result = self.github_service.validate_token('valid_token')
        
        self.assertTrue(result['valid'])
        self.assertEqual(result['user']['login'], 'testuser')
        self.assertIn('repo', result['scopes'])
    
    @patch('requests.get')
    def test_validate_token_invalid(self, mock_get):
        """Test invalid token validation"""
        # Mock failed GitHub API response
        mock_response = MagicMock()
        mock_response.status_code = 401
        mock_get.return_value = mock_response
        
        result = self.github_service.validate_token('invalid_token')
        
        self.assertFalse(result['valid'])
        self.assertIn('error', result)
    
    def test_get_oauth_url(self):
        """Test OAuth URL generation"""
        with patch.dict('os.environ', {'GITHUB_CLIENT_ID': 'test_client_id'}):
            url = self.github_service.get_oauth_url('test_state')
            
            self.assertIn('github.com/login/oauth/authorize', url)
            self.assertIn('client_id=test_client_id', url)
            self.assertIn('state=test_state', url)
    
    def test_login_with_token(self):
        """Test login endpoint with personal access token"""
        with patch.object(self.github_service, 'validate_token') as mock_validate:
            mock_validate.return_value = {
                'valid': True,
                'user': {'login': 'testuser', 'id': 12345},
                'scopes': ['repo', 'user:email']
            }
            
            response = self.app.post('/auth/github/login',
                                   data=json.dumps({'token': 'test_token'}),
                                   content_type='application/json')
            
            self.assertEqual(response.status_code, 200)
            data = json.loads(response.data)
            self.assertTrue(data['success'])
            self.assertEqual(data['user']['login'], 'testuser')
    
    def test_login_with_oauth(self):
        """Test login endpoint OAuth flow initiation"""
        with patch.dict('os.environ', {'GITHUB_CLIENT_ID': 'test_client_id'}):
            response = self.app.post('/auth/github/login',
                                   data=json.dumps({'oauth': True}),
                                   content_type='application/json')
            
            self.assertEqual(response.status_code, 200)
            data = json.loads(response.data)
            self.assertTrue(data['success'])
            self.assertIn('oauth_url', data)
    
    def test_auth_status_authenticated(self):
        """Test auth status when user is authenticated"""
        with self.app.session_transaction() as sess:
            sess['github_token'] = 'test_token'
            sess['github_user'] = {'login': 'testuser', 'id': 12345}
        
        response = self.app.get('/auth/status')
        
        self.assertEqual(response.status_code, 200)
        data = json.loads(response.data)
        self.assertTrue(data['authenticated'])
        self.assertEqual(data['user']['login'], 'testuser')
    
    def test_auth_status_not_authenticated(self):
        """Test auth status when user is not authenticated"""
        response = self.app.get('/auth/status')
        
        self.assertEqual(response.status_code, 200)
        data = json.loads(response.data)
        self.assertFalse(data['authenticated'])
    
    def test_logout(self):
        """Test logout functionality"""
        with self.app.session_transaction() as sess:
            sess['github_token'] = 'test_token'
            sess['github_user'] = {'login': 'testuser'}
        
        response = self.app.post('/auth/logout')
        
        self.assertEqual(response.status_code, 200)
        data = json.loads(response.data)
        self.assertTrue(data['success'])
    
    def test_parse_github_url(self):
        """Test GitHub URL parsing"""
        # Test various URL formats
        test_cases = [
            ('https://github.com/owner/repo', {'owner': 'owner', 'repo': 'repo'}),
            ('https://github.com/owner/repo.git', {'owner': 'owner', 'repo': 'repo'}),
            ('git@github.com:owner/repo.git', {'owner': 'owner', 'repo': 'repo'}),
            ('https://github.com/owner/repo/', {'owner': 'owner', 'repo': 'repo'}),
            ('invalid-url', None)
        ]
        
        for url, expected in test_cases:
            result = self.github_service.parse_github_url(url)
            self.assertEqual(result, expected)
    
    @patch('requests.get')
    def test_validate_repository_access_public(self, mock_get):
        """Test repository validation for public repo"""
        mock_response = MagicMock()
        mock_response.status_code = 200
        mock_response.json.return_value = {
            'name': 'test-repo',
            'full_name': 'owner/test-repo',
            'private': False,
            'description': 'Test repository'
        }
        mock_get.return_value = mock_response
        
        result = self.github_service.validate_repository_access('owner', 'test-repo')
        
        self.assertTrue(result['accessible'])
        self.assertEqual(result['repo_info']['name'], 'test-repo')
        self.assertFalse(result['repo_info']['private'])
    
    def test_validate_repository_endpoint(self):
        """Test repository validation endpoint"""
        with patch.object(self.github_service, 'parse_github_url') as mock_parse, \
             patch.object(self.github_service, 'validate_repository_access') as mock_validate:
            
            mock_parse.return_value = {'owner': 'owner', 'repo': 'repo'}
            mock_validate.return_value = {
                'accessible': True,
                'repo_info': {'name': 'repo', 'private': False}
            }
            
            response = self.app.post('/api/repositories/validate',
                                   data=json.dumps({'url': 'https://github.com/owner/repo'}),
                                   content_type='application/json')
            
            self.assertEqual(response.status_code, 200)
            data = json.loads(response.data)
            self.assertTrue(data['success'])
            self.assertEqual(data['repository']['name'], 'repo')
    
    def test_analyze_repository_endpoint(self):
        """Test repository analysis endpoint"""
        with patch.object(self.github_service, 'parse_github_url') as mock_parse, \
             patch.object(self.github_service, 'validate_repository_access') as mock_validate, \
             patch.object(self.github_service, 'get_repository_tree') as mock_tree:
            
            mock_parse.return_value = {'owner': 'owner', 'repo': 'repo'}
            mock_validate.return_value = {
                'accessible': True,
                'repo_info': {'name': 'repo', 'private': False}
            }
            mock_tree.return_value = {
                'success': True,
                'tree': {'files': [], 'directories': [], 'total_files': 0}
            }
            
            response = self.app.post('/api/repositories/analyze',
                                   data=json.dumps({'url': 'https://github.com/owner/repo'}),
                                   content_type='application/json')
            
            self.assertEqual(response.status_code, 200)
            data = json.loads(response.data)
            self.assertTrue(data['success'])
            self.assertIn('analysis', data)

if __name__ == '__main__':
    unittest.main()


================================================
FILE: test_gitingest.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x81 in position 1533: character maps to <undefined>


================================================
FILE: test_gitingest_simple.py
================================================
#!/usr/bin/env python3
"""
Simple direct test of gitingest command to debug encoding issues.
"""

import subprocess
import sys

def test_direct_gitingest():
    """Test gitingest directly with a simple repo"""
    
    print("🧪 Testing gitingest directly...")
    
    # Test with a very simple repo
    repo_url = "https://github.com/octocat/Hello-World"
    
    try:
        # Simple gitingest command
        cmd = ['gitingest', repo_url, '--output', '-']
        
        print(f"🔧 Running: {' '.join(cmd)}")
        
        # Try with UTF-8 encoding
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            timeout=60,
            encoding='utf-8',
            errors='replace'
        )
        
        print(f"📊 Return code: {result.returncode}")
        print(f"📏 Stdout length: {len(result.stdout)} chars")
        print(f"📏 Stderr length: {len(result.stderr)} chars")
        
        if result.returncode == 0:
            print("✅ Success! Here's the first 500 chars of output:")
            print("-" * 50)
            print(result.stdout[:500])
            print("-" * 50)
            if len(result.stdout) > 500:
                print(f"... and {len(result.stdout) - 500} more characters")
        else:
            print("❌ Failed!")
            print("STDERR:")
            print(result.stderr)
            
    except subprocess.TimeoutExpired:
        print("⏰ Command timed out")
    except Exception as e:
        print(f"💥 Error: {e}")

def test_gitingest_to_file():
    """Test gitingest with file output instead of stdout"""
    
    print("\n🧪 Testing gitingest with file output...")
    
    repo_url = "https://github.com/octocat/Hello-World"
    output_file = "test_output.txt"
    
    try:
        # Output to file instead of stdout
        cmd = ['gitingest', repo_url, '--output', output_file]
        
        print(f"🔧 Running: {' '.join(cmd)}")
        
        result = subprocess.run(
            cmd,
            capture_output=True,
            text=True,
            timeout=60,
            encoding='utf-8',
            errors='replace'
        )
        
        print(f"📊 Return code: {result.returncode}")
        
        if result.returncode == 0:
            print("✅ Success! Checking output file...")
            try:
                with open(output_file, 'r', encoding='utf-8') as f:
                    content = f.read()
                    print(f"📏 File size: {len(content)} chars")
                    print("📄 First 500 chars:")
                    print("-" * 50)
                    print(content[:500])
                    print("-" * 50)
                    
                # Clean up
                import os
                os.remove(output_file)
                print("🧹 Cleaned up output file")
                
            except Exception as e:
                print(f"❌ Error reading output file: {e}")
        else:
            print("❌ Failed!")
            print("STDERR:")
            print(result.stderr)
            
    except subprocess.TimeoutExpired:
        print("⏰ Command timed out")
    except Exception as e:
        print(f"💥 Error: {e}")

if __name__ == "__main__":
    test_direct_gitingest()
    test_gitingest_to_file()


================================================
FILE: test_gitingest_with_output.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x81 in position 1276: character maps to <undefined>


================================================
FILE: test_hazmap.py
================================================
#!/usr/bin/env python3
import requests
import json

BASE_URL = "http://localhost:5000"

def test_hazmap_analysis():
    print("Analyzing HazMapApp repository...")
    
    url = f"{BASE_URL}/api/repositories/analyze"
    data = {"url": "https://github.com/Emon69420/HazMapApp"}
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        analysis = result['analysis']
        
        print(f"Repository: {analysis['repository']['full_name']}")
        print(f"Description: {analysis['repository']['description']}")
        print(f"Language: {analysis['repository']['language']}")
        print(f"Size: {analysis['repository']['size']} KB")
        print(f"Stars: {analysis['repository']['stargazers_count']}")
        print(f"Default branch: {analysis['repository']['default_branch']}")
        print()
        
        structure = analysis['structure']
        print(f"Total files: {structure['total_files']}")
        print(f"Total directories: {structure['total_directories']}")
        print()
        
        print("File structure (first 10 files):")
        for file in structure['files'][:10]:
            print(f"  - {file['path']} ({file['size']} bytes)")
        
        if len(structure['files']) > 10:
            print(f"  ... and {len(structure['files']) - 10} more files")
        
    else:
        print(f"Error: {response.json()}")

def test_get_readme():
    print("\nGetting README.md content...")
    
    url = f"{BASE_URL}/api/repositories/Emon69420/HazMapApp/files/README.md"
    
    response = requests.get(url)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        file_info = result['file']
        
        print(f"File: {file_info['name']}")
        print(f"Size: {file_info['size']} bytes")
        print(f"Encoding: {file_info['encoding']}")
        print(f"Download URL: {file_info['download_url']}")
        
        # Decode base64 content if available
        if file_info['content'] and file_info['encoding'] == 'base64':
            import base64
            content = base64.b64decode(file_info['content']).decode('utf-8')
            print("\nREADME content (first 500 chars):")
            print(content[:500] + "..." if len(content) > 500 else content)
    else:
        print(f"Error: {response.json()}")

if __name__ == "__main__":
    try:
        test_hazmap_analysis()
        test_get_readme()
    except requests.exceptions.ConnectionError:
        print("Error: Could not connect to Flask server.")
        print("Make sure the server is running with: python app.py")
    except Exception as e:
        print(f"Error: {e}")


================================================
FILE: test_hazmap_rag.py
================================================
#!/usr/bin/env python3
"""
Test RAG system with HazMap app gitingest output
"""

import sys
import os
from pathlib import Path
import time

# Add services to path
sys.path.append(str(Path(__file__).parent))

try:
    from services.rag_system import CPUOptimizedRAGSystem, GitingestParser
    from services.code_analyzer import MultiLanguageCodeAnalyzer
except ImportError as e:
    print(f"❌ Import error: {e}")
    sys.exit(1)


def test_hazmap_rag():
    """Test RAG system with HazMap app"""
    print("🚀 Testing RAG System with HazMap App")
    print("=" * 60)
    
    gitingest_file = "gitingest_outputs/Emon69420_HazMapApp_20250905_194000.txt"
    
    if not os.path.exists(gitingest_file):
        print(f"❌ Gitingest file not found: {gitingest_file}")
        return
    
    try:
        # Initialize RAG system
        print("🔧 Initializing RAG system...")
        rag = CPUOptimizedRAGSystem(storage_path="./hazmap_rag_storage")
        
        # Build RAG system from HazMap gitingest
        print("📊 Building RAG system from HazMap codebase...")
        start_time = time.time()
        
        metrics = rag.build_rag_from_gitingest(gitingest_file, "hazmap_collection")
        
        build_time = time.time() - start_time
        
        print(f"\n✅ RAG system built successfully!")
        print(f"  📁 Total files: {metrics.total_files}")
        print(f"  🧩 Total chunks: {metrics.total_chunks}")
        print(f"  🌐 Languages: {', '.join(metrics.languages_detected)}")
        print(f"  ⏱️  Build time: {build_time:.2f}s")
        print(f"  💾 Index size: {metrics.index_size_mb:.2f}MB")
        
        # Test queries relevant to HazMap
        test_queries = [
            "How do I implement location tracking?",
            "Show me authentication code",
            "How is the map component implemented?",
            "Find air quality monitoring functions",
            "How does wildfire risk prediction work?",
            "Show me background task implementation",
            "How is user profile managed?",
            "Find evacuation route planning code",
            "How are notifications handled?",
            "Show me the database configuration",
            "How is the Google Maps API integrated?",
            "Find React Native navigation setup",
            "How are environmental data fetched?",
            "Show me TypeScript interfaces",
            "How is the app styled?"
        ]
        
        print(f"\n🔍 Testing {len(test_queries)} queries...")
        print("=" * 60)
        
        for i, query in enumerate(test_queries, 1):
            print(f"\n🔎 Query {i}: '{query}'")
            
            query_start = time.time()
            result = rag.query(query, max_results=5, collection_name="hazmap_collection")
            query_time = time.time() - query_start
            
            print(f"  ⚡ Found {len(result.chunks)} results in {query_time:.3f}s")
            
            # Show top 3 results
            for j, (chunk, confidence) in enumerate(zip(result.chunks[:3], result.confidence_scores[:3])):
                print(f"    {j+1}. {chunk.chunk_type} in {chunk.file_path} (confidence: {confidence:.2f})")
                # Show a snippet of the content
                content_preview = chunk.content.replace('\n', ' ')[:100]
                print(f"       Preview: {content_preview}...")
            
            if result.relationships and any(result.relationships.values()):
                print(f"    🔗 Related: {', '.join([f'{k}: {len(v)}' for k, v in result.relationships.items() if v])}")
        
        # Test context generation for LLM
        print(f"\n📝 Testing context generation...")
        test_context_query = "How does the HazMap app handle real-time wildfire monitoring and user notifications?"
        
        result = rag.query(test_context_query, max_results=8, collection_name="hazmap_collection")
        context = rag.get_context_for_llm(result, max_tokens=2000)
        
        print(f"  📄 Generated context ({len(context)} chars):")
        print(f"  Preview: {context[:300]}...")
        
        # Show some interesting statistics
        print(f"\n📊 HazMap Codebase Analysis:")
        
        # Parse the gitingest file to get file breakdown
        files = GitingestParser.parse_gitingest_file(gitingest_file)
        analyzer = MultiLanguageCodeAnalyzer()
        project_structure = analyzer.analyze_project(files)
        
        # Language breakdown
        lang_stats = {}
        for structure in project_structure.values():
            lang = structure.language.value
            if lang not in lang_stats:
                lang_stats[lang] = {'files': 0, 'functions': 0, 'classes': 0, 'lines': 0}
            lang_stats[lang]['files'] += 1
            lang_stats[lang]['functions'] += len(structure.functions)
            lang_stats[lang]['classes'] += len(structure.classes)
            lang_stats[lang]['lines'] += structure.total_lines
        
        for lang, stats in sorted(lang_stats.items(), key=lambda x: x[1]['lines'], reverse=True):
            if stats['files'] > 0:
                print(f"  🔤 {lang.upper()}: {stats['files']} files, {stats['functions']} functions, {stats['classes']} classes, {stats['lines']} lines")
        
        # Find key components
        key_files = []
        for file_path, structure in project_structure.items():
            if any(keyword in file_path.lower() for keyword in ['map', 'auth', 'profile', 'air-quality', 'evacuation']):
                key_files.append((file_path, len(structure.functions), len(structure.classes)))
        
        if key_files:
            print(f"\n🎯 Key Components Found:")
            for file_path, func_count, class_count in sorted(key_files, key=lambda x: x[1] + x[2], reverse=True)[:10]:
                print(f"  📄 {file_path}: {func_count} functions, {class_count} classes")
        
        print(f"\n🎉 HazMap RAG analysis complete!")
        
    except Exception as e:
        print(f"\n❌ Test failed: {str(e)}")
        import traceback
        traceback.print_exc()
        return 1
    
    finally:
        # Clean up
        try:
            if 'rag' in locals():
                rag.chroma_client = None
                rag.collection = None
            
            import shutil
            time.sleep(1)
            if os.path.exists("./hazmap_rag_storage"):
                print("🧹 Cleaning up storage...")
                shutil.rmtree("./hazmap_rag_storage")
        except Exception as e:
            print(f"⚠️  Warning: Could not clean up storage: {e}")
    
    return 0


if __name__ == "__main__":
    exit_code = test_hazmap_rag()
    sys.exit(exit_code)


================================================
FILE: test_rag_simple.py
================================================
#!/usr/bin/env python3
"""
Simple test for CPU-optimized RAG system.
"""

import os
import sys
import tempfile
import time
from pathlib import Path

# Add services to path
sys.path.append(str(Path(__file__).parent))

try:
    from services.rag_system import CPUOptimizedRAGSystem, GitingestParser
    from services.code_analyzer import MultiLanguageCodeAnalyzer
except ImportError as e:
    print(f"❌ Import error: {e}")
    sys.exit(1)


def test_simple_rag():
    """Test basic RAG functionality"""
    print("🚀 Testing CPU-Optimized RAG System")
    print("=" * 50)
    
    # Sample gitingest content
    sample_content = """
Directory structure:
├── calculator.py
└── main.py

================================================================================

FILE: calculator.py
class Calculator:
    \"\"\"Simple calculator class\"\"\"
    
    def __init__(self):
        self.history = []
    
    def add(self, a, b):
        \"\"\"Add two numbers\"\"\"
        result = a + b
        self.history.append(f"{a} + {b} = {result}")
        return result
    
    def multiply(self, a, b):
        \"\"\"Multiply two numbers\"\"\"
        result = a * b
        self.history.append(f"{a} * {b} = {result}")
        return result

================================================================================

FILE: main.py
from calculator import Calculator

def main():
    \"\"\"Main function\"\"\"
    calc = Calculator()
    result = calc.add(5, 3)
    print(f"5 + 3 = {result}")
    
    product = calc.multiply(4, 6)
    print(f"4 * 6 = {product}")

if __name__ == "__main__":
    main()
"""
    
    # Use a persistent directory instead of temp
    storage_dir = "./rag_test_storage"
    
    try:
        # Clean up any existing storage
        if os.path.exists(storage_dir):
            import shutil
            try:
                shutil.rmtree(storage_dir)
            except:
                pass
        
        # Create gitingest file
        gitingest_file = "test_sample.txt"
        with open(gitingest_file, 'w', encoding='utf-8') as f:
            f.write(sample_content)
        
        print("📝 Created sample gitingest file")
        
        # Initialize RAG system
        print("🔧 Initializing RAG system...")
        rag = CPUOptimizedRAGSystem(storage_path=storage_dir)
        
        # Build RAG system
        print("🏗️ Building RAG system...")
        metrics = rag.build_rag_from_gitingest(gitingest_file, "test_collection")
        
        print(f"✅ RAG system built successfully!")
        print(f"  - Total chunks: {metrics.total_chunks}")
        print(f"  - Total files: {metrics.total_files}")
        print(f"  - Languages: {', '.join(metrics.languages_detected)}")
        print(f"  - Build time: {metrics.build_time:.2f}s")
        print(f"  - Index size: {metrics.index_size_mb:.2f}MB")
        
        # Test queries
        test_queries = [
            "How do I add two numbers?",
            "Show me calculator methods",
            "What is the main function?",
            "Find multiplication function"
        ]
        
        print(f"\n🔍 Testing queries...")
        for query in test_queries:
            print(f"\nQuery: '{query}'")
            result = rag.query(query, max_results=3, collection_name="test_collection")
            
            print(f"  Found {len(result.chunks)} results in {result.query_time:.3f}s")
            for i, (chunk, confidence) in enumerate(zip(result.chunks, result.confidence_scores)):
                print(f"  {i+1}. {chunk.chunk_type} in {chunk.file_path} (confidence: {confidence:.2f})")
                print(f"     {chunk.content[:80]}...")
        
        # Test context generation
        print(f"\n📝 Testing context generation...")
        result = rag.query("calculator functions", max_results=5, collection_name="test_collection")
        context = rag.get_context_for_llm(result, max_tokens=1000)
        print(f"Generated context ({len(context)} chars):")
        print(context[:300] + "..." if len(context) > 300 else context)
        
        print(f"\n🎉 All tests completed successfully!")
        return True
        
    except Exception as e:
        print(f"\n❌ Test failed: {str(e)}")
        import traceback
        traceback.print_exc()
        return False
        
    finally:
        # Clean up files
        try:
            if os.path.exists(gitingest_file):
                os.remove(gitingest_file)
        except:
            pass
        
        # Note: We'll leave the storage directory for manual cleanup
        # since Windows file locking makes automatic cleanup difficult
        print(f"\n💡 Note: Test storage left at '{storage_dir}' for manual cleanup if needed")


if __name__ == "__main__":
    success = test_simple_rag()
    sys.exit(0 if success else 1)


================================================
FILE: test_rag_system.py
================================================
#!/usr/bin/env python3
"""
Test script for CPU-optimized RAG system.
This tests the complete pipeline from gitingest file to queryable RAG system.
"""

import asyncio
import sys
import os
from pathlib import Path
import time

# Add services to path
sys.path.append(str(Path(__file__).parent))

try:
    from services.rag_system import CPUOptimizedRAGSystem, GitingestParser
    from services.code_analyzer import MultiLanguageCodeAnalyzer
except ImportError as e:
    print(f"❌ Import error: {e}")
    print("💡 Make sure to install dependencies: pip install chromadb sentence-transformers networkx")
    sys.exit(1)


def test_gitingest_parsing():
    """Test parsing of gitingest files"""
    print("🧪 Testing gitingest parsing...")
    
    # Create a sample gitingest content
    sample_content = """
Directory structure:
├── main.py
├── utils.py
└── README.md

================================================================================

FILE: main.py
def hello_world():
    \"\"\"Simple hello world function\"\"\"
    print("Hello, World!")
    return "success"

if __name__ == "__main__":
    hello_world()

================================================================================

FILE: utils.py
import os
import sys

def get_file_size(filepath):
    \"\"\"Get file size in bytes\"\"\"
    return os.path.getsize(filepath)

class FileManager:
    def __init__(self, base_path):
        self.base_path = base_path
    
    def list_files(self):
        return os.listdir(self.base_path)

================================================================================

FILE: README.md
# Test Project

This is a test project for RAG system.
"""
    
    files = GitingestParser.parse_gitingest_content(sample_content)
    
    print(f"✅ Parsed {len(files)} files:")
    for file_path, content in files.items():
        print(f"  - {file_path} ({len(content)} chars)")
    
    return files


def test_code_analysis():
    """Test multi-language code analysis"""
    print("\n🧪 Testing code analysis...")
    
    # Get sample files from gitingest parsing
    files = test_gitingest_parsing()
    
    analyzer = MultiLanguageCodeAnalyzer()
    project_structure = analyzer.analyze_project(files)
    
    print(f"✅ Analyzed {len(project_structure)} files:")
    for file_path, structure in project_structure.items():
        print(f"  - {file_path}: {structure.language.value}")
        print(f"    Functions: {len(structure.functions)}")
        print(f"    Classes: {len(structure.classes)}")
        print(f"    Imports: {len(structure.imports)}")
    
    return project_structure


def test_rag_system():
    """Test complete RAG system"""
    print("\n🧪 Testing RAG system...")
    
    import tempfile
    
    # Use a temporary directory that gets cleaned up automatically
    with tempfile.TemporaryDirectory() as temp_dir:
        # Initialize RAG system
        rag = CPUOptimizedRAGSystem(storage_path=temp_dir)
    
        # Create a temporary gitingest file
        temp_file = "temp_gitingest.txt"
    sample_content = """
Directory structure:
├── main.py
├── utils.py
└── calculator.py

================================================================================

FILE: main.py
def hello_world():
    \"\"\"Simple hello world function\"\"\"
    print("Hello, World!")
    return "success"

def main():
    \"\"\"Main entry point\"\"\"
    result = hello_world()
    calc = Calculator()
    sum_result = calc.add(5, 3)
    print(f"5 + 3 = {sum_result}")

if __name__ == "__main__":
    main()

================================================================================

FILE: utils.py
import os
import sys
from pathlib import Path

def get_file_size(filepath):
    \"\"\"Get file size in bytes\"\"\"
    return os.path.getsize(filepath)

def read_config(config_path):
    \"\"\"Read configuration file\"\"\"
    with open(config_path, 'r') as f:
        return f.read()

class FileManager:
    def __init__(self, base_path):
        self.base_path = base_path
    
    def list_files(self):
        \"\"\"List all files in base path\"\"\"
        return os.listdir(self.base_path)
    
    def create_file(self, filename, content):
        \"\"\"Create a new file\"\"\"
        filepath = Path(self.base_path) / filename
        with open(filepath, 'w') as f:
            f.write(content)

================================================================================

FILE: calculator.py
class Calculator:
    \"\"\"Simple calculator class\"\"\"
    
    def __init__(self):
        self.history = []
    
    def add(self, a, b):
        \"\"\"Add two numbers\"\"\"
        result = a + b
        self.history.append(f"{a} + {b} = {result}")
        return result
    
    def subtract(self, a, b):
        \"\"\"Subtract two numbers\"\"\"
        result = a - b
        self.history.append(f"{a} - {b} = {result}")
        return result
    
    def multiply(self, a, b):
        \"\"\"Multiply two numbers\"\"\"
        result = a * b
        self.history.append(f"{a} * {b} = {result}")
        return result
    
    def get_history(self):
        \"\"\"Get calculation history\"\"\"
        return self.history.copy()
"""
    
    # Write temporary file
    with open(temp_file, 'w', encoding='utf-8') as f:
        f.write(sample_content)
    
    try:
        # Build RAG system
        print("Building RAG system...")
        metrics = rag.build_rag_from_gitingest(temp_file, "test_collection")
        
        print(f"✅ RAG system built successfully!")
        print(f"  - Total chunks: {metrics.total_chunks}")
        print(f"  - Total files: {metrics.total_files}")
        print(f"  - Languages: {', '.join(metrics.languages_detected)}")
        print(f"  - Build time: {metrics.build_time:.2f}s")
        print(f"  - Index size: {metrics.index_size_mb:.2f}MB")
        
        # Test queries
        test_queries = [
            "How do I add two numbers?",
            "Show me file management functions",
            "What is the main entry point?",
            "Find calculator methods"
        ]
        
        print(f"\n🔍 Testing queries...")
        for query in test_queries:
            print(f"\nQuery: '{query}'")
            result = rag.query(query, max_results=3, collection_name="test_collection")
            
            print(f"  Found {len(result.chunks)} results in {result.query_time:.3f}s")
            for i, (chunk, confidence) in enumerate(zip(result.chunks, result.confidence_scores)):
                print(f"  {i+1}. {chunk.chunk_type} in {chunk.file_path} (confidence: {confidence:.2f})")
                print(f"     {chunk.content[:100]}...")
        
        # Test context generation
        print(f"\n📝 Testing context generation...")
        result = rag.query("calculator functions", max_results=5, collection_name="test_collection")
        context = rag.get_context_for_llm(result, max_tokens=1000)
        print(f"Generated context ({len(context)} chars):")
        print(context[:500] + "..." if len(context) > 500 else context)
        
    finally:
        # Clean up
        if os.path.exists(temp_file):
            os.remove(temp_file)
        
        # Clean up test storage - close ChromaDB first
        try:
            if 'rag' in locals():
                rag.cleanup()
            
            import shutil
            import time
            import gc
            
            # Force garbage collection to release file handles
            gc.collect()
            time.sleep(2)  # Give more time for file handles to close
            
            if os.path.exists("./test_rag_storage"):
                shutil.rmtree("./test_rag_storage")
        except Exception as e:
            print(f"Warning: Could not clean up test storage: {e}")
            print("You may need to manually delete the ./test_rag_storage folder")


def main():
    """Run all tests"""
    print("🚀 Starting RAG System Tests")
    print("=" * 50)
    
    try:
        # Test individual components
        test_gitingest_parsing()
        test_code_analysis()
        
        # Test complete system
        test_rag_system()
        
        print("\n" + "=" * 50)
        print("🎉 All tests completed successfully!")
        
    except Exception as e:
        print(f"\n❌ Test failed: {str(e)}")
        import traceback
        traceback.print_exc()
        return 1
    
    return 0


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)


================================================
FILE: test_silent.py
================================================
#!/usr/bin/env python3
"""
Ultra-clean test with maximum warning suppression
"""

import os
import sys
import warnings
import subprocess

# Maximum suppression
os.environ['TF_CPP_MIN_LOG_LEVEL'] = '3'
os.environ['TF_ENABLE_ONEDNN_OPTS'] = '0'
os.environ['ORT_DISABLE_ALL_LOGS'] = '1'
os.environ['CUDA_VISIBLE_DEVICES'] = ''
os.environ['PYTHONWARNINGS'] = 'ignore'
warnings.filterwarnings('ignore')

from pathlib import Path
import logging

# Suppress all logging
logging.disable(logging.CRITICAL)

sys.path.append(str(Path(__file__).parent))

def run_silent_test():
    """Run the test with maximum output suppression"""
    print("🔇 Running SILENT RAG test...")
    print("=" * 40)
    
    try:
        from services.rag_system import CPUOptimizedRAGSystem
        
        gitingest_file = "gitingest_outputs/Emon69420_HazMapApp_20250905_194000.txt"
        
        if not os.path.exists(gitingest_file):
            print(f"❌ File not found: {gitingest_file}")
            return
        
        print("🔧 Building index (silent)...")
        
        # Redirect ALL output during initialization
        with open(os.devnull, 'w') as devnull:
            old_stdout = sys.stdout
            old_stderr = sys.stderr
            sys.stdout = devnull
            sys.stderr = devnull
            
            try:
                rag = CPUOptimizedRAGSystem(storage_path="./silent_rag")
                metrics = rag.build_rag_from_gitingest(gitingest_file, "silent_test")
            finally:
                sys.stdout = old_stdout
                sys.stderr = old_stderr
        
        print(f"✅ Success! {metrics.total_chunks} chunks from {metrics.total_files} files")
        
        # Test key searches silently
        searches = [
            ("login authentication", "🔐 Login"),
            ("wildfire prediction", "🔥 Wildfire"),
            ("location GPS", "📍 Location"),
            ("map component", "🗺️  Map"),
            ("background task", "⏰ Background"),
            ("user profile", "👤 Profile")
        ]
        
        print(f"\n🎯 Testing {len(searches)} searches:")
        
        for query, emoji_desc in searches:
            # Silent query
            with open(os.devnull, 'w') as devnull:
                old_stderr = sys.stderr
                sys.stderr = devnull
                try:
                    result = rag.query(query, max_results=1, collection_name="silent_test")
                finally:
                    sys.stderr = old_stderr
            
            if result.chunks:
                chunk = result.chunks[0]
                confidence = result.confidence_scores[0]
                
                # Clean output
                file_name = Path(chunk.file_path).name
                func_name = chunk.metadata.get('function_name', 'N/A')
                
                status = "🎯" if confidence > 0.05 else "✅" if confidence > 0.01 else "📌"
                print(f"   {status} {emoji_desc}: {func_name} in {file_name}")
        
        print(f"\n📊 Index: {metrics.total_files} files, {metrics.total_chunks} chunks, {metrics.index_size_mb:.1f}MB")
        print("🎉 Silent test complete!")
        
        # Silent cleanup
        try:
            rag.chroma_client = None
            rag.collection = None
            import shutil
            import time
            time.sleep(0.5)
            if os.path.exists("./silent_rag"):
                shutil.rmtree("./silent_rag")
        except:
            pass
            
    except Exception as e:
        print(f"❌ Error: {e}")

if __name__ == "__main__":
    run_silent_test()


================================================
FILE: test_timing_small.py
================================================
#!/usr/bin/env python3
"""
Test timing with a very small repository to minimize API calls
"""

import requests
import json

BASE_URL = "http://localhost:5000"

def test_small_repo_timing():
    """Test with a very small repository"""
    print("🔍 Testing timing with small repository...")
    print("Note: This might still fail due to rate limits")
    
    # Try with a very small, well-known repo
    url = f"{BASE_URL}/api/repositories/deep-analyze"
    data = {
        "url": "https://github.com/octocat/Hello-World",  # Very small repo
        "max_file_size": 1024 * 1024  # 1MB limit
    }
    
    response = requests.post(url, json=data)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print("✅ Analysis successful!")
        
        # Show timing information
        if 'processing_time' in result:
            timing = result['processing_time']
            print(f"\n⏱️  Timing Results:")
            print(f"  🕐 Total time: {timing['formatted']} ({timing['seconds']}s)")
            print(f"  📊 Minutes: {timing['minutes']}")
        
        stats = result['deep_analysis']['structure']['processing_stats']
        print(f"\n📈 Performance:")
        print(f"  ✅ Files processed: {stats['processed']}")
        print(f"  🚀 Files per second: {stats.get('files_per_second', 0)}")
        print(f"  ⏱️  Start: {stats.get('start_time', 'N/A')}")
        print(f"  🏁 End: {stats.get('end_time', 'N/A')}")
        
    else:
        error = response.json()
        if 'rate limited' in error.get('error', '').lower():
            print("❌ Still rate limited. Try one of these:")
            print("1. Use GitHub token: python test_with_token.py")
            print("2. Wait until 00:39:17 for rate limit reset")
        else:
            print(f"❌ Error: {error}")

if __name__ == "__main__":
    test_small_repo_timing()


================================================
FILE: test_token.py
================================================
#!/usr/bin/env python3
"""
Test script to validate your GitHub token with the Flask API
"""

import requests
import json

BASE_URL = "http://localhost:5000"

def test_github_token():
    """Test GitHub token authentication"""
    
    # Get token from user
    print("🔑 GitHub Token Tester")
    print("=" * 30)
    
    token = input("Enter your GitHub Personal Access Token: ").strip()
    
    if not token:
        print("❌ No token provided!")
        return
    
    print(f"\n🔍 Testing token: {token[:8]}...")
    
    # Test token with login endpoint
    url = f"{BASE_URL}/auth/github/login"
    data = {"token": token}
    
    try:
        response = requests.post(url, json=data)
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            user = result['user']
            
            print("✅ Token is valid!")
            print(f"👤 User: {user['login']}")
            print(f"📧 Email: {user.get('email', 'Not provided')}")
            print(f"🔐 Scopes: {', '.join(result['scopes'])}")
            
            # Test repository access with token
            print(f"\n🔍 Testing repository access...")
            test_repo_with_token()
            
        else:
            error = response.json()
            print(f"❌ Token validation failed: {error.get('error')}")
            
    except requests.exceptions.ConnectionError:
        print("❌ Error: Could not connect to Flask server.")
        print("Make sure the server is running with: python app.py")
    except Exception as e:
        print(f"❌ Error: {e}")

def test_repo_with_token():
    """Test repository access with authenticated token"""
    
    # Test with your repository
    url = f"{BASE_URL}/api/repositories/validate"
    data = {"url": "https://github.com/Emon69420/HazMapApp"}
    
    response = requests.post(url, json=data)
    
    if response.status_code == 200:
        result = response.json()
        repo = result['repository']
        print(f"✅ Repository access successful!")
        print(f"📁 Repo: {repo['full_name']}")
        print(f"🔒 Private: {repo['private']}")
        print(f"⭐ Stars: {repo['stargazers_count']}")
    else:
        print(f"⚠️  Repository access issue: {response.json()}")

def show_token_info():
    """Show information about GitHub tokens"""
    print("\n📋 GitHub Token Information:")
    print("=" * 40)
    print("🔗 Get token at: https://github.com/settings/tokens")
    print("\n📝 Required scopes:")
    print("  ✅ repo (for private repositories)")
    print("  ✅ public_repo (for public repositories)")
    print("  ✅ user:email (for user information)")
    print("\n⚠️  Security tips:")
    print("  • Never share your token publicly")
    print("  • Set appropriate expiration dates")
    print("  • Use environment variables in production")
    print("  • Revoke tokens you no longer need")

if __name__ == "__main__":
    show_token_info()
    test_github_token()


================================================
FILE: test_with_token.py
================================================
#!/usr/bin/env python3
"""
Test with GitHub token to bypass rate limits
"""

import requests
import json

BASE_URL = "http://localhost:5000"

def login_with_token():
    """Login with GitHub token first"""
    # Replace with your actual GitHub token
    github_token = input("Enter your GitHub Personal Access Token: ").strip()
    
    if not github_token:
        print("❌ No token provided")
        return False
    
    print("🔐 Logging in with GitHub token...")
    
    url = f"{BASE_URL}/auth/github/login"
    data = {"token": github_token}
    
    response = requests.post(url, json=data)
    
    if response.status_code == 200:
        result = response.json()
        print(f"✅ Logged in as: {result['user']['login']}")
        return True
    else:
        print(f"❌ Login failed: {response.json()}")
        return False

def test_deep_analysis_with_auth():
    """Test deep analysis with authentication"""
    print("\n🔍 Testing deep analysis with authentication...")
    
    url = f"{BASE_URL}/api/repositories/deep-analyze"
    data = {
        "url": "https://github.com/Emon69420/HazMapApp",
        "max_file_size": 512 * 1024
    }
    
    # Use session to maintain login
    session = requests.Session()
    
    response = session.post(url, json=data)
    print(f"Status: {response.status_code}")
    
    if response.status_code == 200:
        result = response.json()
        print("✅ Deep analysis successful!")
        
        if 'processing_time' in result:
            timing = result['processing_time']
            print(f"⏱️  Processing time: {timing['formatted']}")
        
        stats = result['deep_analysis']['structure']['processing_stats']
        print(f"📊 Files processed: {stats['processed']}")
        
    else:
        print(f"❌ Error: {response.json()}")

if __name__ == "__main__":
    print("🚀 Testing with GitHub Authentication")
    print("=" * 50)
    
    if login_with_token():
        test_deep_analysis_with_auth()
    else:
        print("\n💡 To get a GitHub token:")
        print("1. Go to https://github.com/settings/tokens")
        print("2. Generate new token (classic)")
        print("3. Select 'repo' scope")
        print("4. Copy the token and paste it here")


================================================
FILE: .env.example
================================================
# Flask Configuration
SECRET_KEY=your-secret-key-here
FLASK_ENV=development

# GitHub OAuth Configuration (optional - for OAuth flow)
GITHUB_CLIENT_ID=your-github-client-id
GITHUB_CLIENT_SECRET=your-github-client-secret
GITHUB_REDIRECT_URI=http://localhost:5000/auth/github/callback

# Redis Configuration (for caching)
REDIS_URL=redis://localhost:6379/0

# Gitingest Configuration
GITINGEST_MAX_FILE_SIZE=10485760
GITINGEST_TIMEOUT=300
GITINGEST_TEMP_DIR=/tmp/gitingest
GITINGEST_INCLUDE_PATTERNS=*.py,*.js,*.ts,*.jsx,*.tsx,*.md,*.json,*.yaml,*.yml,README*,LICENSE*,*.txt,*.html,*.css,*.scss
GITINGEST_EXCLUDE_PATTERNS=node_modules,__pycache__,.git,*.pyc,*.log


================================================
FILE: clean_rag_storage/chunks_metadata.json
================================================
[
  {
    "chunk_id": "67025e64a52b",
    "file_path": "Backend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "691e32ecc8cc",
    "file_path": "Backend/server.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 9,
    "metadata": {
      "total_lines": 9,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4d508d8c3cfd",
    "file_path": "Backend/public/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8c84170a71ba",
    "file_path": "Backend/public/productDetail.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ec8f9391c2a",
    "file_path": "Backend/public/ProductForm.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8dcb12fead7a",
    "file_path": "Backend/src/app.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "62ffc1f1a33a",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "connect",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "4fb201893988",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "5fe7969b2835",
    "file_path": "Backend/src/models/cart.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d9449efdabd5",
    "file_path": "Backend/src/models/product.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "a683d430351d",
    "file_path": "Backend/src/models/user.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 25,
    "metadata": {
      "total_lines": 25,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "08dd729142ca",
    "file_path": "Backend/src/routes/index.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "ee45bd1ff134",
    "file_path": "Backend/src/routes/login.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "121b43821afe",
    "file_path": "Frontend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d0433f5bc5ff",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "@eslint/js",
          "items": [
            "js"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "globals",
          "items": [
            "globals"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-hooks",
          "items": [
            "reactHooks"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-refresh",
          "items": [
            "reactRefresh"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint/config",
          "items": [
            "defineConfig",
            "globalIgnores"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "94d42860dd79",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 29,
    "metadata": {
      "total_lines": 29,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "271ef0c96d71",
    "file_path": "Frontend/index.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bd75660c61cd",
    "file_path": "Frontend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "90c2f169ec23",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "vite",
          "items": [
            "defineConfig"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@vitejs/plugin-react",
          "items": [
            "react"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "27669808453d",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 7,
    "metadata": {
      "total_lines": 7,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "67671a0eda01",
    "file_path": "Frontend/src/App.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c3cd7de0e431",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "74150ecad46f",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 15,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "remixicon/fonts/remixicon.css",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/AddProducts",
          "items": [
            "AddProducts"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/Home",
          "items": [
            "Home"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/ProductDetail",
          "items": [
            "ProductDetail"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserHome",
          "items": [
            "UserHome"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Cart",
          "items": [
            "Cart"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserProduct",
          "items": [
            "UserProduct"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter as Router",
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/CartContext",
          "items": [
            "CartProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./components/Footer",
          "items": [
            "Footer"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "71f69353452e",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 48,
    "metadata": {
      "total_lines": 48,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0dbb727bd2c1",
    "file_path": "Frontend/src/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "664c3a393572",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "StrictMode"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-dom/client",
          "items": [
            "createRoot"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./index.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./App.jsx",
          "items": [
            "App"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "165410ac6187",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "259f26e3f750",
    "file_path": "Frontend/src/components/Footer.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3e71967695d4",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 4,
    "end_line": 4,
    "metadata": {
      "function_name": "Footer",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "78d6a8efab59",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Footer.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "01128ff5caca",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c0d90cc90299",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Navbar",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b1bd4586db29",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Navbar.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "7a7bb02b537b",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "339c9ac50f7b",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "AddProducts",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5439cd6ea3",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f164f8b47a98",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./AddProducts.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ImageUploader",
          "items": [
            "ImageUploader"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "138c3aca1211",
    "file_path": "Frontend/src/Pages/Cart.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e7beb6b3ef69",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "Cart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0bdf4a3cfa42",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "fetchCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "070348445d62",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 21,
    "end_line": 21,
    "metadata": {
      "function_name": "groupByProduct",
      "parameters": [
        "items"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b803899a396e",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 36,
    "end_line": 36,
    "metadata": {
      "function_name": "reduceQuantity",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "50169d224934",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 42,
    "end_line": 42,
    "metadata": {
      "function_name": "deleteProduct",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb5bd96b87ab",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Cart.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "556ef1af9ac7",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "CartProvider",
      "parameters": [
        "{ children }"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "53acf3505fdf",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [
        "product"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "bea1be21c768",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 22,
    "end_line": 22,
    "metadata": {
      "function_name": "useCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3d9b102f8d5d",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "createContext",
            "useState",
            "useContext"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "24936b882742",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "273332ddca53",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f8536fc9158a",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "6c3994d19fbe",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Home.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "a826b13adc20",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "ImageUploader",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "adacf7966fbe",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "onUploadSuccess",
      "parameters": [
        "res"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b7aa538f660b",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 11,
    "end_line": 11,
    "metadata": {
      "function_name": "onUploadError",
      "parameters": [
        "err"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "45d493f00ff1",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "imagekitio-react",
          "items": [
            "IKContext",
            "IKUpload"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "4dbd45181666",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 36,
    "metadata": {
      "total_lines": 36,
      "complexity_score": 3,
      "entry_points": [
        "default_export"
      ],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7eadb38334fa",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Login",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab014c735a3d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3b5bcba56c7d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Login.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2c682190a42f",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "07bc97759310",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "f382c23d88dd",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ProductDetail.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "38b4e00622ed",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "084501a9e80e",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "79c501b6830c",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserHome.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "ae6f4936efc8",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0ab1ed2b84cd",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 19,
    "end_line": 19,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "296c64989e4f",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleAddToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "65fb31efec89",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 35,
    "end_line": 35,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2a8b961d3554",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserProduct.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  }
]


================================================
FILE: clean_rag_storage/project_structure.json
================================================
{
  "Backend/package.json": {
    "language": "unknown",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/server.js": {
    "language": "javascript",
    "total_lines": 9,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/index.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/productDetail.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/ProductForm.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/app.js": {
    "language": "javascript",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/db/db.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/cart.model.js": {
    "language": "javascript",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/product.model.js": {
    "language": "javascript",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/user.model.js": {
    "language": "javascript",
    "total_lines": 25,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/cart.router.js": {
    "language": "javascript",
    "total_lines": 68,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/index.router.js": {
    "language": "javascript",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/login.router.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/product.router.js": {
    "language": "javascript",
    "total_lines": 126,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/user.router.js": {
    "language": "javascript",
    "total_lines": 81,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/README.md": {
    "language": "unknown",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/eslint.config.js": {
    "language": "javascript",
    "total_lines": 29,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/index.html": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/package.json": {
    "language": "unknown",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/vite.config.js": {
    "language": "javascript",
    "total_lines": 7,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/App.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/App.jsx": {
    "language": "javascript",
    "total_lines": 48,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/index.css": {
    "language": "unknown",
    "total_lines": 11,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/main.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.css": {
    "language": "unknown",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/components/Navbar.css": {
    "language": "unknown",
    "total_lines": 80,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Navbar.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/AddProducts.css": {
    "language": "unknown",
    "total_lines": 69,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/AddProducts.jsx": {
    "language": "javascript",
    "total_lines": 105,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Cart.css": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Cart.jsx": {
    "language": "javascript",
    "total_lines": 112,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/CartContext.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.css": {
    "language": "unknown",
    "total_lines": 128,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.jsx": {
    "language": "javascript",
    "total_lines": 52,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ImageUploader.jsx": {
    "language": "javascript",
    "total_lines": 36,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Login.css": {
    "language": "unknown",
    "total_lines": 62,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Login.jsx": {
    "language": "javascript",
    "total_lines": 55,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ProductDetail.css": {
    "language": "unknown",
    "total_lines": 127,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/ProductDetail.jsx": {
    "language": "javascript",
    "total_lines": 59,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserHome.css": {
    "language": "unknown",
    "total_lines": 186,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserHome.jsx": {
    "language": "javascript",
    "total_lines": 65,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserProduct.css": {
    "language": "unknown",
    "total_lines": 137,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserProduct.jsx": {
    "language": "javascript",
    "total_lines": 78,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  }
}


================================================
FILE: final_rag/chunks_metadata.json
================================================
[
  {
    "chunk_id": "312ddba97a54",
    "file_path": "eas.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 20,
    "metadata": {
      "total_lines": 20,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "18298fc1f77b",
    "file_path": "LocationContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 13,
    "end_line": 13,
    "metadata": {
      "function_name": "useLocation",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "767115b3f1a6",
    "file_path": "LocationContext.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 2,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "215fc9769838",
    "file_path": "supabaseClient.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "@supabase/supabase-js",
          "items": [
            "createClient"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@react-native-async-storage/async-storage",
          "items": [
            "AsyncStorage"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "727bb63f98e6",
    "file_path": "supabaseClient.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "6b098e922f1d",
    "file_path": "tsconfig.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7324db055ad9",
    "file_path": ".npmrc",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "40f98f6bf297",
    "file_path": ".prettierrc",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "total_lines": 6,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c315c5a10e4b",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "NotFoundScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "e12457aeaebf",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "handleGoHome",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "814e11d6dbf2",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "Stack",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native",
          "items": [
            "StyleSheet",
            "Text",
            "View",
            "TouchableOpacity"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "9bc38684bbf2",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 39,
    "metadata": {
      "total_lines": 39,
      "complexity_score": 2,
      "entry_points": [
        "default_export"
      ],
      "function_count": 2,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4a18992c80c2",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "RootLayoutContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "56ca29d9cb2a",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "initBackgroundTasks",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "603d98b8e27e",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 48,
    "end_line": 48,
    "metadata": {
      "function_name": "RootLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "a5d1b32a210e",
    "file_path": "app/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 8,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Stack"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-status-bar",
          "items": [
            "StatusBar"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../hooks/useFrameworkReady",
          "items": [
            "useFrameworkReady"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../LocationContext",
          "items": [
            "LocationProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../contexts/AuthContext",
          "items": [
            "AuthProvider",
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../components/LoadingScreen",
          "items": [
            "LoadingScreen"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../services/backgroundTasks",
          "items": [
            "startBackgroundFetch"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "1ed82df8a297",
    "file_path": "app/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "dd0fdb41f6de",
    "file_path": "app/index.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Redirect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../components/LoadingScreen",
          "items": [
            "LoadingScreen"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "401fd974d653",
    "file_path": "app/index.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 18,
    "metadata": {
      "total_lines": 18,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "fa857c8eebc9",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "AuthLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "aeceda9da57e",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Stack"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "56a6fd9e2335",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 10,
    "metadata": {
      "total_lines": 10,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "eda1d0563b4b",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "LoginScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b5e0d66f466a",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 24,
    "end_line": 24,
    "metadata": {
      "function_name": "handleLogin",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5bce8d3658",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame",
            "Eye",
            "EyeOff"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2a55a766836f",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "SignUpScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "26a4be08d992",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleSignUp",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bc23219fe518",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 51,
    "end_line": 51,
    "metadata": {
      "function_name": "updateFormData",
      "parameters": [
        "field",
        "value"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "7188827a5b5e",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame",
            "Eye",
            "EyeOff"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "f3995e9297a2",
    "file_path": "app/(tabs)/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 13,
    "end_line": 13,
    "metadata": {
      "function_name": "TabLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "13be60e846a7",
    "file_path": "app/(tabs)/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Tabs"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "expo-router",
          "items": [
            "useRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "1544cb6b8061",
    "file_path": "app/(tabs)/air-quality.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "6e81ff14212e",
    "file_path": "app/(tabs)/evacuation.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ade6b64a03a",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 138,
    "end_line": 138,
    "metadata": {
      "function_name": "MapScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8bbedf3b3d8e",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 178,
    "end_line": 178,
    "metadata": {
      "function_name": "getParsedPrediction",
      "parameters": [
        "pred"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "306fdd46b4f5",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 191,
    "end_line": 191,
    "metadata": {
      "function_name": "fetchPollutants",
      "parameters": [
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "83232ab6fe3a",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 224,
    "end_line": 224,
    "metadata": {
      "function_name": "fetchWildfireRisk",
      "parameters": [
        "lat",
        "lng",
        "env"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2e02727f2cb2",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 271,
    "end_line": 271,
    "metadata": {
      "function_name": "updateWildfireRisk",
      "parameters": [
        "lat",
        "lng",
        "env"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bd1a7aa373a8",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 276,
    "end_line": 276,
    "metadata": {
      "function_name": "fetchEnvData",
      "parameters": [
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ae2979b88a97",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 395,
    "end_line": 395,
    "metadata": {
      "function_name": "loadWildfireData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "4d822c261a4e",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 436,
    "end_line": 436,
    "metadata": {
      "function_name": "getSeverityColor",
      "parameters": [
        "severity"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "94adf7a96bcc",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 446,
    "end_line": 446,
    "metadata": {
      "function_name": "toggleLayer",
      "parameters": [
        "layer"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "98f07d93d3fb",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 451,
    "end_line": 451,
    "metadata": {
      "function_name": "fetchSuggestions",
      "parameters": [
        "text"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "a3c22f590276",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 471,
    "end_line": 471,
    "metadata": {
      "function_name": "fetchPlaceDetails",
      "parameters": [
        "placeId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "471ed44419c4",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "imports": [
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "TriangleAlert as AlertTriangle",
            "Flame",
            "Shield",
            "Navigation",
            "RefreshCw",
            "Eye",
            "EyeOff",
            "X",
            "Crosshair"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native-maps",
          "items": [
            "MapView"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native-google-places-autocomplete",
          "items": [
            "GooglePlacesAutocomplete"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../LocationContext",
          "items": [
            "useLocation"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "lottie-react-native",
          "items": [
            "LottieView"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b15a6604624c",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 28,
    "end_line": 28,
    "metadata": {
      "function_name": "ProfileScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "898a144c6c83",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 55,
    "end_line": 55,
    "metadata": {
      "function_name": "getCurrentLocation",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "dbd1820c6019",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 71,
    "end_line": 71,
    "metadata": {
      "function_name": "getLocationName",
      "parameters": [
        "latitude",
        "longitude"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ebe512e12f2a",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 101,
    "end_line": 101,
    "metadata": {
      "function_name": "checkBackgroundFetchStatus",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bda8f4fbf68e",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 110,
    "end_line": 110,
    "metadata": {
      "function_name": "toggleNotification",
      "parameters": [
        "key"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "6f258af80b9c",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 117,
    "end_line": 117,
    "metadata": {
      "function_name": "toggleBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "5de4cc88fd99",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 134,
    "end_line": 134,
    "metadata": {
      "function_name": "handleLogout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9bd2b4fbe017",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 164,
    "end_line": 164,
    "metadata": {
      "function_name": "handleEmergencyContact",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "058ce9186cad",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 181,
    "end_line": 181,
    "metadata": {
      "function_name": "testWildfirePrediction",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "84db07343256",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 8,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Bell",
            "MapPin",
            "Shield",
            "LogOut",
            "TriangleAlert as AlertTriangle",
            "Smartphone",
            "Clock"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../services/backgroundTasks",
          "items": [
            "startBackgroundFetch",
            "stopBackgroundFetch",
            "getBackgroundFetchStatus"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "expo-background-fetch",
          "items": [
            "BackgroundFetch"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-notifications",
          "items": [
            "Notifications"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../LocationContext",
          "items": [
            "useLocation"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "99e37739f889",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 32,
    "end_line": 32,
    "metadata": {
      "function_name": "UpdatesScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ccf34dafe1f2",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 43,
    "end_line": 43,
    "metadata": {
      "function_name": "loadUpdates",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9ae53d90a903",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 115,
    "end_line": 115,
    "metadata": {
      "function_name": "getRoleColor",
      "parameters": [
        "role"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "76491eaa323b",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 124,
    "end_line": 124,
    "metadata": {
      "function_name": "getCategoryColor",
      "parameters": [
        "category"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "11e3d4ee58d8",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 139,
    "end_line": 139,
    "metadata": {
      "function_name": "timeAgo",
      "parameters": [
        "timestamp"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "21a2713c80d2",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 152,
    "end_line": 152,
    "metadata": {
      "function_name": "renderPreventionContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "cd2716a9321e",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 261,
    "end_line": 261,
    "metadata": {
      "function_name": "renderUpdatesContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2ff72b0e05e8",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "lucide-react-native",
          "items": [
            "MessageSquare",
            "MapPin",
            "TriangleAlert as AlertTriangle",
            "CircleCheck as CheckCircle",
            "User",
            "Flame",
            "Shield",
            "Info"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "a0d07c2d0897",
    "file_path": "assets/lottie/birds.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "982d460ac4b3",
    "file_path": "assets/lottie/smoke.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bbf779cae3b5",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "LoadingScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "9658e874cc9c",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native",
          "items": [
            "View",
            "Text",
            "ActivityIndicator",
            "StyleSheet"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "6528c5264626",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 47,
    "metadata": {
      "total_lines": 47,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "db233bd2a1d2",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "useAuthContext",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "03bed49268c8",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 32,
    "end_line": 32,
    "metadata": {
      "function_name": "getInitialSession",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "da60016f3392",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 65,
    "end_line": 65,
    "metadata": {
      "function_name": "signIn",
      "parameters": [
        "email",
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "c687165ed16c",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 78,
    "end_line": 78,
    "metadata": {
      "function_name": "signUp",
      "parameters": [
        "email",
        "password",
        "userData?"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "85dee60632fa",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 94,
    "end_line": 94,
    "metadata": {
      "function_name": "signOut",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb32d4766698",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "@supabase/supabase-js",
          "items": [
            "Session",
            "User"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "3f0cf074215f",
    "file_path": "HazEnd - Flask Backend/backend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 23,
    "metadata": {
      "total_lines": 23,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "772e62648b13",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 22,
    "end_line": 59,
    "metadata": {
      "function_name": "get_wildfire_risk_prediction",
      "parameters": [
        "data",
        "openrouter_api_key"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0f994e8d9d26",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 63,
    "end_line": 64,
    "metadata": {
      "function_name": "home",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2625e7ee5b10",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 68,
    "end_line": 69,
    "metadata": {
      "function_name": "about",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8b4dbd6ada2e",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 72,
    "end_line": 160,
    "metadata": {
      "function_name": "gee_data",
      "parameters": [],
      "calls": [
        "float",
        "float",
        "get_wildfire_risk_prediction",
        "jsonify",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "timedelta"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3a02695fbd2b",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "imports": [
        {
          "module": "flask",
          "items": [
            "Flask",
            "render_template",
            "request",
            "jsonify"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "ee",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "datetime",
          "items": [
            "date",
            "timedelta"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "requests",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "json",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "os",
          "items": [],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "5c1ee8b678a0",
    "file_path": "HazEnd - Flask Backend/backend/dev-requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "total_lines": 2,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0d0490164c45",
    "file_path": "HazEnd - Flask Backend/backend/pyproject.toml",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "31dc80fd12b6",
    "file_path": "HazEnd - Flask Backend/backend/requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "44c01fdebb9e",
    "file_path": "HazEnd - Flask Backend/backend/static/site.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 27,
    "metadata": {
      "total_lines": 27,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "fe64fef950a1",
    "file_path": "HazEnd - Flask Backend/backend/templates/about.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9590f6bfb4e9",
    "file_path": "HazEnd - Flask Backend/backend/templates/base.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 21,
    "metadata": {
      "total_lines": 21,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3a480ac3ce83",
    "file_path": "HazEnd - Flask Backend/backend/templates/home.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "17110ac13b47",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 6,
    "end_line": 8,
    "metadata": {
      "function_name": "client",
      "parameters": [],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "01e1d03521ae",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 11,
    "end_line": 13,
    "metadata": {
      "function_name": "test_home",
      "parameters": [
        "client"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f3cd43aa286b",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 16,
    "end_line": 18,
    "metadata": {
      "function_name": "test_about",
      "parameters": [
        "client"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "12b72335b236",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "pytest",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "app",
          "items": [
            "app"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b21fdf531b82",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "file",
    "language": "python",
    "start_line": 1,
    "end_line": 18,
    "metadata": {
      "total_lines": 18,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e5a76aeeb136",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "useAuth",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "01a35b047da1",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "getInitialSession",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "d3249165c436",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 43,
    "end_line": 43,
    "metadata": {
      "function_name": "signIn",
      "parameters": [
        "email",
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "e11107201196",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 56,
    "end_line": 56,
    "metadata": {
      "function_name": "signUp",
      "parameters": [
        "email",
        "password",
        "userData?"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "23f1d3c273d2",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 72,
    "end_line": 72,
    "metadata": {
      "function_name": "signOut",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9619664454ef",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "useState",
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@supabase/supabase-js",
          "items": [
            "Session",
            "User"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "11c11958c8b4",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 9,
    "end_line": 9,
    "metadata": {
      "function_name": "useFrameworkReady",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "d9e22a8b8575",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b47c1293598a",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 2,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7e87c15ea40c",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 203,
    "end_line": 203,
    "metadata": {
      "function_name": "sendWildfireAlert",
      "parameters": [
        "prediction",
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab4b4c98a52a",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 252,
    "end_line": 252,
    "metadata": {
      "function_name": "startBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "0a4f5c555350",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 268,
    "end_line": 268,
    "metadata": {
      "function_name": "stopBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "a60c01422c16",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 278,
    "end_line": 278,
    "metadata": {
      "function_name": "getBackgroundFetchStatus",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "705583e4929d",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "expo-background-fetch",
          "items": [
            "BackgroundFetch"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-task-manager",
          "items": [
            "TaskManager"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-notifications",
          "items": [
            "Notifications"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "ab5c40bc97a6",
    "file_path": "types/env.d.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "cb2cb413cf4f",
    "file_path": ".bolt/config.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "total_lines": 3,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  }
]


================================================
FILE: final_rag/project_structure.json
================================================
{
  "README.md": {
    "language": "unknown",
    "total_lines": 212,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app.json": {
    "language": "unknown",
    "total_lines": 79,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "BACKGROUND_TASKS_README.md": {
    "language": "unknown",
    "total_lines": 95,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "eas.json": {
    "language": "unknown",
    "total_lines": 20,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "LocationContext.tsx": {
    "language": "typescript",
    "total_lines": 22,
    "complexity_score": 2,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "package.json": {
    "language": "unknown",
    "total_lines": 64,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "supabaseClient.ts": {
    "language": "typescript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "tsconfig.json": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".npmrc": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".prettierrc": {
    "language": "unknown",
    "total_lines": 6,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/+not-found.tsx": {
    "language": "typescript",
    "total_lines": 39,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/_layout.tsx": {
    "language": "typescript",
    "total_lines": 56,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/index.tsx": {
    "language": "typescript",
    "total_lines": 18,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/_layout.tsx": {
    "language": "typescript",
    "total_lines": 10,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/login.tsx": {
    "language": "typescript",
    "total_lines": 223,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/signup.tsx": {
    "language": "typescript",
    "total_lines": 245,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/_layout.tsx": {
    "language": "typescript",
    "total_lines": 94,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/air-quality.tsx": {
    "language": "typescript",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/(tabs)/evacuation.tsx": {
    "language": "typescript",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/(tabs)/index.tsx": {
    "language": "typescript",
    "total_lines": 1091,
    "complexity_score": 14,
    "function_count": 11,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/profile.tsx": {
    "language": "typescript",
    "total_lines": 480,
    "complexity_score": 10,
    "function_count": 9,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/updates.tsx": {
    "language": "typescript",
    "total_lines": 667,
    "complexity_score": 8,
    "function_count": 7,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "assets/lottie/birds.json": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "assets/lottie/smoke.json": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "components/LoadingScreen.tsx": {
    "language": "typescript",
    "total_lines": 47,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "contexts/AuthContext.tsx": {
    "language": "typescript",
    "total_lines": 119,
    "complexity_score": 6,
    "function_count": 5,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/README.md": {
    "language": "unknown",
    "total_lines": 23,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/app.py": {
    "language": "python",
    "total_lines": 163,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "__main__"
    ]
  },
  "HazEnd - Flask Backend/backend/dev-requirements.txt": {
    "language": "unknown",
    "total_lines": 2,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/pyproject.toml": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/requirements.txt": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/static/site.css": {
    "language": "unknown",
    "total_lines": 27,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/about.html": {
    "language": "unknown",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/base.html": {
    "language": "unknown",
    "total_lines": 21,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/home.html": {
    "language": "unknown",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/tests/test_app.py": {
    "language": "python",
    "total_lines": 18,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "hooks/useAuth.ts": {
    "language": "typescript",
    "total_lines": 91,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": []
  },
  "hooks/useFrameworkReady.ts": {
    "language": "typescript",
    "total_lines": 13,
    "complexity_score": 2,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "services/backgroundTasks.ts": {
    "language": "typescript",
    "total_lines": 286,
    "complexity_score": 6,
    "function_count": 4,
    "class_count": 0,
    "entry_points": []
  },
  "types/env.d.ts": {
    "language": "typescript",
    "total_lines": 11,
    "complexity_score": 1,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".bolt/config.json": {
    "language": "unknown",
    "total_lines": 3,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  }
}


================================================
FILE: frontend/src/App.tsx
================================================
[Empty file]


================================================
FILE: gitingest_outputs/Emon69420_HazMapApp_20250905_194000.txt
================================================
[Binary file]


================================================
FILE: gitingest_outputs/Emon69420_Navigit_20250906_111750.txt
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8d in position 60842: character maps to <undefined>


================================================
FILE: gitingest_outputs/github_gitignore_20250905_193039.txt
================================================
Directory structure:
â””â”€â”€ github-gitignore/
    â”œâ”€â”€ README.md
    â”œâ”€â”€ Actionscript.gitignore
    â”œâ”€â”€ Ada.gitignore
    â”œâ”€â”€ AdventureGameStudio.gitignore
    â”œâ”€â”€ Agda.gitignore
    â”œâ”€â”€ AL.gitignore
    â”œâ”€â”€ Android.gitignore
    â”œâ”€â”€ Angular.gitignore
    â”œâ”€â”€ AppceleratorTitanium.gitignore
    â”œâ”€â”€ AppEngine.gitignore
    â”œâ”€â”€ ArchLinuxPackages.gitignore
    â”œâ”€â”€ Autotools.gitignore
    â”œâ”€â”€ Ballerina.gitignore
    â”œâ”€â”€ C++.gitignore
    â”œâ”€â”€ C.gitignore
    â”œâ”€â”€ CakePHP.gitignore
    â”œâ”€â”€ CFWheels.gitignore
    â”œâ”€â”€ ChefCookbook.gitignore
    â”œâ”€â”€ Clojure.gitignore
    â”œâ”€â”€ CMake.gitignore
    â”œâ”€â”€ CodeIgniter.gitignore
    â”œâ”€â”€ CommonLisp.gitignore
    â”œâ”€â”€ Composer.gitignore
    â”œâ”€â”€ Concrete5.gitignore
    â”œâ”€â”€ CONTRIBUTING.md
    â”œâ”€â”€ Coq.gitignore
    â”œâ”€â”€ CraftCMS.gitignore
    â”œâ”€â”€ CUDA.gitignore
    â”œâ”€â”€ D.gitignore
    â”œâ”€â”€ Dart.gitignore
    â”œâ”€â”€ Delphi.gitignore
    â”œâ”€â”€ DM.gitignore
    â”œâ”€â”€ Dotnet.gitignore
    â”œâ”€â”€ Drupal.gitignore
    â”œâ”€â”€ Eagle.gitignore
    â”œâ”€â”€ ecu.test.gitignore
    â”œâ”€â”€ Elisp.gitignore
    â”œâ”€â”€ Elixir.gitignore
    â”œâ”€â”€ Elm.gitignore
    â”œâ”€â”€ EPiServer.gitignore
    â”œâ”€â”€ Erlang.gitignore
    â”œâ”€â”€ ExpressionEngine.gitignore
    â”œâ”€â”€ ExtJs.gitignore
    â”œâ”€â”€ Fancy.gitignore
    â”œâ”€â”€ Finale.gitignore
    â”œâ”€â”€ Firebase.gitignore
    â”œâ”€â”€ FlaxEngine.gitignore
    â”œâ”€â”€ Flutter.gitignore
    â”œâ”€â”€ ForceDotCom.gitignore
    â”œâ”€â”€ Fortran.gitignore
    â”œâ”€â”€ FuelPHP.gitignore
    â”œâ”€â”€ Gcov.gitignore
    â”œâ”€â”€ GitBook.gitignore
    â”œâ”€â”€ GitHubPages.gitignore
    â”œâ”€â”€ Gleam.gitignore
    â”œâ”€â”€ Go.gitignore
    â”œâ”€â”€ Godot.gitignore
    â”œâ”€â”€ Gradle.gitignore
    â”œâ”€â”€ Grails.gitignore
    â”œâ”€â”€ GWT.gitignore
    â”œâ”€â”€ Haskell.gitignore
    â”œâ”€â”€ Haxe.gitignore
    â”œâ”€â”€ HIP.gitignore
    â”œâ”€â”€ IAR.gitignore
    â”œâ”€â”€ Idris.gitignore
    â”œâ”€â”€ IGORPro.gitignore
    â”œâ”€â”€ Java.gitignore
    â”œâ”€â”€ JBoss.gitignore
    â”œâ”€â”€ Jekyll.gitignore
    â”œâ”€â”€ JENKINS_HOME.gitignore
    â”œâ”€â”€ Joomla.gitignore
    â”œâ”€â”€ Julia.gitignore
    â”œâ”€â”€ Katalon.gitignore
    â”œâ”€â”€ KiCad.gitignore
    â”œâ”€â”€ Kohana.gitignore
    â”œâ”€â”€ Kotlin.gitignore
    â”œâ”€â”€ LabVIEW.gitignore
    â”œâ”€â”€ LangChain.gitignore
    â”œâ”€â”€ Laravel.gitignore
    â”œâ”€â”€ Leiningen.gitignore
    â”œâ”€â”€ LemonStand.gitignore
    â”œâ”€â”€ LICENSE
    â”œâ”€â”€ Lilypond.gitignore
    â”œâ”€â”€ Lithium.gitignore
    â”œâ”€â”€ Lua.gitignore
    â”œâ”€â”€ Luau.gitignore
    â”œâ”€â”€ Magento.gitignore
    â”œâ”€â”€ Maven.gitignore
    â”œâ”€â”€ Mercury.gitignore
    â”œâ”€â”€ MetaProgrammingSystem.gitignore
    â”œâ”€â”€ Modelica.gitignore
    â”œâ”€â”€ ModelSim.gitignore
    â”œâ”€â”€ Nanoc.gitignore
    â”œâ”€â”€ Nestjs.gitignore
    â”œâ”€â”€ Nextjs.gitignore
    â”œâ”€â”€ Nim.gitignore
    â”œâ”€â”€ Nix.gitignore
    â”œâ”€â”€ Node.gitignore
    â”œâ”€â”€ Objective-C.gitignore
    â”œâ”€â”€ OCaml.gitignore
    â”œâ”€â”€ Opa.gitignore
    â”œâ”€â”€ OpenCart.gitignore
    â”œâ”€â”€ OracleForms.gitignore
    â”œâ”€â”€ Packer.gitignore
    â”œâ”€â”€ Perl.gitignore
    â”œâ”€â”€ Phalcon.gitignore
    â”œâ”€â”€ PlayFramework.gitignore
    â”œâ”€â”€ Plone.gitignore
    â”œâ”€â”€ Prestashop.gitignore
    â”œâ”€â”€ Processing.gitignore
    â”œâ”€â”€ PureScript.gitignore
    â”œâ”€â”€ Python.gitignore
    â”œâ”€â”€ Qooxdoo.gitignore
    â”œâ”€â”€ Qt.gitignore
    â”œâ”€â”€ R.gitignore
    â”œâ”€â”€ Racket.gitignore
    â”œâ”€â”€ Rails.gitignore
    â”œâ”€â”€ Raku.gitignore
    â”œâ”€â”€ ReScript.gitignore
    â”œâ”€â”€ RhodesRhomobile.gitignore
    â”œâ”€â”€ ROS.gitignore
    â”œâ”€â”€ Ruby.gitignore
    â”œâ”€â”€ Rust.gitignore
    â”œâ”€â”€ Salesforce.gitignore
    â”œâ”€â”€ Sass.gitignore
    â”œâ”€â”€ Scala.gitignore
    â”œâ”€â”€ Scheme.gitignore
    â”œâ”€â”€ SCons.gitignore
    â”œâ”€â”€ Scrivener.gitignore
    â”œâ”€â”€ Sdcc.gitignore
    â”œâ”€â”€ SeamGen.gitignore
    â”œâ”€â”€ SketchUp.gitignore
    â”œâ”€â”€ Smalltalk.gitignore
    â”œâ”€â”€ Solidity-Remix.gitignore
    â”œâ”€â”€ SSDT-sqlproj.gitignore
    â”œâ”€â”€ Stella.gitignore
    â”œâ”€â”€ SugarCRM.gitignore
    â”œâ”€â”€ Swift.gitignore
    â”œâ”€â”€ Symfony.gitignore
    â”œâ”€â”€ SymphonyCMS.gitignore
    â”œâ”€â”€ Terraform.gitignore
    â”œâ”€â”€ TestComplete.gitignore
    â”œâ”€â”€ TeX.gitignore
    â”œâ”€â”€ Textpattern.gitignore
    â”œâ”€â”€ TurboGears2.gitignore
    â”œâ”€â”€ TwinCAT3.gitignore
    â”œâ”€â”€ Typo3.gitignore
    â”œâ”€â”€ Unity.gitignore
    â”œâ”€â”€ UnrealEngine.gitignore
    â”œâ”€â”€ VBA.gitignore
    â”œâ”€â”€ VisualStudio.gitignore
    â”œâ”€â”€ VVVV.gitignore
    â”œâ”€â”€ Waf.gitignore
    â”œâ”€â”€ WordPress.gitignore
    â”œâ”€â”€ Xojo.gitignore
    â”œâ”€â”€ Yeoman.gitignore
    â”œâ”€â”€ Yii.gitignore
    â”œâ”€â”€ ZendFramework.gitignore
    â”œâ”€â”€ Zephir.gitignore
    â”œâ”€â”€ Zig.gitignore
    â”œâ”€â”€ community/
    â”‚   â”œâ”€â”€ Alteryx.gitignore
    â”‚   â”œâ”€â”€ AltiumDesigner.gitignore
    â”‚   â”œâ”€â”€ AutoIt.gitignore
    â”‚   â”œâ”€â”€ AutomationStudio.gitignore
    â”‚   â”œâ”€â”€ B4X.gitignore
    â”‚   â”œâ”€â”€ Bazel.gitignore
    â”‚   â”œâ”€â”€ Beef.gitignore
    â”‚   â”œâ”€â”€ Dotter.gitignore
    â”‚   â”œâ”€â”€ Exercism.gitignore
    â”‚   â”œâ”€â”€ Gretl.gitignore
    â”‚   â”œâ”€â”€ Hexo.gitignore
    â”‚   â”œâ”€â”€ LensStudio.gitignore
    â”‚   â”œâ”€â”€ libogc.gitignore
    â”‚   â”œâ”€â”€ Logtalk.gitignore
    â”‚   â”œâ”€â”€ MetaTrader5.gitignore
    â”‚   â”œâ”€â”€ Move.gitignore
    â”‚   â”œâ”€â”€ NasaSpecsIntact.gitignore
    â”‚   â”œâ”€â”€ OpenSSL.gitignore
    â”‚   â”œâ”€â”€ OpenTofu.gitignore
    â”‚   â”œâ”€â”€ Puppet.gitignore
    â”‚   â”œâ”€â”€ Racket.gitignore
    â”‚   â”œâ”€â”€ Red.gitignore
    â”‚   â”œâ”€â”€ ROS2.gitignore
    â”‚   â”œâ”€â”€ SPFx.gitignore
    â”‚   â”œâ”€â”€ Splunk.gitignore
    â”‚   â”œâ”€â”€ Strapi.gitignore
    â”‚   â”œâ”€â”€ Terragrunt.gitignore
    â”‚   â”œâ”€â”€ Toit.gitignore
    â”‚   â”œâ”€â”€ UiPath.gitignore
    â”‚   â”œâ”€â”€ UTAU.gitignore
    â”‚   â”œâ”€â”€ V.gitignore
    â”‚   â”œâ”€â”€ Xilinx.gitignore
    â”‚   â”œâ”€â”€ AWS/
    â”‚   â”‚   â”œâ”€â”€ CDK.gitignore
    â”‚   â”‚   â””â”€â”€ SAM.gitignore
    â”‚   â”œâ”€â”€ BoxLang/
    â”‚   â”‚   â””â”€â”€ ColdBox.gitignore
    â”‚   â”œâ”€â”€ CFML/
    â”‚   â”‚   â””â”€â”€ ColdBox.gitignore
    â”‚   â”œâ”€â”€ DotNet/
    â”‚   â”‚   â”œâ”€â”€ core.gitignore
    â”‚   â”‚   â”œâ”€â”€ InforCMS.gitignore
    â”‚   â”‚   â”œâ”€â”€ Kentico.gitignore
    â”‚   â”‚   â””â”€â”€ Umbraco.gitignore
    â”‚   â”œâ”€â”€ Elixir/
    â”‚   â”‚   â””â”€â”€ Phoenix.gitignore
    â”‚   â”œâ”€â”€ embedded/
    â”‚   â”‚   â”œâ”€â”€ AtmelStudio.gitignore
    â”‚   â”‚   â”œâ”€â”€ esp-idf.gitignore
    â”‚   â”‚   â”œâ”€â”€ IAR_EWARM.gitignore
    â”‚   â”‚   â””â”€â”€ uVision.gitignore
    â”‚   â”œâ”€â”€ GNOME/
    â”‚   â”‚   â””â”€â”€ GNOMEShellExtension.gitignore
    â”‚   â”œâ”€â”€ Golang/
    â”‚   â”‚   â”œâ”€â”€ Go.AllowList.gitignore
    â”‚   â”‚   â””â”€â”€ Hugo.gitignore
    â”‚   â”œâ”€â”€ Java/
    â”‚   â”‚   â”œâ”€â”€ JBoss4.gitignore
    â”‚   â”‚   â””â”€â”€ JBoss6.gitignore
    â”‚   â”œâ”€â”€ JavaScript/
    â”‚   â”‚   â”œâ”€â”€ Cordova.gitignore
    â”‚   â”‚   â”œâ”€â”€ Expo.gitignore
    â”‚   â”‚   â”œâ”€â”€ Meteor.gitignore
    â”‚   â”‚   â”œâ”€â”€ NWjs.gitignore
    â”‚   â”‚   â””â”€â”€ Vue.gitignore
    â”‚   â”œâ”€â”€ Linux/
    â”‚   â”‚   â””â”€â”€ Snap.gitignore
    â”‚   â”œâ”€â”€ Obsidian/
    â”‚   â”‚   â”œâ”€â”€ NotesAndCoreConfiguration.gitignore
    â”‚   â”‚   â”œâ”€â”€ NotesAndExtendedConfiguration.gitignore
    â”‚   â”‚   â””â”€â”€ NotesOnly.gitignore
    â”‚   â”œâ”€â”€ PHP/
    â”‚   â”‚   â”œâ”€â”€ Bitrix.gitignore
    â”‚   â”‚   â”œâ”€â”€ CodeSniffer.gitignore
    â”‚   â”‚   â”œâ”€â”€ Drupal7.gitignore
    â”‚   â”‚   â”œâ”€â”€ Jigsaw.gitignore
    â”‚   â”‚   â”œâ”€â”€ Magento1.gitignore
    â”‚   â”‚   â”œâ”€â”€ Magento2.gitignore
    â”‚   â”‚   â”œâ”€â”€ Pimcore.gitignore
    â”‚   â”‚   â””â”€â”€ ThinkPHP.gitignore
    â”‚   â””â”€â”€ Python/
    â”‚       â”œâ”€â”€ JupyterNotebooks.gitignore
    â”‚       â””â”€â”€ Nikola.gitignore
    â”œâ”€â”€ Global/
    â”‚   â”œâ”€â”€ README.md
    â”‚   â”œâ”€â”€ AL.gitignore
    â”‚   â”œâ”€â”€ Anjuta.gitignore
    â”‚   â”œâ”€â”€ Ansible.gitignore
    â”‚   â”œâ”€â”€ Archives.gitignore
    â”‚   â”œâ”€â”€ Backup.gitignore
    â”‚   â”œâ”€â”€ Bazaar.gitignore
    â”‚   â”œâ”€â”€ BricxCC.gitignore
    â”‚   â”œâ”€â”€ Calabash.gitignore
    â”‚   â”œâ”€â”€ Cloud9.gitignore
    â”‚   â”œâ”€â”€ CodeKit.gitignore
    â”‚   â”œâ”€â”€ Cursor.gitignore
    â”‚   â”œâ”€â”€ CVS.gitignore
    â”‚   â”œâ”€â”€ DartEditor.gitignore
    â”‚   â”œâ”€â”€ Diff.gitignore
    â”‚   â”œâ”€â”€ Dreamweaver.gitignore
    â”‚   â”œâ”€â”€ Dropbox.gitignore
    â”‚   â”œâ”€â”€ Eclipse.gitignore
    â”‚   â”œâ”€â”€ EiffelStudio.gitignore
    â”‚   â”œâ”€â”€ Emacs.gitignore
    â”‚   â”œâ”€â”€ Ensime.gitignore
    â”‚   â”œâ”€â”€ Espresso.gitignore
    â”‚   â”œâ”€â”€ FlexBuilder.gitignore
    â”‚   â”œâ”€â”€ GPG.gitignore
    â”‚   â”œâ”€â”€ Images.gitignore
    â”‚   â”œâ”€â”€ JDeveloper.gitignore
    â”‚   â”œâ”€â”€ JEnv.gitignore
    â”‚   â”œâ”€â”€ JetBrains.gitignore
    â”‚   â”œâ”€â”€ Kate.gitignore
    â”‚   â”œâ”€â”€ KDevelop4.gitignore
    â”‚   â”œâ”€â”€ Lazarus.gitignore
    â”‚   â”œâ”€â”€ Lefthook.gitignore
    â”‚   â”œâ”€â”€ LibreOffice.gitignore
    â”‚   â”œâ”€â”€ Linux.gitignore
    â”‚   â”œâ”€â”€ LyX.gitignore
    â”‚   â”œâ”€â”€ macOS.gitignore
    â”‚   â”œâ”€â”€ MATLAB.gitignore
    â”‚   â”œâ”€â”€ Mercurial.gitignore
    â”‚   â”œâ”€â”€ Metals.gitignore
    â”‚   â”œâ”€â”€ MicrosoftOffice.gitignore
    â”‚   â”œâ”€â”€ mise.gitignore
    â”‚   â”œâ”€â”€ Momentics.gitignore
    â”‚   â”œâ”€â”€ MonoDevelop.gitignore
    â”‚   â”œâ”€â”€ NetBeans.gitignore
    â”‚   â”œâ”€â”€ Ninja.gitignore
    â”‚   â”œâ”€â”€ NotepadPP.gitignore
    â”‚   â”œâ”€â”€ Octave.gitignore
    â”‚   â”œâ”€â”€ Otto.gitignore
    â”‚   â”œâ”€â”€ Patch.gitignore
    â”‚   â”œâ”€â”€ PlatformIO.gitignore
    â”‚   â”œâ”€â”€ PSoCCreator.gitignore
    â”‚   â”œâ”€â”€ PuTTY.gitignore
    â”‚   â”œâ”€â”€ Redcar.gitignore
    â”‚   â”œâ”€â”€ Redis.gitignore
    â”‚   â”œâ”€â”€ SBT.gitignore
    â”‚   â”œâ”€â”€ SlickEdit.gitignore
    â”‚   â”œâ”€â”€ Stata.gitignore
    â”‚   â”œâ”€â”€ SublimeText.gitignore
    â”‚   â”œâ”€â”€ SVN.gitignore
    â”‚   â”œâ”€â”€ Syncthing.gitignore
    â”‚   â”œâ”€â”€ SynopsysVCS.gitignore
    â”‚   â”œâ”€â”€ Tags.gitignore
    â”‚   â”œâ”€â”€ TextMate.gitignore
    â”‚   â”œâ”€â”€ TortoiseGit.gitignore
    â”‚   â”œâ”€â”€ Vagrant.gitignore
    â”‚   â”œâ”€â”€ Vim.gitignore
    â”‚   â”œâ”€â”€ VirtualEnv.gitignore
    â”‚   â”œâ”€â”€ Virtuoso.gitignore
    â”‚   â”œâ”€â”€ VisualStudioCode.gitignore
    â”‚   â”œâ”€â”€ WebMethods.gitignore
    â”‚   â”œâ”€â”€ Windows.gitignore
    â”‚   â”œâ”€â”€ Xcode.gitignore
    â”‚   â””â”€â”€ XilinxISE.gitignore
    â””â”€â”€ .github/
        â”œâ”€â”€ CODEOWNERS
        â”œâ”€â”€ PULL_REQUEST_TEMPLATE.md
        â””â”€â”€ workflows/
            â””â”€â”€ stale.yml

================================================
FILE: README.md
================================================
# A collection of `.gitignore` templates

This is GitHubÃ¢â‚¬â„¢s collection of [`.gitignore`][man] file templates.
We use this list to populate the `.gitignore` template choosers available
in the GitHub.com interface when creating new repositories and files.

For more information about how `.gitignore` files work, and how to use them,
the following resources are a great place to start:

- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.
- The [Ignoring Files article][help] on the GitHub Help site.
- The [gitignore(5)][man] manual page.

[man]: https://git-scm.com/docs/gitignore
[help]: https://help.github.com/articles/ignoring-files
[chapter]: https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring
[progit]: https://git-scm.com/book

## Folder structure

We support a collection of templates, organized in this way:

- The root folder contains templates in common use, to help people get started
  with popular programming languages and technologies. These define a meaningful
  set of rules to help get started, and ensure you are not committing
  unimportant files into your repository.
- [`Global`](./Global) contains templates for various editors, tools and
  operating systems that can be used in different situations. It is recommended
  that you either [add these to your global template](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer)
  or merge these rules into your project-specific templates if you want to use
  them permanently.
- [`community`](./community) contains specialized templates for other popular
  languages, tools and project, which don't currently belong in the mainstream
  templates. These should be added to your project-specific templates when you
  decide to adopt the framework or tool.

## What makes a good template?

A template should contain a set of rules to help Git repositories work with a
specific programming language, framework, tool or environment.

If it's not possible to curate a small set of useful rules for this situation,
then the template is not a good fit for this collection.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework), it could live under the `community`
directory. See [versioned templates](#versioned-templates) for more details.

If you have a small set of rules, or want to support a technology that is not
widely in use, and still believe this will be helpful to others, please read the
section about [specialized templates](#specialized-templates) for more details.

Include details when opening pull request if the template is important and visible. We
may not accept it immediately, but we can promote it to the root at a later date
based on interest.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the _most common and helpful_ templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.

## Contributing guidelines

WeÃ¢â‚¬â„¢d love for you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to _everyone_
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change is specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify _one template_ per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

## Versioned templates

Some templates can change greatly between versions, and if you wish to contribute
to this repository we need to follow this specific flow:

- the template at the root should be the current supported version
- the template at the root should not have a version in the filename (i.e.
  "evergreen")
- previous versions of templates should live under `community/`
- previous versions of the template should embed the version in the filename,
  for readability

This helps ensure users get the latest version (because they'll use whatever is
at the root) but helps maintainers support older versions still in the wild.

## Specialized templates

If you have a template that you would like to contribute, but it isn't quite
mainstream, please consider adding this to the `community` directory under a
folder that best suits where it belongs.

The rules in your specialized template should be specific to the framework or
tool, and any additional templates should be mentioned in a comment in the
header of the template.

For example, this template might live at `community/DotNet/InforCRM.gitignore`:

```gitignore
# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in
```

## Contributing workflow

HereÃ¢â‚¬â„¢s how we suggest you go about proposing a change to this project:

1. [Fork this project][fork] to your account.
2. [Create a branch][branch] for the change you intend to make.
3. Make your changes to your fork.
4. [Send a pull request][pr] from your forkÃ¢â‚¬â„¢s branch to our `main` branch.

Using the web-based interface to make changes is fine too, and will help you
by automatically forking the project and prompting to send a pull request too.

[fork]: https://help.github.com/articles/fork-a-repo/
[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository
[pr]: https://help.github.com/articles/using-pull-requests/

## License

[CC0-1.0](./LICENSE).



================================================
FILE: Actionscript.gitignore
================================================
# Build and Release Folders
bin-debug/
bin-release/
[Oo]bj/
[Bb]in/

# Other files and folders
.settings/

# Executables
*.swf
*.air
*.ipa
*.apk

# Project files, i.e. `.project`, `.actionScriptProperties` and `.flexProperties`
# should NOT be excluded as they contain compiler settings and other important
# information for Eclipse / Flash Builder.



================================================
FILE: Ada.gitignore
================================================
# Object file
*.o

# Ada Library Information
*.ali



================================================
FILE: AdventureGameStudio.gitignore
================================================
# Built things
_Debug/
Compiled/

# AudioCache can be rebuilt from sources
AudioCache/

# Lockfile
_OpenInEditor.lock

# User settings
Game.agf.user
*.crm.user

# Backups
Game.agf.bak
backup_acsprset.spr

# Memory dumps
*.dmp

# Temporary files
# temporarily created during sprite or room background compression
~aclzw.tmp
# temporary, main game data, before getting packed into exe
game28.dta
# temporary build of the game before being moved to Compiled/ folder
*.exe

# Log files
warnings.log



================================================
FILE: Agda.gitignore
================================================
*.agdai
MAlonzo/**



================================================
FILE: AL.gitignore
================================================
### AL ###
#Template for AL projects for Dynamics 365 Business Central
#launch.json folder
.vscode/
#Cache folder
.alcache/
#Symbols folder
.alpackages/
#Snapshots folder
.snapshots/
#Testing Output folder
.output/
#Extension App-file
*.app
#Rapid Application Development File
rad.json
#Translation Base-file
*.g.xlf
#License-file
*.flf
#Test results file
TestResults.xml


================================================
FILE: Android.gitignore
================================================
# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Log/OS Files
*.log

# Android Studio generated files and folders
captures/
.externalNativeBuild/
.cxx/
*.aab
*.apk
output-metadata.json

# IntelliJ
*.iml
.idea/
misc.xml
deploymentTargetDropDown.xml
render.experimental.xml

# Keystore files
*.jks
*.keystore

# Google Services (e.g. APIs or Firebase)
google-services.json

# Android Profiling
*.hprof



================================================
FILE: Angular.gitignore
================================================
# Angular specific
/dist/
/out-tsc/
/tmp/
/coverage/
/e2e/test-output/
/.angular/
.angular/

# Node modules and dependency files
/node_modules/
/package-lock.json
/yarn.lock

# Environment files
/.env

# Angular CLI and build artefacts
/.angular-cli.json
/.ng/

# TypeScript cache
*.tsbuildinfo

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*



================================================
FILE: AppceleratorTitanium.gitignore
================================================
# Build folder and log file
build/
build.log



================================================
FILE: AppEngine.gitignore
================================================
# Google App Engine generated folder
appengine-generated/



================================================
FILE: ArchLinuxPackages.gitignore
================================================
*.tar
*.tar.*
*.jar
*.exe
*.msi
*.deb
*.zip
*.tgz
*.log
*.log.*
*.sig

pkg/
src/



================================================
FILE: Autotools.gitignore
================================================
# http://www.gnu.org/software/automake

Makefile.in
/ar-lib
/mdate-sh
/py-compile
/test-driver
/ylwrap
.deps/
.dirstamp

# http://www.gnu.org/software/autoconf

autom4te.cache
/autoscan.log
/autoscan-*.log
/aclocal.m4
/compile
/config.cache
/config.guess
/config.h.in
/config.log
/config.status
/config.sub
/configure
/configure.scan
/depcomp
/install-sh
/missing
/stamp-h1

# https://www.gnu.org/software/libtool/

/libtool
/ltmain.sh
.libs/

# http://www.gnu.org/software/texinfo

/texinfo.tex

# http://www.gnu.org/software/m4/

m4/libtool.m4
m4/ltoptions.m4
m4/ltsugar.m4
m4/ltversion.m4
m4/lt~obsolete.m4

# Generated Makefile
# (meta build system like autotools,
# can automatically generate from config.status script
# (which is called by configure script))
Makefile



================================================
FILE: Ballerina.gitignore
================================================
# generated files
target/
generated/

# dependencies
Dependencies.toml

# config files
Config.toml
# the config files used for testing, Uncomment the following line if you want to commit the test config files
#!**/tests/Config.toml



================================================
FILE: C++.gitignore
================================================
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Linker files
*.ilk

# Debugger Files
*.pdb

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# debug information files
*.dwo



================================================
FILE: C.gitignore
================================================
# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# debug information files
*.dwo



================================================
FILE: CakePHP.gitignore
================================================
# CakePHP 3

/vendor/*
/config/app.php

/tmp/cache/models/*
!/tmp/cache/models/empty
/tmp/cache/persistent/*
!/tmp/cache/persistent/empty
/tmp/cache/views/*
!/tmp/cache/views/empty
/tmp/sessions/*
!/tmp/sessions/empty
/tmp/tests/*
!/tmp/tests/empty

/logs/*
!/logs/empty

# CakePHP 2

/app/tmp/*
/app/Config/core.php
/app/Config/database.php
/vendors/*



================================================
FILE: CFWheels.gitignore
================================================
# unpacked plugin folders
plugins/**/*

# files directory where uploads go
files

# DBMigrate plugin: generated SQL
db/sql

# AssetBundler plugin: generated bundles
javascripts/bundles
stylesheets/bundles



================================================
FILE: ChefCookbook.gitignore
================================================
.vagrant
/cookbooks

# Bundler
bin/*
.bundle/*

.kitchen/
.kitchen.local.yml



================================================
FILE: Clojure.gitignore
================================================
Leiningen.gitignore


================================================
FILE: CMake.gitignore
================================================
CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps
CMakeUserPresets.json

# CLion
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#cmake-build-*



================================================
FILE: CodeIgniter.gitignore
================================================
*/config/development
*/logs/log-*.php
!*/logs/index.html
*/cache/*
!system/cache/*
!*/cache/index.html
!*/cache/.htaccess

user_guide_src/build/*
user_guide_src/cilexer/build/*
user_guide_src/cilexer/dist/*
user_guide_src/cilexer/pycilexer.egg-info/*

#codeigniter 3
application/logs/*
!application/logs/index.html
!application/logs/.htaccess
/vendor/



================================================
FILE: CommonLisp.gitignore
================================================
*.FASL
*.fasl
*.lisp-temp
*.dfsl
*.pfsl
*.d64fsl
*.p64fsl
*.lx64fsl
*.lx32fsl
*.dx64fsl
*.dx32fsl
*.fx64fsl
*.fx32fsl
*.sx64fsl
*.sx32fsl
*.wx64fsl
*.wx32fsl



================================================
FILE: Composer.gitignore
================================================
composer.phar
/vendor/

# Commit your application's lock file https://getcomposer.org/doc/01-basic-usage.md#commit-your-composer-lock-file-to-version-control
# You may choose to ignore a library lock file http://getcomposer.org/doc/02-libraries.md#lock-file
# composer.lock



================================================
FILE: Concrete5.gitignore
================================================
# ignore the error log and .htaccess and others
error_log
.htaccess

# concrete5 5.6 specific

config/site.php
files/cache/*
files/tmp/*

# concrete5 5.7 specific

# ignore everything but the index.html
/application/files/*
!/application/files/index.html

# ignore updates folder
/updates/*

# ignore sitemap.xml
/sitemap.xml



================================================
FILE: CONTRIBUTING.md
================================================
# Contributing guidelines

WeÃ¢â‚¬â„¢d love you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to *everyone*
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify *one template* per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework) then it's brittle and probably no more
helpful than a simple `ls`. If it's not possible to curate a small set of
useful rules, then the template might not be a good fit for this collection.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the *most common and helpful* templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.



================================================
FILE: Coq.gitignore
================================================
.*.aux
.*.d
*.a
*.cma
*.cmi
*.cmo
*.cmx
*.cmxa
*.cmxs
*.glob
*.ml.d
*.ml4.d
*.mlg.d
*.mli.d
*.mllib.d
*.mlpack.d
*.native
*.o
*.v.d
*.vio
*.vo
*.vok
*.vos
.coq-native
.csdp.cache
.lia.cache
.nia.cache
.nlia.cache
.nra.cache
csdp.cache
lia.cache
nia.cache
nlia.cache
nra.cache
native_compute_profile_*.data

# generated timing files
*.timing.diff
*.v.after-timing
*.v.before-timing
*.v.timing
time-of-build-after.log
time-of-build-before.log
time-of-build-both.log
time-of-build-pretty.log



================================================
FILE: CraftCMS.gitignore
================================================
# Craft 2 Storage (https://craftcms.com/support/craft-storage-gitignore)
# not necessary for Craft 3 (https://github.com/craftcms/craft/issues/26)
/craft/storage/*
!/craft/storage/rebrand



================================================
FILE: CUDA.gitignore
================================================
*.i
*.ii
*.gpu
*.ptx
*.cubin
*.fatbin



================================================
FILE: D.gitignore
================================================
# Compiled Object files
*.o
*.obj

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Compiled Static libraries
*.a
*.lib

# Executables
*.exe

# DUB
.dub
docs.json
__dummy.html
docs/

# Code coverage
*.lst



================================================
FILE: Dart.gitignore
================================================
# See https://www.dartlang.org/guides/libraries/private-files

# Files and directories created by pub
.dart_tool/
.packages
build/
# If you're building an application, you may want to check-in your pubspec.lock
pubspec.lock

# Directory created by dartdoc
# If you don't generate documentation locally you can remove this line.
doc/api/

# dotenv environment variables file
.env*

# Avoid committing generated Javascript files:
*.dart.js
# Produced by the --dump-info flag.
*.info.json
# When generated by dart2js. Don't specify *.js if your
# project includes source files written in JavaScript.
*.js
*.js_
*.js.deps
*.js.map

.flutter-plugins
.flutter-plugins-dependencies



================================================
FILE: Delphi.gitignore
================================================
# Uncomment these types if you want even more clean repository. But be careful.
# It can make harm to an existing project source. Read explanations below.
#
# Resource files are binaries containing manifest, project icon and version info.
# They can not be viewed as text or compared by diff-tools. Consider replacing them with .rc files.
#*.res
#
# Type library file (binary). In old Delphi versions it should be stored.
# Since Delphi 2009 it is produced from .ridl file and can safely be ignored.
#*.tlb
#
# Diagram Portfolio file. Used by the diagram editor up to Delphi 7.
# Uncomment this if you are not using diagrams or use newer Delphi version.
#*.ddp
#
# Visual LiveBindings file. Added in Delphi XE2.
# Uncomment this if you are not using LiveBindings Designer.
#*.vlb
#
# Deployment Manager configuration file for your project. Added in Delphi XE2.
# Uncomment this if it is not mobile development and you do not use remote debug feature.
#*.deployproj
#
# C++ object files produced when C/C++ Output file generation is configured.
# Uncomment this if you are not using external objects (zlib library for example).
#*.obj
#

# Default Delphi compiler directories
# Content of this directories are generated with each Compile/Construct of a project.
# Most of the time, files here have not there place in a code repository.
#Win32/
#Win64/
#OSX64/
#OSXARM64/
#Android/
#Android64/
#iOSDevice64/
#Linux64/

# Delphi compiler-generated binaries (safe to delete)
*.exe
*.dll
*.bpl
*.bpi
*.dcp
*.so
*.apk
*.drc
*.map
*.dres
*.rsm
*.tds
*.dcu
*.lib
*.a
*.o
*.ocx

# Delphi autogenerated files (duplicated info)
*.cfg
*.hpp
*Resource.rc

# Delphi local files (user-specific info)
*.local
*.identcache
*.projdata
*.tvsconfig
*.dsk
*.dsv

# Delphi history and backups
__history/
__recovery/
*.~*

# Castalia statistics file (since XE7 Castalia is distributed with Delphi)
*.stat

# Boss dependency manager vendor folder https://github.com/HashLoad/boss
modules/



================================================
FILE: DM.gitignore
================================================
*.dmb
*.rsc
*.int
*.lk
*.zip



================================================
FILE: Dotnet.gitignore
================================================
## A streamlined .gitignore for modern .NET projects
## including temporary files, build results, and
## files generated by popular .NET tools. If you are
## developing with Visual Studio, the VS .gitignore
## https://github.com/github/gitignore/blob/main/VisualStudio.gitignore
## has more thorough IDE-specific entries.
##
## Get latest from https://github.com/github/gitignore/blob/main/Dotnet.gitignore

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg

# Others
~$*
*~
CodeCoverage/

# MSBuild Binary and Structured Log
*.binlog

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml


================================================
FILE: Drupal.gitignore
================================================
# gitignore template for Drupal 8 projects
#
# earlier versions of Drupal are tracked in `community/PHP/`
#
# follows official upstream conventions:
# https://www.drupal.org/docs/develop/using-composer

# Ignore configuration files that may contain sensitive information
/web/sites/*/*settings*.php
/web/sites/*/*services*.yml

# Ignore paths that may contain user-generated content
/web/sites/*/files
/web/sites/*/public
/web/sites/*/private
/web/sites/*/files-public
/web/sites/*/files-private

# Ignore paths that may contain temporary files
/web/sites/*/translations
/web/sites/*/tmp
/web/sites/*/cache

# Ignore drupal core (if not versioning drupal sources)
/web/vendor
/web/core
/web/modules/README.txt
/web/modules/contrib
/web/profiles/README.txt
/web/profiles/contrib
/web/sites/development.services.yml
/web/sites/example.settings.local.php
/web/sites/example.sites.php
/web/sites/README.txt
/web/themes/README.txt
/web/themes/contrib
/web/.csslintrc
/web/.editorconfig
/web/.eslintignore
/web/.eslintrc.json
/web/.gitattributes
/web/.htaccess
/web/.ht.router.php
/web/autoload.php
/web/composer.json
/web/composer.lock
/web/example.gitignore
/web/index.php
/web/INSTALL.txt
/web/LICENSE.txt
/web/README.txt
/web/robots.txt
/web/update.php
/web/web.config

# Ignore vendor dependencies and scripts
/vendor
/composer.phar
/composer
/robo.phar
/robo
/drush.phar
/drush
/drupal.phar
/drupal



================================================
FILE: Eagle.gitignore
================================================
# Ignore list for Eagle, a PCB layout tool

# Backup files
*.s#?
*.b#?
*.l#?
*.b$?
*.s$?
*.l$?

# Eagle project file
# It contains a serial number and references to the file structure
# on your computer.
# comment the following line if you want to have your project file included.
eagle.epf

# Autorouter files
*.pro
*.job

# CAM files
*.$$$
*.cmp
*.ly2
*.l15
*.sol
*.plc
*.stc
*.sts
*.crc
*.crs

*.dri
*.drl
*.gpi
*.pls
*.ger
*.xln

*.drd
*.drd.*

*.s#*
*.b#*

*.info

*.eps

# file locks introduced since 7.x
*.lck



================================================
FILE: ecu.test.gitignore
================================================
# gitignore template for ecu.test workspaces - by tracetronic https://tracetronic.com
# website: https://www.ecu-test.com
#   * all directories are related to the default directories, please adapt the .gitignore if you use customized directories

# Dynamic workspace settings
#   * We don't recommend to ignore the .workspace directory, because of important
#     * project specific settings
#     * local user settings
.workspace/ETdrive.xml
.workspace/favorites.xml
.workspace/filters.xml
.workspace/generators.xml
.workspace/history.xml
.workspace/parallelExecution.xml
.workspace/signalviewer.xml
.workspace/signalViewerHistory.json
.workspace/signalviewer2layout.xml
.workspace/testeditor.xml
.workspace/tooladapter.xml
.workspace/view.xml
# optional, if your process depends on this file remove exclusion
.workspace/attributeLists.xml
.workspace/interactiveexecution.xml
.workspace/protocol.xml
.workspace/pythonlibrary.xml
# deprecated, support for older versions
.workspace/traceexplorer.xml

# Custom file formats and test dependencies
#  * you can manage your artifacts also with test.guide (https://www.test-guide.info) and reference them via Playbooks
*.arxml
*.a2l
*.dbc
*.hex
*.s19
[tT]estdata
[tT]estdaten

# Test results and test execution related content
#   * Git is not intended to store and provide test results for all iterations
#   * We recommend to use test.guide (https://www.test-guide.info) for the test report management
TestReports

# Report generators and templates
#   * if you want to provide (f.e.) your own report generators exclude the directory here and ignore only the unnecessary subdirectories
Templates

# optional, default for external Python libraries
PyLibs

# Exclude large binary artifacts
#  * you can manage your artifacts also with test.guide (https://www.test-guide.info) and reference them via Playbooks
Offline-FIUs
Offline-Models
Offline-SGBDs
*.exe
*.msi
*.zip
*.7z

# Exclude default and custom temporary directories
Backup_*

# Python bytecode and cache files
__pycache__/
*.py[cod]



================================================
FILE: Elisp.gitignore
================================================
# Compiled
*.elc

# Packaging
.cask/
.eask/
.eldev/
.keg/

# Built distribution
dist/

# Backup files
*~

# Undo-tree save-files
*.~undo-tree



================================================
FILE: Elixir.gitignore
================================================
/_build
/cover
/deps
/doc
/.fetch
erl_crash.dump
*.ez
*.beam
/config/*.secret.exs
.elixir_ls/



================================================
FILE: Elm.gitignore
================================================
# elm-package generated files
elm-stuff
# elm-repl generated files
repl-temp-*



================================================
FILE: EPiServer.gitignore
================================================
######################
## EPiServer Files
######################
*License.config



================================================
FILE: Erlang.gitignore
================================================
.eunit
*.o
*.beam
*.plt
erl_crash.dump
.concrete/DEV_MODE

# rebar 2.x
.rebar
rel/example_project
ebin/*.beam
deps

# rebar 3
.rebar3
_build/
_checkouts/



================================================
FILE: ExpressionEngine.gitignore
================================================
.DS_Store

# Images
images/avatars/
images/captchas/
images/smileys/
images/member_photos/
images/signature_attachments/
images/pm_attachments/

# For security do not publish the following files
system/expressionengine/config/database.php
system/expressionengine/config/config.php

# Caches
sized/
thumbs/
_thumbs/
*/expressionengine/cache/*



================================================
FILE: ExtJs.gitignore
================================================
.architect
bootstrap.css
bootstrap.js
bootstrap.json
bootstrap.jsonp
build/
classic.json
classic.jsonp
ext/
modern.json
modern.jsonp
resources/sass/.sass-cache/
resources/.arch-internal-preview.css
.arch-internal-preview.css



================================================
FILE: Fancy.gitignore
================================================
*.rbc
*.fyc



================================================
FILE: Finale.gitignore
================================================
*.bak
*.db
*.avi
*.pdf
*.ps
*.mid
*.midi
*.mp3
*.aif
*.wav
# Some versions of Finale have a bug and randomly save extra copies of
# the music source as "<Filename> copy.mus"
*copy.mus



================================================
FILE: Firebase.gitignore
================================================
# Firebase build and deployment files
/firebase-debug.log
/firebase-debug.*.log
.firebaserc

# Firebase Hosting
/firebase.json
*.cache
hosting/.cache

# Firebase Functions
/functions/node_modules/
/functions/.env
/functions/package-lock.json

# Firebase Emulators
/firebase-*.zip
/.firebase/
/emulator-ui/

# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment files (local configs)
/.env.*



================================================
FILE: FlaxEngine.gitignore
================================================
# Ignore Flax project files
Binaries/
Cache/
Logs/
Output/
Screenshots/
*.HotReload.*

# Ignore Visual Studio project files (generated locally)
*.csproj
*.sln

# Ignore thumbnails created by Windows
Thumbs.db

# Ignore files built by Visual Studio
*.obj
*.exe
*.pdb
*.user
*.aps
*.pch
*.vspscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.cache
*.ilk
*.log
[Bb]in
[Dd]ebug*/
*.lib
*.sbr
obj/
[Rr]elease*/
_ReSharper*/
[Tt]est[Rr]esult*
.vs/

# Ignore Nuget packages folder
packages/



================================================
FILE: Flutter.gitignore
================================================
# Miscellaneous
*.class
*.lock
*.log
*.pyc
*.swp
.buildlog/
.history



# Flutter repo-specific
/bin/cache/
/bin/internal/bootstrap.bat
/bin/internal/bootstrap.sh
/bin/mingit/
/dev/benchmarks/mega_gallery/
/dev/bots/.recipe_deps
/dev/bots/android_tools/
/dev/devicelab/ABresults*.json
/dev/docs/doc/
/dev/docs/flutter.docs.zip
/dev/docs/lib/
/dev/docs/pubspec.yaml
/dev/integration_tests/**/xcuserdata
/dev/integration_tests/**/Pods
/packages/flutter/coverage/
version
analysis_benchmark.json

# packages file containing multi-root paths
.packages.generated

# Flutter/Dart/Pub related
**/doc/api/
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
**/generated_plugin_registrant.dart
.packages
.pub-preload-cache/
.pub/
build/
flutter_*.png
linked_*.ds
unlinked.ds
unlinked_spec.ds

# Android related
**/android/**/gradle-wrapper.jar
.gradle/
**/android/captures/
**/android/gradlew
**/android/gradlew.bat
**/android/local.properties
**/android/**/GeneratedPluginRegistrant.java
**/android/key.properties
*.jks

# iOS/XCode related
**/ios/**/*.mode1v3
**/ios/**/*.mode2v3
**/ios/**/*.moved-aside
**/ios/**/*.pbxuser
**/ios/**/*.perspectivev3
**/ios/**/*sync/
**/ios/**/.sconsign.dblite
**/ios/**/.tags*
**/ios/**/.vagrant/
**/ios/**/DerivedData/
**/ios/**/Icon?
**/ios/**/Pods/
**/ios/**/.symlinks/
**/ios/**/profile
**/ios/**/xcuserdata
**/ios/.generated/
**/ios/Flutter/.last_build_id
**/ios/Flutter/App.framework
**/ios/Flutter/Flutter.framework
**/ios/Flutter/Flutter.podspec
**/ios/Flutter/Generated.xcconfig
**/ios/Flutter/ephemeral
**/ios/Flutter/app.flx
**/ios/Flutter/app.zip
**/ios/Flutter/flutter_assets/
**/ios/Flutter/flutter_export_environment.sh
**/ios/ServiceDefinitions.json
**/ios/Runner/GeneratedPluginRegistrant.*

# macOS
**/Flutter/ephemeral/
**/Pods/
**/macos/Flutter/GeneratedPluginRegistrant.swift
**/macos/Flutter/ephemeral
**/xcuserdata/

# Windows
**/windows/flutter/generated_plugin_registrant.cc
**/windows/flutter/generated_plugin_registrant.h
**/windows/flutter/generated_plugins.cmake

# Linux
**/linux/flutter/generated_plugin_registrant.cc
**/linux/flutter/generated_plugin_registrant.h
**/linux/flutter/generated_plugins.cmake

# Coverage
coverage/

# Symbols
app.*.symbols

# Exceptions to above rules.
!**/ios/**/default.mode1v3
!**/ios/**/default.mode2v3
!**/ios/**/default.pbxuser
!**/ios/**/default.perspectivev3
!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages
!/dev/ci/**/Gemfile.lock


================================================
FILE: ForceDotCom.gitignore
================================================
.project
.settings
salesforce.schema
Referenced Packages



================================================
FILE: Fortran.gitignore
================================================
C++.gitignore


================================================
FILE: FuelPHP.gitignore
================================================
# the composer package lock file and install directory
# Commit your application's lock file http://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file
# You may choose to ignore a library lock file http://getcomposer.org/doc/02-libraries.md#lock-file
# /composer.lock
/fuel/vendor

# the fuelphp document
/docs/

# you may install these packages with `oil package`.
# http://fuelphp.com/docs/packages/oil/package.html
# /fuel/packages/auth/
# /fuel/packages/email/
# /fuel/packages/oil/
# /fuel/packages/orm/
# /fuel/packages/parser/

# dynamically generated files
/fuel/app/logs/*/*/*
/fuel/app/cache/*/*
/fuel/app/config/crypt.php



================================================
FILE: Gcov.gitignore
================================================
# gcc coverage testing tool files

*.gcno
*.gcda
*.gcov



================================================
FILE: GitBook.gitignore
================================================
# Node rules:
## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

## Dependency directory
## Commenting this out is preferred by some people, see
## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git
node_modules

# Book build output
_book

# eBook build output
*.epub
*.mobi
*.pdf



================================================
FILE: GitHubPages.gitignore
================================================
# This .gitignore is appropriate for repositories deployed to GitHub Pages and using
# a Gemfile as specified at https://github.com/github/pages-gem#conventional

# Basic Jekyll gitignores (synchronize to Jekyll.gitignore)
_site/
.sass-cache/
.jekyll-cache/
.jekyll-metadata

# Additional Ruby/bundler ignore for when you run: bundle install
/vendor

# Specific ignore for GitHub Pages
# GitHub Pages will always use its own deployed version of pages-gem
# This means GitHub Pages will NOT use your Gemfile.lock and therefore it is
# counterproductive to check this file into the repository.
# Details at https://github.com/github/pages-gem/issues/768
Gemfile.lock



================================================
FILE: Gleam.gitignore
================================================
*.beam
*.ez
/build
erl_crash.dump



================================================
FILE: Go.gitignore
================================================
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Code coverage profiles and other test artifacts
*.out
coverage.*
*.coverprofile
profile.cov

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work
go.work.sum

# env file
.env

# Editor/IDE
# .idea/
# .vscode/



================================================
FILE: Godot.gitignore
================================================
# Godot 4+ specific ignores
.godot/
.nomedia

# Godot-specific ignores
.import/
export.cfg
export_credentials.cfg
*.tmp

# Imported translations (automatically generated from CSV files)
*.translation

# Mono-specific ignores
.mono/
data_*/
mono_crash.*.json



================================================
FILE: Gradle.gitignore
================================================
.gradle
**/build/
!**/src/**/build/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
!gradle-wrapper.jar

# Avoid ignore Gradle wrappper properties
!gradle-wrapper.properties

# Cache of project
.gradletasknamecache

# Eclipse Gradle plugin generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath



================================================
FILE: Grails.gitignore
================================================
# .gitignore for Grails 1.2 and 1.3
# Although this should work for most versions of grails, it is
# suggested that you use the "grails integrate-with --git" command
# to generate your .gitignore file.

# web application files
/web-app/WEB-INF/classes

# default HSQL database files for production mode
/prodDb.*

# general HSQL database files
*Db.properties
*Db.script

# logs
/stacktrace.log
/test/reports
/logs

# project release file
/*.war

# plugin release files
/*.zip
/plugin.xml

# older plugin install locations
/plugins
/web-app/plugins

# "temporary" build files
/target



================================================
FILE: GWT.gitignore
================================================
*.class

# Package Files #
*.jar
*.war

# gwt caches and compiled units #
war/gwt_bree/
gwt-unitCache/

# boilerplate generated classes #
.apt_generated/

# more caches and things from deploy #
war/WEB-INF/deploy/
war/WEB-INF/classes/

#compilation logs
.gwt/

#gwt junit compilation files
www-test/

#old GWT (1.5) created this dir
.gwt-tmp/



================================================
FILE: Haskell.gitignore
================================================
dist
dist-*
cabal-dev
*.o
*.hi
*.hie
*.chi
*.chs.h
*.dyn_o
*.dyn_hi
.hpc
.hsenv
.cabal-sandbox/
cabal.sandbox.config
*.prof
*.aux
*.hp
*.eventlog
.stack-work/
cabal.project.local
cabal.project.local~
.HTF/
.ghc.environment.*



================================================
FILE: Haxe.gitignore
================================================
.haxelib/
.haxelsp/recording/
dump/



================================================
FILE: HIP.gitignore
================================================
# HIP.gitignore
# GitHub gitignore template for AMD HIP (ROCm) projects
#
# Reference:
#   Official AMD ROCm HIP .gitignore: https://github.com/ROCm/hip/blob/amd-staging/.gitignore

# 1. Build directories and files
/build/                          # common build directory
/CMakeFiles/                     # CMake internal files
/CMakeCache.txt                  # CMake cache file
/Makefile                        # autogenerated Makefile
/cmake_install.cmake             # install script
/install_manifest.txt            # install manifest list
*.ninja-dep                      # Ninja dependency files
*.ninja_log                      # Ninja log files
meson-logs/                      # Meson log directory

# 2. Compilation outputs and intermediates
*.o                              # object files
*.obj                            # Windows object files
*.so                             # shared libraries
*.a                              # static librarie
*.d                              # dependency files
*.gch                            # precompiled headers
*.ii                             # preprocessed output
*.ii.cpp                         # C++ preprocessed output
*.out                            # generic executable outputs
*.exe                            # Windows executables

# 3. HIP/ROCm specific binaries and intermediates
*.hsaco                          # ROCm compiled binary
*.s                              # assembly output
*.kernels.cpp                    # autogenerated kernel sources
*.hip.cpp.*                      # hipcc intermediate outputs

# 4. Official sample binaries and tutorial outputs
bin/hipInfo                      # sample binary
bin/hipBusBandwidth              # sample binary
bin/hipDispatchLatency           # sample binary
bin/hipify-clang                 # sample tool
samples/**/*.out                 # tutorial outputs
samples/**/*.code                # ISA/code dumps
samples/**/*.hsaco               # compiled binaries
samples/**/*.co                  # kernel code outputs

# 5. Tags, logs and test outputs
tags                             # ctags index
*.log                            # log files
/tests_output/                   # custom test output directory
/samples_output/                 # custom sample output directory



================================================
FILE: IAR.gitignore
================================================
# Compiled binaries
*.o
*.bin
*.elf
*.hex
*.map
*.out
*.obj

# Trash
*.bak
thumbs.db
*.~*

# IAR Settings
**/settings/*.crun
**/settings/*.dbgdt
**/settings/*.cspy
**/settings/*.cspy.*
**/settings/*.xcl
**/settings/*.dni
**/settings/*.wsdt
**/settings/*.wspos

# IAR Debug Exe
**/Exe/*.sim

# IAR Debug Obj
**/Obj/*.pbd
**/Obj/*.pbd.*
**/Obj/*.pbi
**/Obj/*.pbi.*

# IAR project "Debug" directory
Debug/

# IAR project "Release" directory
Release/

# IAR project settings directory
settings/

# IAR backup files
Backup*

# IAR .dep files
*.dep


================================================
FILE: Idris.gitignore
================================================
# Idris 2
*.ttc
*.ttm

# Idris 1
*.ibc
*.o



================================================
FILE: IGORPro.gitignore
================================================
# Avoid including Experiment files: they can be created and edited locally to test the ipf files
*.pxp
*.pxt
*.uxp
*.uxt



================================================
FILE: Java.gitignore
================================================
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*



================================================
FILE: JBoss.gitignore
================================================
jboss/server/all/deploy/project.ext
jboss/server/default/deploy/project.ext
jboss/server/minimal/deploy/project.ext
jboss/server/all/log/*.log
jboss/server/all/tmp/**/*
jboss/server/all/data/**/*
jboss/server/all/work/**/*
jboss/server/default/log/*.log
jboss/server/default/tmp/**/*
jboss/server/default/data/**/*
jboss/server/default/work/**/*
jboss/server/minimal/log/*.log
jboss/server/minimal/tmp/**/*
jboss/server/minimal/data/**/*
jboss/server/minimal/work/**/*

# deployed package files #

*.DEPLOYED



================================================
FILE: Jekyll.gitignore
================================================
_site/
.sass-cache/
.jekyll-cache/
.jekyll-metadata
# Ignore folders generated by Bundler
.bundle/
vendor/



================================================
FILE: JENKINS_HOME.gitignore
================================================
# Learn more about Jenkins and JENKINS_HOME directory for which this file is
# intended.
#
#  http://jenkins-ci.org/
#  https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins
#
# Note: secret.key is purposefully not tracked by git. This should be backed up
# separately because configs may contain secrets which were encrypted using the
# secret.key.  To back up secrets use 'tar -czf /tmp/secrets.tgz secret*' and
# save the file separate from your repository.  If you want secrets backed up
# with configuration, then see the bottom of this file for an example.

# Ignore all JENKINS_HOME except jobs directory, root xml config, and
# .gitignore file.
/*
!/jobs
!/.gitignore
!/*.xml

# Ignore all files in jobs subdirectories except for folders.
# Note: git doesn't track folders, only file content.
jobs/**
!jobs/**/

# Uncomment the following line to save next build numbers with config.

#!jobs/**/nextBuildNumber

# For performance reasons, we want to ignore builds in Jenkins jobs because it
# contains many tiny files on large installations.  This can impact git
# performance when running even basic commands like 'git status'.
builds
indexing

# Exclude only config.xml files in repository subdirectories.
!config.xml

# Don't track workspaces (when users build on the master).
jobs/**/*workspace

# Security warning: If secrets are included with your configuration, then an
# adversary will be able to decrypt all encrypted secrets within Jenkins
# config.  Including secrets is a bad practice, but the example is included in
# case someone still wants it for convenience.  Uncomment the following line to
# include secrets for decryption with repository configuration in Git.

#!/secret*

# As a result, only Jenkins settings and job config.xml files in JENKINS_HOME
# will be tracked by git.



================================================
FILE: Joomla.gitignore
================================================
/.htaccess
/administrator/cache/*
/administrator/components/com_actionlogs/*
/administrator/components/com_admin/*
/administrator/components/com_ajax/*
/administrator/components/com_associations/*
/administrator/components/com_banners/*
/administrator/components/com_cache/*
/administrator/components/com_categories/*
/administrator/components/com_checkin/*
/administrator/components/com_config/*
/administrator/components/com_contact/*
/administrator/components/com_content/*
/administrator/components/com_contenthistory/*
/administrator/components/com_cpanel/*
/administrator/components/com_fields/*
/administrator/components/com_finder/*
/administrator/components/com_installer/*
/administrator/components/com_joomlaupdate/*
/administrator/components/com_languages/*
/administrator/components/com_login/*
/administrator/components/com_media/*
/administrator/components/com_menus/*
/administrator/components/com_messages/*
/administrator/components/com_modules/*
/administrator/components/com_newsfeeds/*
/administrator/components/com_plugins/*
/administrator/components/com_postinstall/*
/administrator/components/com_privacy/*
/administrator/components/com_redirect/*
/administrator/components/com_search/*
/administrator/components/com_tags/*
/administrator/components/com_templates/*
/administrator/components/com_users/*
/administrator/help/*
/administrator/includes/*
/administrator/index.php
/administrator/language/en-GB/en-GB.com_actionlogs.ini
/administrator/language/en-GB/en-GB.com_actionlogs.sys.ini
/administrator/language/en-GB/en-GB.com_admin.ini
/administrator/language/en-GB/en-GB.com_admin.sys.ini
/administrator/language/en-GB/en-GB.com_ajax.ini
/administrator/language/en-GB/en-GB.com_ajax.sys.ini
/administrator/language/en-GB/en-GB.com_associations.ini
/administrator/language/en-GB/en-GB.com_associations.sys.ini
/administrator/language/en-GB/en-GB.com_banners.ini
/administrator/language/en-GB/en-GB.com_banners.sys.ini
/administrator/language/en-GB/en-GB.com_cache.ini
/administrator/language/en-GB/en-GB.com_cache.sys.ini
/administrator/language/en-GB/en-GB.com_categories.ini
/administrator/language/en-GB/en-GB.com_categories.sys.ini
/administrator/language/en-GB/en-GB.com_checkin.ini
/administrator/language/en-GB/en-GB.com_checkin.sys.ini
/administrator/language/en-GB/en-GB.com_config.ini
/administrator/language/en-GB/en-GB.com_config.sys.ini
/administrator/language/en-GB/en-GB.com_contact.ini
/administrator/language/en-GB/en-GB.com_contact.sys.ini
/administrator/language/en-GB/en-GB.com_content.ini
/administrator/language/en-GB/en-GB.com_content.sys.ini
/administrator/language/en-GB/en-GB.com_contenthistory.ini
/administrator/language/en-GB/en-GB.com_contenthistory.sys.ini
/administrator/language/en-GB/en-GB.com_cpanel.ini
/administrator/language/en-GB/en-GB.com_cpanel.sys.ini
/administrator/language/en-GB/en-GB.com_fields.ini
/administrator/language/en-GB/en-GB.com_fields.sys.ini
/administrator/language/en-GB/en-GB.com_finder.ini
/administrator/language/en-GB/en-GB.com_finder.sys.ini
/administrator/language/en-GB/en-GB.com_installer.ini
/administrator/language/en-GB/en-GB.com_installer.sys.ini
/administrator/language/en-GB/en-GB.com_joomlaupdate.ini
/administrator/language/en-GB/en-GB.com_joomlaupdate.sys.ini
/administrator/language/en-GB/en-GB.com_languages.ini
/administrator/language/en-GB/en-GB.com_languages.sys.ini
/administrator/language/en-GB/en-GB.com_login.ini
/administrator/language/en-GB/en-GB.com_login.sys.ini
/administrator/language/en-GB/en-GB.com_mailto.sys.ini
/administrator/language/en-GB/en-GB.com_media.ini
/administrator/language/en-GB/en-GB.com_media.sys.ini
/administrator/language/en-GB/en-GB.com_menus.ini
/administrator/language/en-GB/en-GB.com_menus.sys.ini
/administrator/language/en-GB/en-GB.com_messages.ini
/administrator/language/en-GB/en-GB.com_messages.sys.ini
/administrator/language/en-GB/en-GB.com_modules.ini
/administrator/language/en-GB/en-GB.com_modules.sys.ini
/administrator/language/en-GB/en-GB.com_newsfeeds.ini
/administrator/language/en-GB/en-GB.com_newsfeeds.sys.ini
/administrator/language/en-GB/en-GB.com_plugins.ini
/administrator/language/en-GB/en-GB.com_plugins.sys.ini
/administrator/language/en-GB/en-GB.com_postinstall.ini
/administrator/language/en-GB/en-GB.com_postinstall.sys.ini
/administrator/language/en-GB/en-GB.com_privacy.ini
/administrator/language/en-GB/en-GB.com_privacy.sys.ini
/administrator/language/en-GB/en-GB.com_redirect.ini
/administrator/language/en-GB/en-GB.com_redirect.sys.ini
/administrator/language/en-GB/en-GB.com_search.ini
/administrator/language/en-GB/en-GB.com_search.sys.ini
/administrator/language/en-GB/en-GB.com_tags.ini
/administrator/language/en-GB/en-GB.com_tags.sys.ini
/administrator/language/en-GB/en-GB.com_templates.ini
/administrator/language/en-GB/en-GB.com_templates.sys.ini
/administrator/language/en-GB/en-GB.com_users.ini
/administrator/language/en-GB/en-GB.com_users.sys.ini
/administrator/language/en-GB/en-GB.com_weblinks.ini
/administrator/language/en-GB/en-GB.com_weblinks.sys.ini
/administrator/language/en-GB/en-GB.com_wrapper.ini
/administrator/language/en-GB/en-GB.com_wrapper.sys.ini
/administrator/language/en-GB/en-GB.ini
/administrator/language/en-GB/en-GB.lib_joomla.ini
/administrator/language/en-GB/en-GB.localise.php
/administrator/language/en-GB/en-GB.mod_custom.ini
/administrator/language/en-GB/en-GB.mod_custom.sys.ini
/administrator/language/en-GB/en-GB.mod_feed.ini
/administrator/language/en-GB/en-GB.mod_feed.sys.ini
/administrator/language/en-GB/en-GB.mod_latest.ini
/administrator/language/en-GB/en-GB.mod_latest.sys.ini
/administrator/language/en-GB/en-GB.mod_latestactions.ini
/administrator/language/en-GB/en-GB.mod_latestactions.sys.ini
/administrator/language/en-GB/en-GB.mod_logged.ini
/administrator/language/en-GB/en-GB.mod_logged.sys.ini
/administrator/language/en-GB/en-GB.mod_login.ini
/administrator/language/en-GB/en-GB.mod_login.sys.ini
/administrator/language/en-GB/en-GB.mod_menu.ini
/administrator/language/en-GB/en-GB.mod_menu.sys.ini
/administrator/language/en-GB/en-GB.mod_multilangstatus.ini
/administrator/language/en-GB/en-GB.mod_multilangstatus.sys.ini
/administrator/language/en-GB/en-GB.mod_online.ini
/administrator/language/en-GB/en-GB.mod_online.sys.ini
/administrator/language/en-GB/en-GB.mod_popular.ini
/administrator/language/en-GB/en-GB.mod_popular.sys.ini
/administrator/language/en-GB/en-GB.mod_privacy_dashboard.ini
/administrator/language/en-GB/en-GB.mod_privacy_dashboard.sys.ini
/administrator/language/en-GB/en-GB.mod_quickicon.ini
/administrator/language/en-GB/en-GB.mod_quickicon.sys.ini
/administrator/language/en-GB/en-GB.mod_sampledata.ini
/administrator/language/en-GB/en-GB.mod_sampledata.sys.ini
/administrator/language/en-GB/en-GB.mod_stats_admin.ini
/administrator/language/en-GB/en-GB.mod_stats_admin.sys.ini
/administrator/language/en-GB/en-GB.mod_status.ini
/administrator/language/en-GB/en-GB.mod_status.sys.ini
/administrator/language/en-GB/en-GB.mod_submenu.ini
/administrator/language/en-GB/en-GB.mod_submenu.sys.ini
/administrator/language/en-GB/en-GB.mod_title.ini
/administrator/language/en-GB/en-GB.mod_title.sys.ini
/administrator/language/en-GB/en-GB.mod_toolbar.ini
/administrator/language/en-GB/en-GB.mod_toolbar.sys.ini
/administrator/language/en-GB/en-GB.mod_unread.ini
/administrator/language/en-GB/en-GB.mod_unread.sys.ini
/administrator/language/en-GB/en-GB.mod_version.ini
/administrator/language/en-GB/en-GB.mod_version.sys.ini
/administrator/language/en-GB/en-GB.plg_actionlog_joomla.ini
/administrator/language/en-GB/en-GB.plg_actionlog_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_cookie.ini
/administrator/language/en-GB/en-GB.plg_authentication_cookie.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_example.ini
/administrator/language/en-GB/en-GB.plg_authentication_example.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_gmail.ini
/administrator/language/en-GB/en-GB.plg_authentication_gmail.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_joomla.ini
/administrator/language/en-GB/en-GB.plg_authentication_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_ldap.ini
/administrator/language/en-GB/en-GB.plg_authentication_ldap.sys.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha.sys.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha_invisible.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha_invisible.sys.ini
/administrator/language/en-GB/en-GB.plg_content_confirmconsent.ini
/administrator/language/en-GB/en-GB.plg_content_confirmconsent.sys.ini
/administrator/language/en-GB/en-GB.plg_content_contact.ini
/administrator/language/en-GB/en-GB.plg_content_contact.sys.ini
/administrator/language/en-GB/en-GB.plg_content_emailcloak.ini
/administrator/language/en-GB/en-GB.plg_content_emailcloak.sys.ini
/administrator/language/en-GB/en-GB.plg_content_fields.ini
/administrator/language/en-GB/en-GB.plg_content_fields.sys.ini
/administrator/language/en-GB/en-GB.plg_content_finder.ini
/administrator/language/en-GB/en-GB.plg_content_finder.sys.ini
/administrator/language/en-GB/en-GB.plg_content_geshi.ini
/administrator/language/en-GB/en-GB.plg_content_geshi.sys.ini
/administrator/language/en-GB/en-GB.plg_content_joomla.ini
/administrator/language/en-GB/en-GB.plg_content_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_content_loadmodule.ini
/administrator/language/en-GB/en-GB.plg_content_loadmodule.sys.ini
/administrator/language/en-GB/en-GB.plg_content_pagebreak.ini
/administrator/language/en-GB/en-GB.plg_content_pagebreak.sys.ini
/administrator/language/en-GB/en-GB.plg_content_pagenavigation.ini
/administrator/language/en-GB/en-GB.plg_content_pagenavigation.sys.ini
/administrator/language/en-GB/en-GB.plg_content_vote.ini
/administrator/language/en-GB/en-GB.plg_content_vote.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_article.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_article.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_contact.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_contact.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_fields.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_fields.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_image.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_image.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_menu.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_menu.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_module.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_module.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_pagebreak.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_pagebreak.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_readmore.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_readmore.sys.ini
/administrator/language/en-GB/en-GB.plg_editors_codemirror.ini
/administrator/language/en-GB/en-GB.plg_editors_codemirror.sys.ini
/administrator/language/en-GB/en-GB.plg_editors_none.ini
/administrator/language/en-GB/en-GB.plg_editors_none.sys.ini
/administrator/language/en-GB/en-GB.plg_editors_tinymce.ini
/administrator/language/en-GB/en-GB.plg_editors_tinymce.sys.ini
/administrator/language/en-GB/en-GB.plg_extension_joomla.ini
/administrator/language/en-GB/en-GB.plg_extension_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_calendar.ini
/administrator/language/en-GB/en-GB.plg_fields_calendar.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_checkboxes.ini
/administrator/language/en-GB/en-GB.plg_fields_checkboxes.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_color.ini
/administrator/language/en-GB/en-GB.plg_fields_color.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_editor.ini
/administrator/language/en-GB/en-GB.plg_fields_editor.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_image.ini
/administrator/language/en-GB/en-GB.plg_fields_image.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_imagelist.ini
/administrator/language/en-GB/en-GB.plg_fields_imagelist.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_integer.ini
/administrator/language/en-GB/en-GB.plg_fields_integer.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_list.ini
/administrator/language/en-GB/en-GB.plg_fields_list.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_media.ini
/administrator/language/en-GB/en-GB.plg_fields_media.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_radio.ini
/administrator/language/en-GB/en-GB.plg_fields_radio.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_repeatable.ini
/administrator/language/en-GB/en-GB.plg_fields_repeatable.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_sql.ini
/administrator/language/en-GB/en-GB.plg_fields_sql.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_text.ini
/administrator/language/en-GB/en-GB.plg_fields_text.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_textarea.ini
/administrator/language/en-GB/en-GB.plg_fields_textarea.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_url.ini
/administrator/language/en-GB/en-GB.plg_fields_url.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_user.ini
/administrator/language/en-GB/en-GB.plg_fields_user.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_usergrouplist.ini
/administrator/language/en-GB/en-GB.plg_fields_usergrouplist.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_categories.ini
/administrator/language/en-GB/en-GB.plg_finder_categories.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_contacts.ini
/administrator/language/en-GB/en-GB.plg_finder_contacts.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_content.ini
/administrator/language/en-GB/en-GB.plg_finder_content.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_newsfeeds.ini
/administrator/language/en-GB/en-GB.plg_finder_newsfeeds.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_tags.ini
/administrator/language/en-GB/en-GB.plg_finder_tags.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_weblinks.ini
/administrator/language/en-GB/en-GB.plg_finder_weblinks.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_folderinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_folderinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_packageinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_packageinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_urlinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_urlinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_webinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_webinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_actionlogs.ini
/administrator/language/en-GB/en-GB.plg_privacy_actionlogs.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_consents.ini
/administrator/language/en-GB/en-GB.plg_privacy_consents.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_contact.ini
/administrator/language/en-GB/en-GB.plg_privacy_contact.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_content.ini
/administrator/language/en-GB/en-GB.plg_privacy_content.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_message.ini
/administrator/language/en-GB/en-GB.plg_privacy_message.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_user.ini
/administrator/language/en-GB/en-GB.plg_privacy_user.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_extensionupdate.ini
/administrator/language/en-GB/en-GB.plg_quickicon_extensionupdate.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_joomlaupdate.ini
/administrator/language/en-GB/en-GB.plg_quickicon_joomlaupdate.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_phpversioncheck.ini
/administrator/language/en-GB/en-GB.plg_quickicon_phpversioncheck.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_privacycheck.ini
/administrator/language/en-GB/en-GB.plg_quickicon_privacycheck.sys.ini
/administrator/language/en-GB/en-GB.plg_sampledata_blog.ini
/administrator/language/en-GB/en-GB.plg_sampledata_blog.sys.ini
/administrator/language/en-GB/en-GB.plg_search_categories.ini
/administrator/language/en-GB/en-GB.plg_search_categories.sys.ini
/administrator/language/en-GB/en-GB.plg_search_contacts.ini
/administrator/language/en-GB/en-GB.plg_search_contacts.sys.ini
/administrator/language/en-GB/en-GB.plg_search_content.ini
/administrator/language/en-GB/en-GB.plg_search_content.sys.ini
/administrator/language/en-GB/en-GB.plg_search_newsfeeds.ini
/administrator/language/en-GB/en-GB.plg_search_newsfeeds.sys.ini
/administrator/language/en-GB/en-GB.plg_search_tags.ini
/administrator/language/en-GB/en-GB.plg_search_tags.sys.ini
/administrator/language/en-GB/en-GB.plg_search_weblinks.ini
/administrator/language/en-GB/en-GB.plg_search_weblinks.sys.ini
/administrator/language/en-GB/en-GB.plg_system_actionlogs.ini
/administrator/language/en-GB/en-GB.plg_system_actionlogs.sys.ini
/administrator/language/en-GB/en-GB.plg_system_cache.ini
/administrator/language/en-GB/en-GB.plg_system_cache.sys.ini
/administrator/language/en-GB/en-GB.plg_system_debug.ini
/administrator/language/en-GB/en-GB.plg_system_debug.sys.ini
/administrator/language/en-GB/en-GB.plg_system_fields.ini
/administrator/language/en-GB/en-GB.plg_system_fields.sys.ini
/administrator/language/en-GB/en-GB.plg_system_highlight.ini
/administrator/language/en-GB/en-GB.plg_system_highlight.sys.ini
/administrator/language/en-GB/en-GB.plg_system_languagecode.ini
/administrator/language/en-GB/en-GB.plg_system_languagecode.sys.ini
/administrator/language/en-GB/en-GB.plg_system_languagefilter.ini
/administrator/language/en-GB/en-GB.plg_system_languagefilter.sys.ini
/administrator/language/en-GB/en-GB.plg_system_log.ini
/administrator/language/en-GB/en-GB.plg_system_log.sys.ini
/administrator/language/en-GB/en-GB.plg_system_logout.ini
/administrator/language/en-GB/en-GB.plg_system_logout.sys.ini
/administrator/language/en-GB/en-GB.plg_system_logrotation.ini
/administrator/language/en-GB/en-GB.plg_system_logrotation.sys.ini
/administrator/language/en-GB/en-GB.plg_system_p3p.ini
/administrator/language/en-GB/en-GB.plg_system_p3p.sys.ini
/administrator/language/en-GB/en-GB.plg_system_privacyconsent.ini
/administrator/language/en-GB/en-GB.plg_system_privacyconsent.sys.ini
/administrator/language/en-GB/en-GB.plg_system_redirect.ini
/administrator/language/en-GB/en-GB.plg_system_redirect.sys.ini
/administrator/language/en-GB/en-GB.plg_system_remember.ini
/administrator/language/en-GB/en-GB.plg_system_remember.sys.ini
/administrator/language/en-GB/en-GB.plg_system_sef.ini
/administrator/language/en-GB/en-GB.plg_system_sef.sys.ini
/administrator/language/en-GB/en-GB.plg_system_sessiongc.ini
/administrator/language/en-GB/en-GB.plg_system_sessiongc.sys.ini
/administrator/language/en-GB/en-GB.plg_system_stats.ini
/administrator/language/en-GB/en-GB.plg_system_stats.sys.ini
/administrator/language/en-GB/en-GB.plg_system_updatenotification.ini
/administrator/language/en-GB/en-GB.plg_system_updatenotification.sys.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_totp.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_totp.sys.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_yubikey.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_yubikey.sys.ini
/administrator/language/en-GB/en-GB.plg_user_contactcreator.ini
/administrator/language/en-GB/en-GB.plg_user_contactcreator.sys.ini
/administrator/language/en-GB/en-GB.plg_user_joomla.ini
/administrator/language/en-GB/en-GB.plg_user_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_user_profile.ini
/administrator/language/en-GB/en-GB.plg_user_profile.sys.ini
/administrator/language/en-GB/en-GB.plg_user_terms.ini
/administrator/language/en-GB/en-GB.plg_user_terms.sys.ini
/administrator/language/en-GB/en-GB.tpl_hathor.ini
/administrator/language/en-GB/en-GB.tpl_hathor.sys.ini
/administrator/language/en-GB/en-GB.tpl_isis.ini
/administrator/language/en-GB/en-GB.tpl_isis.sys.ini
/administrator/language/en-GB/en-GB.xml
/administrator/language/en-GB/install.xml
/administrator/language/overrides/*
/administrator/language/index.html
/administrator/logs/*
/administrator/manifests/files/joomla.xml
/administrator/manifests/libraries/fof.xml
/administrator/manifests/libraries/idna_convert.xml
/administrator/manifests/libraries/joomla.xml
/administrator/manifests/libraries/phpass.xml
/administrator/manifests/libraries/phputf8.xml
/administrator/manifests/packages/pkg_en-GB.xml
/administrator/manifests/packages/index.html
/administrator/modules/mod_custom/*
/administrator/modules/mod_feed/*
/administrator/modules/mod_latest/*
/administrator/modules/mod_latestactions/*
/administrator/modules/mod_logged/*
/administrator/modules/mod_login/*
/administrator/modules/mod_menu/*
/administrator/modules/mod_multilangstatus/*
/administrator/modules/mod_online/*
/administrator/modules/mod_popular/*
/administrator/modules/mod_privacy_dashboard/*
/administrator/modules/mod_quickicon/*
/administrator/modules/mod_sampledata/*
/administrator/modules/mod_stats_admin/*
/administrator/modules/mod_status/*
/administrator/modules/mod_submenu/*
/administrator/modules/mod_title/*
/administrator/modules/mod_toolbar/*
/administrator/modules/mod_unread/*
/administrator/modules/mod_version/*
/administrator/templates/hathor/*
/administrator/templates/isis/*
/administrator/templates/system/*
/bin/*
/cache/*
/cli/*
/components/com_ajax/*
/components/com_banners/*
/components/com_config/*
/components/com_contact/*
/components/com_content/*
/components/com_contenthistory/*
/components/com_fields/*
/components/com_finder/*
/components/com_mailto/*
/components/com_media/*
/components/com_menus/*
/components/com_modules/*
/components/com_newsfeeds/*
/components/com_privacy/*
/components/com_search/*
/components/com_tags/*
/components/com_users/*
/components/com_wrapper/*
/components/index.html
/images/banners/*
/images/headers/*
/images/sampledata/*
/images/index.html
/images/joomla*
/images/powered_by.png
/includes/*
/installation/*
/language/en-GB/en-GB.com_ajax.ini
/language/en-GB/en-GB.com_config.ini
/language/en-GB/en-GB.com_contact.ini
/language/en-GB/en-GB.com_content.ini
/language/en-GB/en-GB.com_finder.ini
/language/en-GB/en-GB.com_mailto.ini
/language/en-GB/en-GB.com_media.ini
/language/en-GB/en-GB.com_messages.ini
/language/en-GB/en-GB.com_newsfeeds.ini
/language/en-GB/en-GB.com_privacy.ini
/language/en-GB/en-GB.com_search.ini
/language/en-GB/en-GB.com_tags.ini
/language/en-GB/en-GB.com_users.ini
/language/en-GB/en-GB.com_weblinks.ini
/language/en-GB/en-GB.com_wrapper.ini
/language/en-GB/en-GB.files_joomla.sys.ini
/language/en-GB/en-GB.finder_cli.ini
/language/en-GB/en-GB.ini
/language/en-GB/en-GB.lib_fof.ini
/language/en-GB/en-GB.lib_fof.sys.ini
/language/en-GB/en-GB.lib_idna_convert.sys.ini
/language/en-GB/en-GB.lib_joomla.ini
/language/en-GB/en-GB.lib_joomla.sys.ini
/language/en-GB/en-GB.lib_phpass.sys.ini
/language/en-GB/en-GB.lib_phpmailer.sys.ini
/language/en-GB/en-GB.lib_phputf8.sys.ini
/language/en-GB/en-GB.lib_simplepie.sys.ini
/language/en-GB/en-GB.localise.php
/language/en-GB/en-GB.mod_articles_archive.ini
/language/en-GB/en-GB.mod_articles_archive.sys.ini
/language/en-GB/en-GB.mod_articles_categories.ini
/language/en-GB/en-GB.mod_articles_categories.sys.ini
/language/en-GB/en-GB.mod_articles_category.ini
/language/en-GB/en-GB.mod_articles_category.sys.ini
/language/en-GB/en-GB.mod_articles_latest.ini
/language/en-GB/en-GB.mod_articles_latest.sys.ini
/language/en-GB/en-GB.mod_articles_news.ini
/language/en-GB/en-GB.mod_articles_news.sys.ini
/language/en-GB/en-GB.mod_articles_popular.ini
/language/en-GB/en-GB.mod_articles_popular.sys.ini
/language/en-GB/en-GB.mod_banners.ini
/language/en-GB/en-GB.mod_banners.sys.ini
/language/en-GB/en-GB.mod_breadcrumbs.ini
/language/en-GB/en-GB.mod_breadcrumbs.sys.ini
/language/en-GB/en-GB.mod_custom.ini
/language/en-GB/en-GB.mod_custom.sys.ini
/language/en-GB/en-GB.mod_feed.ini
/language/en-GB/en-GB.mod_feed.sys.ini
/language/en-GB/en-GB.mod_finder.ini
/language/en-GB/en-GB.mod_finder.sys.ini
/language/en-GB/en-GB.mod_footer.ini
/language/en-GB/en-GB.mod_footer.sys.ini
/language/en-GB/en-GB.mod_languages.ini
/language/en-GB/en-GB.mod_languages.sys.ini
/language/en-GB/en-GB.mod_login.ini
/language/en-GB/en-GB.mod_login.sys.ini
/language/en-GB/en-GB.mod_menu.ini
/language/en-GB/en-GB.mod_menu.sys.ini
/language/en-GB/en-GB.mod_random_image.ini
/language/en-GB/en-GB.mod_random_image.sys.ini
/language/en-GB/en-GB.mod_related_items.ini
/language/en-GB/en-GB.mod_related_items.sys.ini
/language/en-GB/en-GB.mod_search.ini
/language/en-GB/en-GB.mod_search.sys.ini
/language/en-GB/en-GB.mod_stats.ini
/language/en-GB/en-GB.mod_stats.sys.ini
/language/en-GB/en-GB.mod_syndicate.ini
/language/en-GB/en-GB.mod_syndicate.sys.ini
/language/en-GB/en-GB.mod_tags_popular.ini
/language/en-GB/en-GB.mod_tags_popular.sys.ini
/language/en-GB/en-GB.mod_tags_similar.ini
/language/en-GB/en-GB.mod_tags_similar.sys.ini
/language/en-GB/en-GB.mod_users_latest.ini
/language/en-GB/en-GB.mod_users_latest.sys.ini
/language/en-GB/en-GB.mod_weblinks.ini
/language/en-GB/en-GB.mod_weblinks.sys.ini
/language/en-GB/en-GB.mod_whosonline.ini
/language/en-GB/en-GB.mod_whosonline.sys.ini
/language/en-GB/en-GB.mod_wrapper.ini
/language/en-GB/en-GB.mod_wrapper.sys.ini
/language/en-GB/en-GB.tpl_atomic.ini
/language/en-GB/en-GB.tpl_atomic.sys.ini
/language/en-GB/en-GB.tpl_beez3.ini
/language/en-GB/en-GB.tpl_beez3.sys.ini
/language/en-GB/en-GB.tpl_beez5.ini
/language/en-GB/en-GB.tpl_beez5.sys.ini
/language/en-GB/en-GB.tpl_beez_20.ini
/language/en-GB/en-GB.tpl_beez_20.sys.ini
/language/en-GB/en-GB.tpl_protostar.ini
/language/en-GB/en-GB.tpl_protostar.sys.ini
/language/en-GB/en-GB.xml
/language/en-GB/install.xml
/language/overrides/*
/language/index.html
/layouts/joomla/*
/layouts/libraries/*
/layouts/plugins/*
/layouts/index.html
/libraries/cms/*
/libraries/fof/*
/libraries/idna_convert/*
/libraries/joomla/*
/libraries/legacy/*
/libraries/php-encryption/*
/libraries/phpass/*
/libraries/phpmailer/*
/libraries/phputf8/*
/libraries/simplepie/*
/libraries/src/*
/libraries/vendor/*
/libraries/classmap.php
/libraries/cms.php
/libraries/import.legacy.php
/libraries/import.php
/libraries/index.html
/libraries/loader.php
/media/cms/*
/media/com_associations/*
/media/com_contact/*
/media/com_content/*
/media/com_contenthistory/*
/media/com_fields/*
/media/com_finder/*
/media/com_joomlaupdate/*
/media/com_menus/*
/media/com_modules/*
/media/com_wrapper/*
/media/contacts/*
/media/editors/*
/media/jui/*
/media/mailto/*
/media/media/*
/media/mod_languages/*
/media/mod_sampledata/*
/media/overrider/*
/media/plg_captcha_recaptcha/*
/media/plg_captcha_recaptcha_invisible/*
/media/plg_quickicon_extensionupdate/*
/media/plg_quickicon_joomlaupdate/*
/media/plg_quickicon_privacycheck/*
/media/plg_system_highlight/*
/media/plg_system_stats/*
/media/plg_twofactorauth_totp/*
/media/system/*
/media/index.html
/modules/mod_articles_archive/*
/modules/mod_articles_categories/*
/modules/mod_articles_category/*
/modules/mod_articles_latest/*
/modules/mod_articles_news/*
/modules/mod_articles_popular/*
/modules/mod_banners/*
/modules/mod_breadcrumbs/*
/modules/mod_custom/*
/modules/mod_feed/*
/modules/mod_finder/*
/modules/mod_footer/*
/modules/mod_languages/*
/modules/mod_login/*
/modules/mod_menu/*
/modules/mod_random_image/*
/modules/mod_related_items/*
/modules/mod_search/*
/modules/mod_stats/*
/modules/mod_syndicate/*
/modules/mod_tags_popular/*
/modules/mod_tags_similar/*
/modules/mod_users_latest/*
/modules/mod_whosonline/*
/modules/mod_wrapper/*
/modules/index.html
/plugins/actionlog/joomla/*
/plugins/authentication/cookie/*
/plugins/authentication/example/*
/plugins/authentication/gmail/*
/plugins/authentication/joomla/*
/plugins/authentication/ldap/*
/plugins/captcha/recaptcha/*
/plugins/captcha/recaptcha_invisible/*
/plugins/content/confirmconsent/*
/plugins/content/contact/*
/plugins/content/emailcloak/*
/plugins/content/example/*
/plugins/content/fields/*
/plugins/content/finder/*
/plugins/content/geshi/*
/plugins/content/joomla/*
/plugins/content/loadmodule/*
/plugins/content/pagebreak/*
/plugins/content/pagenavigation/*
/plugins/content/vote/*
/plugins/editors/codemirror/*
/plugins/editors/none/*
/plugins/editors/tinymce/*
/plugins/editors-xtd/article/*
/plugins/editors-xtd/contact/*
/plugins/editors-xtd/fields/*
/plugins/editors-xtd/image/*
/plugins/editors-xtd/menu/*
/plugins/editors-xtd/module/*
/plugins/editors-xtd/pagebreak/*
/plugins/editors-xtd/readmore/*
/plugins/extension/example/*
/plugins/extension/joomla/*
/plugins/fields/calendar/*
/plugins/fields/checkboxes/*
/plugins/fields/color/*
/plugins/fields/editor/*
/plugins/fields/imagelist/*
/plugins/fields/integer/*
/plugins/fields/list/*
/plugins/fields/media/*
/plugins/fields/radio/*
/plugins/fields/repeatable/*
/plugins/fields/sql/*
/plugins/fields/text/*
/plugins/fields/textarea/*
/plugins/fields/url/*
/plugins/fields/user/*
/plugins/fields/usergrouplist/*
/plugins/finder/categories/*
/plugins/finder/contacts/*
/plugins/finder/content/*
/plugins/finder/newsfeeds/*
/plugins/finder/tags/*
/plugins/installer/folderinstaller/*
/plugins/installer/packageinstaller/*
/plugins/installer/urlinstaller/*
/plugins/privacy/actionlogs/*
/plugins/privacy/consents/*
/plugins/privacy/contact/*
/plugins/privacy/content/*
/plugins/privacy/message/*
/plugins/privacy/user/*
/plugins/quickicon/extensionupdate/*
/plugins/quickicon/joomlaupdate/*
/plugins/quickicon/phpversioncheck/*
/plugins/quickicon/privacycheck/*
/plugins/quickicon/index.html
/plugins/sampledata/blog/*
/plugins/search/categories/*
/plugins/search/contacts/*
/plugins/search/content/*
/plugins/search/newsfeeds/*
/plugins/search/tags/*
/plugins/search/weblinks/*
/plugins/search/index.html
/plugins/system/actionlogs/*
/plugins/system/cache/*
/plugins/system/debug/*
/plugins/system/fields/*
/plugins/system/highlight/*
/plugins/system/languagecode/*
/plugins/system/languagefilter/*
/plugins/system/log/*
/plugins/system/logout/*
/plugins/system/logrotation/*
/plugins/system/p3p/*
/plugins/system/privacyconsent/*
/plugins/system/redirect/*
/plugins/system/remember/*
/plugins/system/sef/*
/plugins/system/sessiongc/*
/plugins/system/stats/*
/plugins/system/updatenotification/*
/plugins/system/index.html
/plugins/twofactorauth/totp/*
/plugins/twofactorauth/yubikey/*
/plugins/user/contactcreator/*
/plugins/user/example/*
/plugins/user/joomla/*
/plugins/user/profile/*
/plugins/user/terms/*
/plugins/user/index.html
/plugins/index.html
/templates/beez3/*
/templates/protostar/*
/templates/system/*
/templates/index.html
/tmp/*
/configuration.php
/htaccess.txt
/index.php
/joomla.xml
/LICENSE.txt
/README.txt
/robots.txt.dist
/web.config.txt



================================================
FILE: Julia.gitignore
================================================
# Files generated by invoking Julia with --code-coverage
*.jl.cov
*.jl.*.cov

# Files generated by invoking Julia with --track-allocation
*.jl.mem

# System-specific files and directories generated by the BinaryProvider and BinDeps packages
# They contain absolute paths specific to the host computer, and so should not be committed
deps/deps.jl
deps/build.log
deps/downloads/
deps/usr/
deps/src/

# Build artifacts for creating documentation generated by the Documenter package
docs/build/
docs/site/

# File generated by Pkg, the package manager, based on a corresponding Project.toml
# It records a fixed state of all packages used by the project. As such, it should not be
# committed for packages, but should be committed for applications that require a static
# environment.
Manifest*.toml

# File generated by the Preferences package to store local preferences
LocalPreferences.toml
JuliaLocalPreferences.toml



================================================
FILE: Katalon.gitignore
================================================
# Katalon Test Suite
# Compiled class file
*.class
*.swp
output
!output/.gitkeep
build

Libs/TempTestCase*
Libs/TempTestSuite*
bin/lib/TempTestCase*
Reports/
\.classpath
\.project
\.settings/
bin/lib/
Libs/
.svn/
.gradle


# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*



================================================
FILE: KiCad.gitignore
================================================
# For PCBs designed using KiCad: https://www.kicad.org/
# Format documentation: https://kicad.org/help/file-formats/

# Temporary files
*.000
*.bak
*.bck
*.kicad_pcb-bak
*.kicad_sch-bak
*-backups
*-cache*
*-bak
*-bak*
*~
~*
_autosave-*
\#auto_saved_files\#
*.tmp
*-save.pro
*-save.kicad_pcb
fp-info-cache
~*.lck
\#auto_saved_files#

# Netlist files (exported from Eeschema)
*.net

# Autorouter files (exported from Pcbnew)
*.dsn
*.ses

# Exported BOM files
*.xml
*.csv

# Archived Backups (KiCad 6.0)
**/*-backups/*.zip

# Local project settings
*.kicad_prl



================================================
FILE: Kohana.gitignore
================================================
application/cache/*
application/logs/*



================================================
FILE: Kotlin.gitignore
================================================
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*

# Kotlin Gradle plugin data, see https://kotlinlang.org/docs/whatsnew20.html#new-directory-for-kotlin-data-in-gradle-projects
.kotlin/


================================================
FILE: LabVIEW.gitignore
================================================
# Libraries
*.lvlibp
*.llb

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe

# Metadata
*.aliases
*.lvlps
.cache/



================================================
FILE: LangChain.gitignore
================================================
# gitignore template for LangChain products, e.g., LangGraph, LangSmith
# website: https://www.langchain.com/
# website: https://www.langchain.com/langgraph

# LangGraph
.langgraph_api/



================================================
FILE: Laravel.gitignore
================================================
/vendor/
node_modules/
npm-debug.log
yarn-error.log

# Laravel 4 specific
bootstrap/compiled.php
app/storage/

# Laravel 5 & Lumen specific
public/storage
public/hot

# Laravel 5 & Lumen specific with changed public path
public_html/storage
public_html/hot

storage/*.key
.env
Homestead.yaml
Homestead.json
/.vagrant
.phpunit.result.cache

/public/build
/storage/pail
.env.backup
.env.production
.phpactor.json
auth.json



================================================
FILE: Leiningen.gitignore
================================================
pom.xml
pom.xml.asc
*.jar
*.class
/lib/
/classes/
/target/
/checkouts/
.lein-deps-sum
.lein-repl-history
.lein-plugins/
.lein-failures
.nrepl-port
.cpcache/



================================================
FILE: LemonStand.gitignore
================================================
boot.php
index.php
install.php
/config/*
!/config/config.php
/controllers/*
/init/*
/logs/*
/phproad/*
/temp/*
/uploaded/*
/installer_files/*
/modules/backend/*
/modules/blog/*
/modules/cms/*
/modules/core/*
/modules/session/*
/modules/shop/*
/modules/system/*
/modules/users/*
# add content_*.php if you don't want erase client changes to content



================================================
FILE: LICENSE
================================================
CC0 1.0 Universal

Statement of Purpose

The laws of most jurisdictions throughout the world automatically confer
exclusive Copyright and Related Rights (defined below) upon the creator and
subsequent owner(s) (each and all, an "owner") of an original work of
authorship and/or a database (each, a "Work").

Certain owners wish to permanently relinquish those rights to a Work for the
purpose of contributing to a commons of creative, cultural and scientific
works ("Commons") that the public can reliably and without fear of later
claims of infringement build upon, modify, incorporate in other works, reuse
and redistribute as freely as possible in any form whatsoever and for any
purposes, including without limitation commercial purposes. These owners may
contribute to the Commons to promote the ideal of a free culture and the
further production of creative, cultural and scientific works, or to gain
reputation or greater distribution for their Work in part through the use and
efforts of others.

For these and/or other purposes and motivations, and without any expectation
of additional consideration or compensation, the person associating CC0 with a
Work (the "Affirmer"), to the extent that he or she is an owner of Copyright
and Related Rights in the Work, voluntarily elects to apply CC0 to the Work
and publicly distribute the Work under its terms, with knowledge of his or her
Copyright and Related Rights in the Work and the meaning and intended legal
effect of CC0 on those rights.

1. Copyright and Related Rights. A Work made available under CC0 may be
protected by copyright and related or neighboring rights ("Copyright and
Related Rights"). Copyright and Related Rights include, but are not limited
to, the following:

  i. the right to reproduce, adapt, distribute, perform, display, communicate,
  and translate a Work;

  ii. moral rights retained by the original author(s) and/or performer(s);

  iii. publicity and privacy rights pertaining to a person's image or likeness
  depicted in a Work;

  iv. rights protecting against unfair competition in regards to a Work,
  subject to the limitations in paragraph 4(a), below;

  v. rights protecting the extraction, dissemination, use and reuse of data in
  a Work;

  vi. database rights (such as those arising under Directive 96/9/EC of the
  European Parliament and of the Council of 11 March 1996 on the legal
  protection of databases, and under any national implementation thereof,
  including any amended or successor version of such directive); and

  vii. other similar, equivalent or corresponding rights throughout the world
  based on applicable law or treaty, and any national implementations thereof.

2. Waiver. To the greatest extent permitted by, but not in contravention of,
applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and
unconditionally waives, abandons, and surrenders all of Affirmer's Copyright
and Related Rights and associated claims and causes of action, whether now
known or unknown (including existing as well as future claims and causes of
action), in the Work (i) in all territories worldwide, (ii) for the maximum
duration provided by applicable law or treaty (including future time
extensions), (iii) in any current or future medium and for any number of
copies, and (iv) for any purpose whatsoever, including without limitation
commercial, advertising or promotional purposes (the "Waiver"). Affirmer makes
the Waiver for the benefit of each member of the public at large and to the
detriment of Affirmer's heirs and successors, fully intending that such Waiver
shall not be subject to revocation, rescission, cancellation, termination, or
any other legal or equitable action to disrupt the quiet enjoyment of the Work
by the public as contemplated by Affirmer's express Statement of Purpose.

3. Public License Fallback. Should any part of the Waiver for any reason be
judged legally invalid or ineffective under applicable law, then the Waiver
shall be preserved to the maximum extent permitted taking into account
Affirmer's express Statement of Purpose. In addition, to the extent the Waiver
is so judged Affirmer hereby grants to each affected person a royalty-free,
non transferable, non sublicensable, non exclusive, irrevocable and
unconditional license to exercise Affirmer's Copyright and Related Rights in
the Work (i) in all territories worldwide, (ii) for the maximum duration
provided by applicable law or treaty (including future time extensions), (iii)
in any current or future medium and for any number of copies, and (iv) for any
purpose whatsoever, including without limitation commercial, advertising or
promotional purposes (the "License"). The License shall be deemed effective as
of the date CC0 was applied by Affirmer to the Work. Should any part of the
License for any reason be judged legally invalid or ineffective under
applicable law, such partial invalidity or ineffectiveness shall not
invalidate the remainder of the License, and in such case Affirmer hereby
affirms that he or she will not (i) exercise any of his or her remaining
Copyright and Related Rights in the Work or (ii) assert any associated claims
and causes of action with respect to the Work, in either case contrary to
Affirmer's express Statement of Purpose.

4. Limitations and Disclaimers.

  a. No trademark or patent rights held by Affirmer are waived, abandoned,
  surrendered, licensed or otherwise affected by this document.

  b. Affirmer offers the Work as-is and makes no representations or warranties
  of any kind concerning the Work, express, implied, statutory or otherwise,
  including without limitation warranties of title, merchantability, fitness
  for a particular purpose, non infringement, or the absence of latent or
  other defects, accuracy, or the present or absence of errors, whether or not
  discoverable, all to the greatest extent permissible under applicable law.

  c. Affirmer disclaims responsibility for clearing rights of other persons
  that may apply to the Work or any use thereof, including without limitation
  any person's Copyright and Related Rights in the Work. Further, Affirmer
  disclaims responsibility for obtaining any necessary consents, permissions
  or other rights required for any use of the Work.

  d. Affirmer understands and acknowledges that Creative Commons is not a
  party to this document and has no duty or obligation with respect to this
  CC0 or use of the Work.

For more information, please see
<http://creativecommons.org/publicdomain/zero/1.0/>



================================================
FILE: Lilypond.gitignore
================================================
*.pdf
*.ps
*.midi
*.mid
*.log
*~



================================================
FILE: Lithium.gitignore
================================================
libraries/*
resources/tmp/*



================================================
FILE: Lua.gitignore
================================================
# Compiled Lua sources
luac.out

# luarocks build files
*.src.rock
*.zip
*.tar.gz

# Object files
*.o
*.os
*.ko
*.obj
*.elf

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo
*.def
*.exp

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex




================================================
FILE: Luau.gitignore
================================================
# A fast, small, safe, gradually typed embeddable scripting language derived from Lua
#
# https://github.com/luau-lang/luau
# https://luau.org/

# Code coverage
coverage.out

# Profiling
profile.out
profile.svg

# Time trace
trace.json



================================================
FILE: Magento.gitignore
================================================
#--------------------------#
# Magento Default Files    #
#--------------------------#

/PATCH_*.sh

/app/etc/local.xml

/media/*
!/media/.htaccess

!/media/customer
/media/customer/*
!/media/customer/.htaccess

!/media/dhl
/media/dhl/*
!/media/dhl/logo.jpg

!/media/downloadable
/media/downloadable/*
!/media/downloadable/.htaccess

!/media/xmlconnect
/media/xmlconnect/*

!/media/xmlconnect/custom
/media/xmlconnect/custom/*
!/media/xmlconnect/custom/ok.gif

!/media/xmlconnect/original
/media/xmlconnect/original/*
!/media/xmlconnect/original/ok.gif

!/media/xmlconnect/system
/media/xmlconnect/system/*
!/media/xmlconnect/system/ok.gif

/var/*
!/var/.htaccess

!/var/package
/var/package/*
!/var/package/*.xml




================================================
FILE: Maven.gitignore
================================================
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
# https://maven.apache.org/wrapper/#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar

# Eclipse m2e generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath



================================================
FILE: Mercury.gitignore
================================================
Mercury/
Mercury.modules
*.mh
*.err
*.init
*.dll
*.exe
*.a
*.so
*.dylib
*.beams
*.d
*.c_date



================================================
FILE: MetaProgrammingSystem.gitignore
================================================
workspace.xml
junitvmwatcher*.properties
build.properties

# generated java classes and java source files
#   manually add any custom artifacts that can't be generated from the models
#   http://confluence.jetbrains.com/display/MPSD25/HowTo+--+MPS+and+Git
classes_gen
source_gen
source_gen.caches

# generated test code and test results
test_gen
test_gen.caches
TEST-*.xml
junit*.properties



================================================
FILE: Modelica.gitignore
================================================
# Modelica - an object-oriented language for modeling of cyber-physical systems
# https://modelica.org/
# Ignore temporary files, build results, simulation files

## Modelica-specific files
*~
*.bak
*.bak-mo
*.mof
\#*\#
*.moe
*.mol

## Build artefacts
*.exe
*.exp
*.o
*.pyc

## Simulation files
*.mat

## Package files
*.gz
*.rar
*.tar
*.zip

## Dymola-specific files
buildlog.txt
dsfinal.txt
dsin.txt
dslog.txt
dsmodel*
dsres.txt
dymosim*
request
stat
status
stop
success
*.



================================================
FILE: ModelSim.gitignore
================================================
# ignore ModelSim generated files and directories (temp files and so on)
[_@]*

# ignore compilation output of ModelSim
*.mti
*.dat
*.dbs
*.psm
*.bak
*.cmp
*.jpg
*.html
*.bsf

# ignore simulation output of ModelSim
wlf*
*.wlf
*.vstf
*.ucdb
cov*/
transcript*
sc_dpiheader.h
vsim.dbg



================================================
FILE: Nanoc.gitignore
================================================
# For projects using Nanoc (http://nanoc.ws/)

# Default location for output (needs to match output_dir's value found in nanoc.yaml)
output/

# Temporary file directory
tmp/nanoc/

# Crash Log
crash.log



================================================
FILE: Nestjs.gitignore
================================================
# Nestjs specific
/dist
/node_modules
/build
/tmp

# Logs
logs
*.log
npm-debug.log*
pnpm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# dotenv environment variable files
.env
.env.development
.env.test
.env.production

# temp directory
.temp
.tmp



================================================
FILE: Nextjs.gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local
.env

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts



================================================
FILE: Nim.gitignore
================================================
nimcache/
nimblecache/
htmldocs/



================================================
FILE: Nix.gitignore
================================================
# Ignore build outputs from performing a nix-build or `nix build` command
result
result-*

# Ignore automatically generated direnv output
.direnv



================================================
FILE: Node.gitignore
================================================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.*
!.env.example

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist
.output

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Sveltekit cache directory
.svelte-kit/

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Firebase cache directory
.firebase/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Vite files
vite.config.js.timestamp-*
vite.config.ts.timestamp-*
.vite/



================================================
FILE: Objective-C.gitignore
================================================
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output



================================================
FILE: OCaml.gitignore
================================================
*.annot
*.cmo
*.cma
*.cmi
*.a
*.o
*.cmx
*.cmxs
*.cmxa

# Files containing detailed information about the compilation (generated
# by `ocamlc`/`ocamlopt` when invoked using the option `-bin-annot`).
# These files are typically useful for code inspection tools
# (e.g. Merlin).
*.cmt
*.cmti

# ocamlbuild and Dune default working directory
_build/

# ocamlbuild targets
*.byte
*.native

# oasis generated files
setup.data
setup.log

# Merlin configuring file for Vim and Emacs
.merlin

# Dune generated files
*.install

# Local OPAM switch
_opam/



================================================
FILE: Opa.gitignore
================================================
_build
_tracks

opa-debug-js

*.opp
*.opx
*.opx.broken
*.dump
*.api
*.api-txt
*.exe
*.log



================================================
FILE: OpenCart.gitignore
================================================
.htaccess
/config.php
admin/config.php

!index.html

download/
image/data/
image/cache/
system/cache/
system/logs/

system/storage/

# vQmod log files
vqmod/logs/*
# vQmod cache files
vqmod/vqcache/*
vqmod/checked.cache
vqmod/mods.cache



================================================
FILE: OracleForms.gitignore
================================================
# Compiled Form Modules
*.fmx

# Compiled Menu Modules
*.mmx

# Compiled Pre-Linked Libraries
*.plx



================================================
FILE: Packer.gitignore
================================================
# Cache objects
packer_cache/

# Crash log
crash.log

# https://www.packer.io/guides/hcl/variables
# Exclude all .pkrvars.hcl files, which are likely to contain sensitive data,
# such as password, private keys, and other secrets. These should not be part of
# version control as they are data points which are potentially sensitive and
# subject to change depending on the environment.
#
*.pkrvars.hcl

# For built boxes
*.box



================================================
FILE: Perl.gitignore
================================================
!Build/
.last_cover_stats
/META.yml
/META.json
/MYMETA.*
*.o
*.pm.tdy
*.bs

# Devel::Cover
cover_db/

# Devel::NYTProf
nytprof.out

# Dist::Zilla
/.build/

# Module::Build
_build/
Build
Build.bat

# Module::Install
inc/

# ExtUtils::MakeMaker
/blib/
/_eumm/
/*.gz
/Makefile
/Makefile.old
/MANIFEST.bak
/pm_to_blib
/*.zip

# Carton/Carmel
/local/
/.carmel/
# cpanfile.snapshot should generally be ignored for library code, otherwise included
# cpanfile.snapshot



================================================
FILE: Phalcon.gitignore
================================================
/cache/
/config/development/



================================================
FILE: PlayFramework.gitignore
================================================
# Ignore Play! working directory #
bin/
/db
.eclipse
/lib/
/logs/
/modules
/project/project
/project/target
/target
tmp/
test-result
server.pid
*.eml
/dist/
.cache



================================================
FILE: Plone.gitignore
================================================
*.pyc
*.pyo
*.tmp*
*.mo
*.egg
*.EGG
*.egg-info
*.EGG-INFO
.*.cfg
bin/
build/
develop-eggs/
downloads/
eggs/
fake-eggs/
parts/
dist/
var/



================================================
FILE: Prestashop.gitignore
================================================
# Cache, temp and personal files

/.htaccess
*.log

# Cache
/cache/*
!/cache/.htaccess
!/cache/cachefs/index.php
!/cache/deprecated.txt
!/cache/index.php
!/cache/purifier/index.php
!/cache/push/activity
!/cache/push/index.php
!/cache/push/trends
!/cache/sandbox/index.php
!/cache/smarty/cache/index.php
!/cache/smarty/compile/index.php
!/cache/smarty/index.php
!/cache/tcpdf/index.php

# Download
/download/*
!/download/.htaccess
!/download/index.php

# Images
/img/*
!/img/.htaccess
!/img/index.php
!/img/404.gif
!/img/bg_500.png
!/img/bg_loader.png
!/img/favicon.ico
!/img/loader.gif
!/img/loadingAnimation.gif
!/img/logo.jpg
!/img/logo.png
!/img/logo_invoice.jpg
!/img/logo_stores.png
!/img/macFFBgHack.png
!/img/prestashop-avatar.png
!/img/prestashop@2x.png
!/img/preston-login-wink@2x.png
!/img/preston-login@2x.png
!/img/questionmark.png
!/img/genders/index.php
!/img/admin/index.php
!/img/c/index.php
!/img/cms/index.php
!/img/co/index.php
!/img/jquery-ui
!/img/l/index.php
!/img/m/index.php
!/img/os/index.php
!/img/p/index.php
!/img/s/index.php
!/img/scenes
!/img/st/index.php
!/img/su/index.php
!/img/t/index.php
!/img/tmp/index.php

# Upload
/upload/*
!/upload/.htaccess

/vendor/*
/docs/phpdoc-sf/
/composer.lock
*.hot-update.js
*.hot-update.json


/admin-dev/autoupgrade/*
!/admin-dev/autoupgrade/index.php
!/admin-dev/autoupgrade/backup/index.php

/admin-dev/backups/*
!/admin-dev/backups/.htaccess

/admin-dev/import/*
!/admin-dev/import/.htaccess
!/admin-dev/import/index.php

/admin-dev/export/*
!/admin-dev/export/.htaccess
!/admin-dev/export/index.php

# Downloaded RTL files
/admin-dev/themes/default/css/bundle/default_rtl.css
/admin-dev/themes/default/css/bundle/shared_rtl.css
/admin-dev/themes/default/css/font_rtl.css
/admin-dev/themes/default/css/overrides_rtl.css
/admin-dev/themes/default/css/vendor/font-awesome/font-awesome_rtl.css
/admin-dev/themes/default/css/vendor/nv.d3_rtl.css
/admin-dev/themes/default/css/vendor/titatoggle-min_rtl.css
/admin-dev/themes/default/public/theme_rtl.css
/admin-dev/themes/new-theme/css/module/drop_rtl.css
/admin-dev/themes/new-theme/css/right-sidebar_rtl.css

themes/*/cache/*

# Config

config/settings.inc.php
config/settings.old.php
config/xml/*
config/themes/*
!config/xml/themes/default.xml
themes/*/config/settings_*.json
app/config/parameters.old.yml
app/config/config.php

# Themes, modules and overrides

modules/*
override/*
themes/*/
!themes/classic
!themes/_core
!themes/_libraries

# Vendors and dependencies

bower_components/
node_modules/
composer.phar
php-cs-fixer
.grunt/*

# Translations and emails templates

translations/*
mails/*
!mails/themes/
!mails/_partials/
themes/default-bootstrap/lang/*
themes/default-bootstrap/modules/*/translations/*.php
themes/default-bootstrap/mails/*
!themes/default-bootstrap/mails/en/
themes/default-bootstrap/modules/*/mails/*
!themes/default-bootstrap/modules/*/mails/en

# MISC

*sitemap.xml
/robots.txt

# Symfony

/bin/
/app/Resources/geoip/GeoLite2-City.mmdb
/app/Resources/translations/*
!/app/Resources/translations/default
/app/config/parameters.yml
/app/config/parameters.php
/build/
/phpunit.xml
/var/*
!/var/cache
/var/cache/*
!var/cache/.gitkeep
!/var/logs
/var/logs/*
!var/logs/.gitkeep
!/var/sessions
/var/sessions/*
!var/sessions/.gitkeep
!var/SymfonyRequirements.php
/vendor/
/web/bundles/




================================================
FILE: Processing.gitignore
================================================
.DS_Store
applet
application.linux-arm64
application.linux-armv6hf
application.linux32
application.linux64
application.windows32
application.windows64
application.macosx
out



================================================
FILE: PureScript.gitignore
================================================
# Dependencies
.psci_modules
.spago
bower_components
node_modules

# Generated files
.psci
output



================================================
FILE: Python.gitignore
================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# Redis
*.rdb
*.aof
*.pid

# RabbitMQ
mnesia/
rabbitmq/
rabbitmq-data/

# ActiveMQ
activemq-data/

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer,
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/

# Streamlit
.streamlit/secrets.toml



================================================
FILE: Qooxdoo.gitignore
================================================
cache
cache-downloads
inspector
api
source/inspector.html



================================================
FILE: Qt.gitignore
================================================
# C++ objects and libs
*.slo
*.lo
*.o
*.a
*.la
*.lai
*.so
*.so.*
*.dll
*.dylib

# Qt-es
object_script.*.Release
object_script.*.Debug
*_plugin_import.cpp
/.qmake.cache
/.qmake.stash
*.pro.user
*.pro.user.*
*.qbs.user
*.qbs.user.*
*.moc
moc_*.cpp
moc_*.h
qrc_*.cpp
ui_*.h
*.qmlc
*.jsc
Makefile*
*build-*
*.qm
*.prl

# Qt unit tests
target_wrapper.*

# QtCreator
*.autosave

# QtCreator Qml
*.qmlproject.user
*.qmlproject.user.*

# QtCreator CMake
CMakeLists.txt.user*

# QtCreator 4.8< compilation database
compile_commands.json

# QtCreator local machine specific files for imported projects
*creator.user*

*_qmlcache.qrc



================================================
FILE: R.gitignore
================================================
# History files
.Rhistory
.Rapp.history

# Session Data files
.RData
.RDataTmp

# User-specific files
.Ruserdata

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf

# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3
.httr-oauth

# knitr and R markdown default cache directories
*_cache/
/cache/

# Temporary files created by R markdown
*.utf8.md
*.knit.md

# R Environment Variables
.Renviron

# pkgdown site
docs/

# translation temp files
po/*~

# RStudio Connect folder
rsconnect/



================================================
FILE: Racket.gitignore
================================================
.DS_Store
compiled/
/doc/
*~
*.bak
\#*
.\#*



================================================
FILE: Rails.gitignore
================================================
*.rbc
capybara-*.html
.rspec
/db/*.sqlite3
/db/*.sqlite3-journal
/db/*.sqlite3-[0-9]*
/public/system
/coverage/
/spec/tmp
*.orig
rerun.txt
pickle-email-*.html

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# TODO Comment out this rule if you are OK with secrets being uploaded to the repo
config/initializers/secret_token.rb
config/master.key

# Only include if you have production secrets in this file, which is no longer a Rails default
# config/secrets.yml

# dotenv, dotenv-rails
# TODO Comment out these rules if environment variables can be committed
.env
.env*.local

## Environment normalization:
/.bundle
/vendor/bundle

# these should all be checked in to normalize the environment:
# Gemfile.lock, .ruby-version, .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# if using bower-rails ignore default bower_components path bower.json files
/vendor/assets/bower_components
*.bowerrc
bower.json

# Ignore pow environment settings
.powenv

# Ignore Byebug command history file.
.byebug_history

# Ignore node_modules
node_modules/

# Ignore precompiled javascript packs
/public/packs
/public/packs-test
/public/assets

# Ignore yarn files
/yarn-error.log
yarn-debug.log*
.yarn-integrity

# Ignore uploaded files in development
/storage/*
!/storage/.keep
/public/uploads



================================================
FILE: Raku.gitignore
================================================
# Gitignore for Raku (https://raku.org)
# As part of https://github.com/github/gitignore

# precompiled files
.precomp
lib/.precomp




================================================
FILE: ReScript.gitignore
================================================
/node_modules/
/lib/
.bsb.lock



================================================
FILE: RhodesRhomobile.gitignore
================================================
rholog-*
sim-*
bin/libs
bin/RhoBundle
bin/tmp
bin/target
bin/*.ap_
*.o
*.jar



================================================
FILE: ROS.gitignore
================================================
devel/
logs/
build/
bin/
lib/
msg_gen/
srv_gen/
msg/*Action.msg
msg/*ActionFeedback.msg
msg/*ActionGoal.msg
msg/*ActionResult.msg
msg/*Feedback.msg
msg/*Goal.msg
msg/*Result.msg
msg/_*.py
build_isolated/
devel_isolated/

# Generated by dynamic reconfigure
*.cfgc
/cfg/cpp/
/cfg/*.py

# Ignore generated docs
*.dox
*.wikidoc

# eclipse stuff
.project
.cproject

# qcreator stuff
CMakeLists.txt.user

srv/_*.py
*.pcd
*.pyc
qtcreator-*
*.user

/planning/cfg
/planning/docs
/planning/src

*~

# Emacs
.#*

# Catkin custom files
CATKIN_IGNORE



================================================
FILE: Ruby.gitignore
================================================
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# Used by dotenv library to load environment variables.
# .env

# Ignore Byebug command history file.
.byebug_history

## Specific to RubyMotion:
.dat*
.repl_history
build/
*.bridgesupport
build-iPhoneOS/
build-iPhoneSimulator/

## Specific to RubyMotion (use of CocoaPods):
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# vendor/Pods/

## Documentation cache and generated files:
/.yardoc/
/_yardoc/
/doc/
/rdoc/

## Environment normalization:
/.bundle/
/vendor/bundle
/lib/bundler/man/

# for a library or gem, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check them in:
# Gemfile.lock
# .ruby-version
# .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# Used by RuboCop. Remote config files pulled in from inherit_from directive.
# .rubocop-https?--*



================================================
FILE: Rust.gitignore
================================================
# Generated by Cargo
# will have compiled files and executables
debug
target

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Generated by cargo mutants
# Contains mutation testing data
**/mutants.out*/

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/



================================================
FILE: Salesforce.gitignore
================================================
# This file is used for Git repositories to specify intentionally untracked files that Git should ignore. 
# If you are not using git, you can delete this file. For more information see: https://git-scm.com/docs/gitignore
# For useful gitignore templates see: https://github.com/github/gitignore

# Salesforce cache
.sf/
.sfdx/
.localdevserver/
deploy-options.json
.localdev

# LWC VSCode autocomplete
**/lwc/jsconfig.json

# LWC Jest coverage reports
coverage/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Eslint cache
.eslintcache

# Windows system files
Thumbs.db
ehthumbs.db
[Dd]esktop.ini
$RECYCLE.BIN/

# Salesforce Analyzer results
sca-results.csv
sfca_results.json

# Local environment variables
.env



================================================
FILE: Sass.gitignore
================================================
.sass-cache/
*.css.map
*.sass.map
*.scss.map



================================================
FILE: Scala.gitignore
================================================
*.class
*.log

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*



================================================
FILE: Scheme.gitignore
================================================
*.ss~
*.ss#*
.#*.ss

*.scm~
*.scm#*
.#*.scm



================================================
FILE: SCons.gitignore
================================================
# for projects that use SCons for building: http://http://www.scons.org/
.sconsign.dblite

# When configure fails, SCons outputs these
config.log
.sconf_temp



================================================
FILE: Scrivener.gitignore
================================================
*/Files/binder.autosave
*/Files/binder.backup
*/Files/search.indexes
*/Files/user.lock
*/Files/Docs/docs.checksum
*/Files/Data/docs.checksum
*/QuickLook/
*/Settings/ui.plist



================================================
FILE: Sdcc.gitignore
================================================
# SDCC stuff
*.lnk
*.lst
*.map
*.mem
*.rel
*.rst
*.sym



================================================
FILE: SeamGen.gitignore
================================================
/bootstrap/data
/bootstrap/tmp
/classes/
/dist/
/exploded-archives/
/test-build/
/test-output/
/test-report/
/target/
temp-testng-customsuite.xml

# based on http://stackoverflow.com/a/8865858/422476 I am removing inline comments

#/classes/  		              all class files
#/dist/                       contains generated war files for deployment
#/exploded-archives/		      war content generation during deploy (or explode)
#/test-build/                 test compilation (ant target for Seam)
#/test-output/                test results
#/test-report/                test report generation for, e.g., Hudson
#/target/                     maven output folder
#temp-testng-customsuite.xml	generated when running test cases under Eclipse

# Thanks to @VonC and @kraftan for their helpful answers on a related question
# on StackOverflow.com:
# http://stackoverflow.com/questions/4176687
# /what-is-the-recommended-source-control-ignore-pattern-for-seam-projects



================================================
FILE: SketchUp.gitignore
================================================
*.skb



================================================
FILE: Smalltalk.gitignore
================================================
# changes file
*.changes
*.chg

# system image
*.image
*.img7
*.img

# Pharo Smalltalk Debug log file
PharoDebug.log

# Squeak Smalltalk Debug log file
SqueakDebug.log

# Dolphin Smalltalk source file
*.sml

# Dolphin Smalltalk error file
*.errors

# Monticello package cache
/package-cache

# playground cache
/play-cache
/play-stash

# Metacello-github cache
/github-cache
github-*.zip



================================================
FILE: Solidity-Remix.gitignore
================================================
# Remix compiler artifacts
**/artifacts/
**/artifacts/**

# Remix plugin state folders
deps/
states/

# Debug info
*.dbg.json
*.tsbuildinfo

# Optional
.env
.env.local


================================================
FILE: SSDT-sqlproj.gitignore
================================================
## Ignore Visual Studio SSDT sqlproj specific temporary files, build results, etc
##
##
## Get latest from https://github.com/github/gitignore/blob/master/SSDT-sqlproj.gitignore
# Build output
bin/
obj/

# DACPAC files
*.dacpac

# Publish profiles (optional, if environment-specific)
*.publish.xml

# SQL Server debug files
*.dbmdl
*.sqlcmdvars

# Visual Studio settings
.vs/

# User-specific files
*.user
*.suo
*.userosscache
*.sln.docstates

# Backup files
*.bak
*.log




================================================
FILE: Stella.gitignore
================================================
# Atari 2600 (Stella) support for multiple assemblers
# - DASM
# - CC65

# Assembled binaries and object directories
obj/
a.out
*.bin
*.a26

# Add in special Atari 7800-based binaries for good measure
*.a78



================================================
FILE: SugarCRM.gitignore
================================================
## SugarCRM
# Ignore custom .htaccess stuff.
/.htaccess
# Ignore the cache directory completely.
# This will break the current behaviour. Which was often leading to
# the misuse of the repository as backup replacement.
# For development the cache directory can be safely ignored and
# therefore it is ignored.
/cache/*
!/cache/index.html
# Ignore some files and directories from the custom directory.
/custom/history/
/custom/modulebuilder/
/custom/working/
/custom/modules/*/Ext/
/custom/application/Ext/
# Custom configuration should also be ignored.
/config.php
/config_override.php
# The silent upgrade scripts aren't needed.
/silentUpgrade*.php
# Logs files can safely be ignored.
*.log
# Ignore the new upload directories.
/upload/*
!/upload/index.html
/upload_backup/



================================================
FILE: Swift.gitignore
================================================
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output



================================================
FILE: Symfony.gitignore
================================================
# Cache and logs (Symfony2)
/app/cache/*
/app/logs/*
!app/cache/.gitkeep
!app/logs/.gitkeep

# Email spool folder
/app/spool/*

# Cache, session files and logs (Symfony3)
/var/cache/*
/var/logs/*
/var/sessions/*
!var/cache/.gitkeep
!var/logs/.gitkeep
!var/sessions/.gitkeep

# Logs (Symfony4)
/var/log/*
!var/log/.gitkeep

# Parameters
/app/config/parameters.yml
/app/config/parameters.ini

# Managed by Composer
/app/bootstrap.php.cache
/var/bootstrap.php.cache
/bin/*
!bin/console
!bin/symfony_requirements
/vendor/

# Assets and user uploads
/web/bundles/
/web/uploads/

# PHPUnit
/app/phpunit.xml
/phpunit.xml

# Build data
/build/

# Composer PHAR
/composer.phar

# Backup entities generated with doctrine:generate:entities command
**/Entity/*~

# Embedded web-server pid file
/.web-server-pid



================================================
FILE: SymphonyCMS.gitignore
================================================
manifest/cache/
manifest/logs/
manifest/tmp/
symphony/
workspace/uploads/
install-log.txt



================================================
FILE: Terraform.gitignore
================================================
# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Optional: ignore graph output files generated by `terraform graph`
# *.dot

# Optional: ignore plan files saved before destroying Terraform configuration
# Uncomment the line below if you want to ignore planout files.
# planout


================================================
FILE: TestComplete.gitignore
================================================
# Test Complete ignore files: https://support.smartbear.com/viewarticle/68002/

# Tester-specific Settings
*.tcCFGExtender
*.tcLS

# Type library declarations
*.tlb

# Log files
*.tcLogs

# Backup files
*.bak



================================================
FILE: TeX.gitignore
================================================
## Core latex/pdflatex auxiliary files:
*.aux
*.lof
*.log
*.lot
*.fls
*.out
*.toc
*.fmt
*.fot
*.cb
*.cb2
.*.lb

## Intermediate documents:
*.dvi
*.xdv
*-converted-to.*
# these rules might exclude image files for figures etc.
# *.ps
# *.eps
# *.pdf

## Generated if empty string is given at "Please type another file name for output:"
.pdf

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bbl-SAVE-ERROR
*.bcf
*.bcf-SAVE-ERROR
*.blg
*-blx.aux
*-blx.bib
*.run.xml

## Build tool auxiliary files:
*.fdb_latexmk
*.synctex
*.synctex(busy)
*.synctex.gz
*.synctex.gz(busy)
*.pdfsync
*.rubbercache
rubber.cache

## Build tool directories for auxiliary files
# latexrun
latex.out/

## Auxiliary and intermediate files from other packages:
# algorithms
*.alg
*.loa

# achemso
acs-*.bib

# amsthm
*.thm

# attachfile2
*.atfi

# beamer
*.nav
*.pre
*.snm
*.vrb

# changes
*.soc
*.loc

# comment
*.cut

# cprotect
*.cpt

# elsarticle (documentclass of Elsevier journals)
*.spl

# endnotes
*.ent

# fixme
*.lox

# feynmf/feynmp
*.mf
*.mp
*.t[1-9]
*.t[1-9][0-9]
*.tfm

#(r)(e)ledmac/(r)(e)ledpar
*.end
*.?end
*.[1-9]
*.[1-9][0-9]
*.[1-9][0-9][0-9]
*.[1-9]R
*.[1-9][0-9]R
*.[1-9][0-9][0-9]R
*.eledsec[1-9]
*.eledsec[1-9]R
*.eledsec[1-9][0-9]
*.eledsec[1-9][0-9]R
*.eledsec[1-9][0-9][0-9]
*.eledsec[1-9][0-9][0-9]R

# glossaries
*.acn
*.acr
*.glg
*.glg-abr
*.glo
*.glo-abr
*.gls
*.gls-abr
*.glsdefs
*.lzo
*.lzs
*.slg
*.slo
*.sls

# uncomment this for glossaries-extra (will ignore makeindex's style files!)
# *.ist

# gnuplot
*.gnuplot
*.table

# gnuplottex
*-gnuplottex-*

# gregoriotex
*.gaux
*.glog
*.gtex

# htlatex
*.4ct
*.4tc
*.idv
*.lg
*.trc
*.xref

# hypdoc
*.hd

# hyperref
*.brf

# knitr
*-concordance.tex
# TODO Uncomment the next line if you use knitr and want to ignore its generated tikz files
# *.tikz
*-tikzDictionary

# latexindent will create succesive backup files by default
#*.bak*

# listings
*.lol

# luatexja-ruby
*.ltjruby

# makeidx
*.idx
*.ilg
*.ind

# minitoc
*.maf
*.mlf
*.mlt
*.mtc[0-9]*
*.slf[0-9]*
*.slt[0-9]*
*.stc[0-9]*

# minted
_minted*
*.data.minted
*.pyg

# morewrites
*.mw

# newpax
*.newpax

# nomencl
*.nlg
*.nlo
*.nls

# pax
*.pax

# pdfpcnotes
*.pdfpc

# sagetex
*.sagetex.sage
*.sagetex.py
*.sagetex.scmd

# scrwfile
*.wrt

# spelling
*.spell.bad
*.spell.txt

# svg
svg-inkscape/

# sympy
*.sout
*.sympy
sympy-plots-for-*.tex/

# pdfcomment
*.upa
*.upb

# pythontex
*.pytxcode
pythontex-files-*/

# tcolorbox
*.listing

# thmtools
*.loe

# TikZ & PGF
*.dpth
*.md5
*.auxlock

# titletoc
*.ptc

# todonotes
*.tdo

# vhistory
*.hst
*.ver

# easy-todo
*.lod

# xcolor
*.xcp

# xmpincl
*.xmpi

# xindy
*.xdy

# xypic precompiled matrices and outlines
*.xyc
*.xyd

# endfloat
*.ttt
*.fff

# Latexian
TSWLatexianTemp*

## Editors:
# WinEdt
*.bak
*.sav

# latexindent.pl
*.bak[0-9]*

# Texpad
.texpadtmp

# LyX
*.lyx~

# Kile
*.backup

# gummi
.*.swp

# KBibTeX
*~[0-9]*

# TeXnicCenter
*.tps

# auto folder when using emacs and auctex
./auto/*
*.el

# expex forward references with \gathertags
*-tags.tex

# standalone packages
*.sta

# Makeindex log files
*.lpz

# xwatermark package
*.xwm

# REVTeX puts footnotes in the bibliography by default, unless the nofootinbib
# option is specified. Footnotes are the stored in a file with suffix Notes.bib.
# Uncomment the next line to have this generated file ignored.
#*Notes.bib



================================================
FILE: Textpattern.gitignore
================================================
.htaccess
css.php
rpc/
sites/site*/admin/
sites/site*/private/
sites/site*/public/admin/
sites/site*/public/setup/
sites/site*/public/theme/
textpattern/
HISTORY.txt
README.txt



================================================
FILE: TurboGears2.gitignore
================================================
*.py[co]

# Default development database
devdata.db

# Default data directory
data/*

# Packages
*.egg
*.egg-info
dist
build

# Installer logs
pip-log.txt

# Unit test / coverage reports
.coverage
.tox



================================================
FILE: TwinCAT3.gitignore
================================================
### TwinCAT3 ###
# website: https://www.beckhoff.com/twincat3/

# TwinCAT PLC
*.plcproj.bak
*.plcproj.orig
*.tpy
*.tclrs
*.library
*.compiled-library
*.compileinfo
*.asm
*.core
LineIDs.dbg
LineIDs.dbg.bak

# TwinCAT C++ and shared types
# ignoring the TMC file is only useful for plain PLC programming
# as soon as shared data types (via tmc), C++ or in general TcCom-Module are used, the TMC file has to be part of the repository
*.tmc
*.tmcRefac

# TwinCAT project files
*.tsproj.bak
*.tsproj.b?k
*.tsproj.orig
*.tspproj.bak
*.xti.bak
*.xti.bk?
*.xti.orig
*.xtv
*.xtv.bak
*.xtv.bk?
*.xt?.bk?
*.xt?.orig

# Multiuser specific
**/.TcGit/

# exclude not required folders
**/_Boot/
**/_CompileInfo/
**/_Libraries/
**/_ModuleInstall/
**/_Deployment/
**/_Repository/


# To include a specific library directory (i.e. third party/custom libs),
# use pattern `!/**/_Libraries/<directory name>/` i.e. `!/**/_Libraries/www.tcunit.org/`
#

# VS Shell project specific files and folders
**/.vs/
*.~u
*.project.~u
*.suo



================================================
FILE: Typo3.gitignore
================================================
## TYPO3 v6.2
# Ignore several upload and file directories.
/fileadmin/user_upload/
/fileadmin/_temp_/
/fileadmin/_processed_/
/uploads/
# Ignore cache
/typo3conf/temp_CACHED*
/typo3conf/temp_fieldInfo.php
/typo3conf/deprecation_*.log
/typo3conf/ENABLE_INSTALL_TOOL
/typo3conf/realurl_autoconf.php
/FIRST_INSTALL
# Ignore system folders, you should have them symlinked.
# If not comment out the following entries.
/typo3
/typo3_src
/typo3_src-*
/Packages
/.htaccess
/index.php
# Ignore temp directory.
/typo3temp/



================================================
FILE: Unity.gitignore
================================================
# This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore
#
.utmp/
/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/[Ll]ogs/
/[Uu]ser[Ss]ettings/
*.log

# By default unity supports Blender asset imports, *.blend1 blender files do not need to be commited to version control.
*.blend1
*.blend1.meta

# MemoryCaptures can get excessive in size.
# They also could contain extremely sensitive data
/[Mm]emoryCaptures/

# Recordings can get excessive in size
/[Rr]ecordings/

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
/[Aa]ssets/Plugins/Editor/JetBrains*
# Jetbrains Rider personal-layer settings
*.DotSettings.user

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Mono auto generated files
mono_crash.*

# Builds
*.apk
*.aab
*.unitypackage
*.unitypackage.meta
*.app

# Crashlytics generated file
crashlytics-build.properties

# TestRunner generated files
InitTestScene*.unity*

# Addressables default ignores, before user customizations
/ServerData
/[Aa]ssets/StreamingAssets/aa*
/[Aa]ssets/AddressableAssetsData/link.xml*
/[Aa]ssets/Addressables_Temp*
# By default, Addressables content builds will generate addressables_content_state.bin
# files in platform-specific subfolders, for example:
# /Assets/AddressableAssetsData/OSX/addressables_content_state.bin
/[Aa]ssets/AddressableAssetsData/*/*.bin*

# Visual Scripting auto-generated files
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Flow/UnitOptions.db
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Flow/UnitOptions.db.meta
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Core/Property Providers
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Core/Property Providers.meta

# Auto-generated scenes by play mode tests
/[Aa]ssets/[Ii]nit[Tt]est[Ss]cene*.unity*



================================================
FILE: UnrealEngine.gitignore
================================================
# Visual Studio 2015 user specific files
.vs/

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app
*.ipa

# These project files can be generated by the engine
*.xcodeproj
*.xcworkspace
*.sln
*.suo
*.opensdf
*.sdf
*.VC.db
*.VC.opendb
.vsconfig

# Precompiled Assets
SourceArt/**/*.png
SourceArt/**/*.tga

# Binary Files
Binaries/*
Plugins/**/Binaries/*

# Builds
Build/*

# Whitelist PakBlacklist-<BuildConfiguration>.txt files
!Build/*/
Build/*/**
!Build/*/PakBlacklist*.txt

# Don't ignore icon files in Build
!Build/**/*.ico

# Built data for maps
*_BuiltData.uasset

# Configuration files generated by the Editor
Saved/*

# Compiled source files for the engine to use
Intermediate/*
Plugins/**/Intermediate/*

# Cache files for the editor to use
DerivedDataCache/*



================================================
FILE: VBA.gitignore
================================================

# Office temporary files
~$*

# Access database lock files (laccdb, ldb)
*.[lL][aA][cC][cC][dD][bB]
*.[lL][dD][bB]

# The following sections constitute a list of Office file extensions that support VBA.
# If you want to exclude Office files from your repo, uncomment the corresponding file extensions.

# Excel (xls, xlsb, xlsm, xlt, xltm, xla, xlam)
#*.[xX][lL][sS]
#*.[xX][lL][sS][bB]
#*.[xX][lL][sS][mM]
#*.[xX][lL][tT]
#*.[xX][lL][tT][mM]
#*.[xX][lL][aA]
#*.[xX][lL][aA][mM]

# Word (doc, docm, dot, dotm)
#*.[dD][oO][cC]
#*.[dD][oO][cC][mM]
#*.[dD][oO][tT]
#*.[dD][oO][tT][mM]

# Access (accda, accdb, accde, mdb, mde)
#*.[aA][cC][cC][dD][aA]
#*.[aA][cC][cC][dD][bB]
#*.[aA][cC][cC][dD][eE]
#*.[mM][dD][bB]
#*.[mM][dD][eE]

# PowerPoint (ppt, pptm, pot, potm, pps, ppsm)
#*.[pP][pP][tT]
#*.[pP][pP][tT][mM]
#*.[pP][oO][tT]
#*.[pP][oO][tT][mM]
#*.[pP][pP][sS]
#*.[pP][pP][sS][mM]



================================================
FILE: VisualStudio.gitignore
================================================
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
*.env

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/

[Dd]ebug/x64/
[Dd]ebugPublic/x64/
[Rr]elease/x64/
[Rr]eleases/x64/
bin/x64/
obj/x64/

[Dd]ebug/x86/
[Dd]ebugPublic/x86/
[Rr]elease/x86/
[Rr]eleases/x86/
bin/x86/
obj/x86/

[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
[Aa][Rr][Mm]64[Ee][Cc]/
bld/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Build results on 'Bin' directories
**/[Bb]in/*
# Uncomment if you have tasks that rely on *.refresh files to move binaries
# (https://github.com/github/gitignore/pull/3736)
#!**/[Bb]in/*.refresh

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.trx

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Approval Tests result files
*.received.*

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.idb
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
# but not Directory.Build.rsp, as it configures directory-level build defaults
!Directory.Build.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
**/.paket/paket.exe
paket-files/

# FAKE - F# Make
**/.fake/

# CodeRush personal settings
**/.cr/personal

# Python Tools for Visual Studio (PTVS)
**/__pycache__/
*.pyc

# Cake - Uncomment if you are using it
#tools/**
#!tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog
MSBuild_Logs/

# AWS SAM Build and Temporary Artifacts folder
.aws-sam

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
**/.mfractor/

# Local History for Visual Studio
**/.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
**/.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp



================================================
FILE: VVVV.gitignore
================================================

# .v4p backup files
*~.xml

# Dynamic plugins .dll
bin/



================================================
FILE: Waf.gitignore
================================================
# For projects that use the Waf build system: https://waf.io/
# Dot-hidden on Unix-like systems
.waf-*-*/
.waf3-*-*/
# Hidden directory on Windows (no dot)
waf-*-*/
waf3-*-*/
# Lockfile
.lock-waf_*_build



================================================
FILE: WordPress.gitignore
================================================
# Wordpress - ignore core, configuration, examples, uploads and logs.
# https://github.com/github/gitignore/blob/main/WordPress.gitignore

# Core
#
# Note: if you want to stage/commit WP core files
# you can delete this whole section/until Configuration.
/wp-admin/
/wp-content/index.php
/wp-content/languages
/wp-content/plugins/index.php
/wp-content/themes/index.php
/wp-includes/
/index.php
/license.txt
/readme.html
/wp-*.php
/xmlrpc.php

# Configuration
wp-config.php

# Example themes
/wp-content/themes/twenty*/

# Example plugin
/wp-content/plugins/hello.php

# Uploads
/wp-content/uploads/

# Log files
*.log

# htaccess
/.htaccess

# All plugins
#
# Note: If you wish to whitelist plugins,
# uncomment the next line
#/wp-content/plugins

# All themes
#
# Note: If you wish to whitelist themes,
# uncomment the next line
#/wp-content/themes


================================================
FILE: Xojo.gitignore
================================================
# Xojo (formerly REALbasic and Real Studio)

Builds*
*.debug
*.debug.app
Debug*.exe
Debug*/Debug*.exe
Debug*/Debug*\ Libs
*.rbuistate
*.xojo_uistate
*.obsolete*



================================================
FILE: Yeoman.gitignore
================================================
node_modules/
bower_components/
*.log

build/
dist/



================================================
FILE: Yii.gitignore
================================================
assets/*
!assets/.gitignore
protected/runtime/*
!protected/runtime/.gitignore
protected/data/*.db
themes/classic/views/



================================================
FILE: ZendFramework.gitignore
================================================
# Composer files
composer.phar
vendor/

# Local configs
config/autoload/*.local.php

# Binary gettext files
*.mo

# Data
data/logs/
data/cache/
data/sessions/
data/tmp/
temp/

#Doctrine 2
data/DoctrineORMModule/Proxy/
data/DoctrineORMModule/cache/

# Legacy ZF1
demos/
extras/documentation



================================================
FILE: Zephir.gitignore
================================================
# Cache files, generates by Zephir
.temp/
.libs/

# Object files, generates by linker
*.lo
*.la
*.o
*.loT

# Files generated by configure and Zephir,
# not required for extension compilation.
ext/build/
ext/modules/
ext/Makefile*
ext/config*
ext/acinclude.m4
ext/aclocal.m4
ext/autom4te*
ext/install-sh
ext/ltmain.sh
ext/missing
ext/mkinstalldirs
ext/run-tests.php
ext/.deps
ext/libtool



================================================
FILE: Zig.gitignore
================================================
.zig-cache/
zig-out/
*.o



================================================
FILE: community/Alteryx.gitignore
================================================
# gitignore template for Alteryx Designer
# website: https://www.alteryx.com/
# website: https://help.alteryx.com/current/designer/alteryx-file-types

# Alteryx Data Files
*.yxdb
*.cydb
*.cyidx
*.rptx
*.vvf
*.aws

# Alteryx Special Files
*.yxwv
*.yxft
*.yxbe
*.bak
*.pcxml
*.log
*.bin
*.yxlang
CASS.ini

# Alteryx License Files
*.yxlc
*.slc
*.cylc
*.alc
*.gzlc

## gitignore reference sites
# https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring
# https://git-scm.com/docs/gitignore
# https://help.github.com/articles/ignoring-files/

## Useful knowledge from stackoverflow
# Even if you haven't tracked the files so far, git seems to be able to "know" about them even after you add them to .gitignore.
# WARNING: First commit your current changes, or you will lose them.
# Then run the following commands from the top folder of your git repo:
# git rm -r --cached .
# git add .
# git commit -m "fixed untracked files"

# author: Kacper Ksieski


================================================
FILE: community/AltiumDesigner.gitignore
================================================
# For PCBs designed using Altium Designer
# Website: https://www.altium.com/altium-designer/

# Directories containing cache data
History
__Previews

# Directories containing logs and generated outputs
Project\ Logs*
Project\ Outputs*

# Misc files generated by altium
debug.log
Status\ Report.txt
*.PcbDoc.htm
*.SchDocPreview
*.PcbDocPreview

# Lock files sometimes left behind
.~lock.*



================================================
FILE: community/AutoIt.gitignore
================================================
# Compiled Scripts
*.a3x

# Tidy Auto-Generated Backups
Backup/*

# Au3Stripper Auto-Generated Files
*_stripped.au3



================================================
FILE: community/AutomationStudio.gitignore
================================================
# gitignore template for B&R Automation Studio (AS) 4
# website: https://www.br-automation.com/en-us/products/software/automation-software/automation-studio/

# AS temporary directories
Binaries/
Diagnosis/
Temp/
TempObjects/

# AS transfer files
*artransfer.br
*arTrsfmode.nv

# 'ignored' directory
ignored/

# ARNC0ext
*arnc0ext.br

# AS File types
*.bak
*.isopen
*.orig
*.log
*.asar
*.csvlog*
*.set
!**/Physical/**/*.set

# RevInfo variables
*RevInfo.var



================================================
FILE: community/B4X.gitignore
================================================
**/Objects
**/AutoBackups
*.meta



================================================
FILE: community/Bazel.gitignore
================================================
# gitignore template for Bazel build system
# website: https://bazel.build/

# Ignore all bazel-* symlinks. There is no full list since this can change
# based on the name of the directory bazel is cloned into.
/bazel-*

# Directories for the Bazel IntelliJ plugin containing the generated
# IntelliJ project files and plugin configuration. Separate directories are
# for the IntelliJ, Android Studio and CLion versions of the plugin.
/.ijwb/
/.aswb/
/.clwb/



================================================
FILE: community/Beef.gitignore
================================================
build/
recovery/
BeefSpace_User.toml



================================================
FILE: community/Dotter.gitignore
================================================
# local files are for host-specific overrides
.dotter/local.toml

# ignore caches
.dotter/cache.toml
.dotter/cache



================================================
FILE: community/Exercism.gitignore
================================================
# gitignore template for Exercism project
# website: https://exercism.io/

# Ignore .exercism folder which contain sensitive data
.exercism



================================================
FILE: community/Gretl.gitignore
================================================
# gitignore template for Gretl
# website: http://gretl.sourceforge.net/

# Auto-generated log file is overwritten whenever you start a new session
session.inp

# Auto-generated temporary string code table
string_table.txt



================================================
FILE: community/Hexo.gitignore
================================================
# gitignore template for Hexo sites
# website: https://hexo.io/
# Recommended: Node.gitignore

# Ignore generated directory
public/

# Ignore temp files
tmp/
.tmp*

# additional files
db.json
.deploy*/



================================================
FILE: community/LensStudio.gitignore
================================================
# gitignore template for LensStudio
# website: https://lensstudio.snapchat.com/

# macOS/IDE #
.DS_Store
.idea

# js #
node_modules
yarn.lock

# Python #
__pycache__/
*.py[cod]
*$py.class
[Bb]ackup*



================================================
FILE: community/libogc.gitignore
================================================
# Ignore build directories
build/

# Ignore Wii-specific metadata files
meta.xml
icon.png


# Ignore editor or IDE-specific files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Ignore backup or temporary files
*~
*.bak
*.swp
*.tmp

# Ignore log files
*.log

# Ignore libraries and dependencies
lib/
deps/
obj/

# Ignore operating system-specific files
$RECYCLE.BIN/
.Trash-1000/
.Spotlight-V100/
.fseventsd/
.DS_Store

# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf
*.o
*.bin

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
*.dol
*.elf

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf



================================================
FILE: community/Logtalk.gitignore
================================================
# gitignore template for LogTalk, a programming language that builds upon Prolog
# website: https://logtalk.org/

# Logtalk temporary file directories
.lgt_tmp/
lgt_tmp/

# Logtalk default unit testing and doclet results and logs directories
logtalk_tester_logs/
logtalk_doclet_logs/

# backend Prolog compiler temporary files
.pl-history
*.out
*.xwam
*.qo
*.ql
*.itf
*.po



================================================
FILE: community/MetaTrader5.gitignore
================================================
# MetaTrader 5 and MQL5 gitignore template
# Project homepage: https://www.metatrader5.com/en

# Compiled MQL5 executables (binaries)
# These are generated from .mq5 source files and should not be committed.
*.ex5
*.ex4 # For MQL4 compatibility if you also manage MT4 projects in a similar structure

# Log files
# Terminal logs, strategy tester logs, and custom logs from Print() functions.
*.log
*.slog # Strategy Tester logs

# Strategy Tester specific files
# History data, optimization results, and temporary files used by the tester.
*.fxt  # FXT files (history data for testing)
*.hst  # History data files (can be large)
*.ini  # Initialization files (often generated by tester or EAs)
*.dat  # Data files (various purposes, often temporary)
*.csv  # CSV export files (e.g., from tester reports)
*.jrn  # Journal files (tester journal)

# Market Watch sets and profiles
# User-specific lists of symbols in Market Watch, and terminal profiles.
*.set  # Market Watch symbol sets
*.tpl  # Chart templates
*.chr  # Chart settings files (can be generated when saving templates or profiles)

# External libraries (DLLs)
# If you use custom DLLs, you might want to ignore them if they are built separately
# and not part of your MQL5 source code repository.
*.dll

# User-specific configuration and credentials
# Files containing sensitive information or local user settings.
.env   # Environment variables (e.g., for Python integration credentials)
*.cfg  # Configuration files (if not meant to be shared)
*.json # Be careful: if you have config JSONs you *do* want to commit, add specific exceptions.
       # Example: !config.json (to include config.json but ignore other *.json)

# Temporary files and backup files generated by MetaEditor
*.~*   # Temporary files (e.g., ~MyScript.mq5)
*.bak  # Backup files (e.g., MyScript.mq5.bak)
*.mqh.bak
*.mq5.bak

# MetaEditor project files
# Project files for MetaEditor workspaces.
.mqproj

# Python specific ignores (if you also keep Python scripts or Jupyter notebooks in this repository)
# These are relevant if your Git repo root is higher up (e.g., the terminal folder itself)
# or if you mix Python code within your MQL5 structure.
__pycache__/       # Python compiled bytecode cache
.ipynb_checkpoints/ # Jupyter Notebook checkpoints
*.pyc              # Python compiled files
*.pyd              # Python dynamic modules



================================================
FILE: community/Move.gitignore
================================================
# Generated by Move
# will have compiled files
build/

# Remove possibly saving credentials to the git repository
.aptos/



================================================
FILE: community/NasaSpecsIntact.gitignore
================================================
# gitignore template for Nasa SpecsIntact (SI)
# Website: https://specsintact.ksc.nasa.gov/
#
# Recommended:
# MicrosoftOffice.gitignore
#

# SpecsIntact (SI) Locking file; this would lock everyone out.
*.se$

# SI Reports; auto-generated. They do not belong in the repository
# as they will be re-created exactly when using a specific checkout point.
*.RPT
ADDRVER.*
BRKTVER.*
DUPEREF.*
REFVER.*
SECTVER.*
SUBMVER.*
TTLDIFFS.*

# SpecsIntact files that change a lot and don't actually affect SI
# PULL.TBL is an auto-generated file to help speed SI loading.
PULL.TBL
pulltbl.bck

# Tailoring information.
# Keep tailor.tag; it is a list of tailoring options in SI.

# JOB.OTL informs SI where a spec section came from.
# Keeping the old one isn't useful in git.
JOB.OTL.OLD

# OneNote TOC Files; SI Work Directories may be installed in a location co-located with OneNote
# notebooks, and if so, OneNote will litter the SI folder with these.
*.onetoc*

# Log files, typically tagfix or other auto generated logs that aren't useful
# outside of the user that made them and clutter up the index.
*.log



================================================
FILE: community/OpenSSL.gitignore
================================================
# OpenSSL-related files best not committed

## Certificate Authority
*.ca

## Certificate
*.crt

## Certificate Sign Request
*.csr

## Certificate
*.der

## Key database file
*.kdb

## OSCP request data
*.org

## PKCS #12
*.p12

## PEM-encoded certificate data
*.pem

## Random number seed
*.rnd

## SSLeay data
*.ssleay

## S/MIME message
*.smime



================================================
FILE: community/OpenTofu.gitignore
================================================
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tofu
override.tf.json
override.tofu.json
*_override.tf
*_override.tofu
*_override.tf.json
*_override.tofu.json

# Ignore transient lock info files created by tofu apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf
# !example_override.tofu

# Include tfplan files to ignore the plan output of command: tofu plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc



================================================
FILE: community/Puppet.gitignore
================================================
# gitignore template for Puppet modules
# website: https://forge.puppet.com/

# Built packages
pkg/*

# Should run on multiple platforms so don't check in
Gemfile.lock

# Tests
spec/fixtures/*
coverage/*

# Third-party
vendor/*
.bundle/*



================================================
FILE: community/Racket.gitignore
================================================
# gitignore template for the Racket language
# website: http://www.racket-lang.org/

# DrRacket autosave files
*.rkt~
*.rkt.bak
\#*.rkt#
\#*.rkt#*#

# Compiled racket bytecode
compiled/
*.zo

# Dependency tracking files
*.dep



================================================
FILE: community/Red.gitignore
================================================
# gitignore template for Red programming language
# website: http://www.red-lang.org/

# Red Compiled code
*.red

# Libraries
crush.dll
crush.dylib
crush.so

# Files generated during test
quick-test/quick-test.log
quick-test/runnable/
system/tests/source/units/auto-tests/
tests/source/units/auto-tests/



================================================
FILE: community/ROS2.gitignore
================================================
install/
log/
build/

# Ignore generated docs
*.dox
*.wikidoc

# eclipse stuff
.project
.cproject

# qcreator stuff
CMakeLists.txt.user

srv/_*.py
*.pcd
*.pyc
qtcreator-*
*.user

*~

# Emacs
.#*

# Colcon custom files
COLCON_IGNORE
AMENT_IGNORE



================================================
FILE: community/SPFx.gitignore
================================================
#SharePoint Framework (SPFx)
# Logs
logs
*.log
npm-debug.log*

# Dependency directories
node_modules

# Build generated files
dist
lib
solution
temp
*.sppkg

# Coverage directory used by tools like istanbul
coverage

# OSX
.DS_Store

# Visual Studio files
.ntvs_analysis.dat
.vs
bin
obj

# Resx Generated Code
*.resx.ts

# Styles Generated Code
*.scss.ts



================================================
FILE: community/Splunk.gitignore
================================================
# gitignore template for Splunk apps
# documentation: http://docs.splunk.com/Documentation/Splunk/6.2.3/admin/Defaultmetaconf

# Splunk local meta file
local.meta

# Splunk local folder
local



================================================
FILE: community/Strapi.gitignore
================================================
############################
# OS X
############################

.DS_Store
.AppleDouble
.LSOverride
Icon
.Spotlight-V100
.Trashes
._*


############################
# Linux
############################

*~


############################
# Windows
############################

Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp


############################
# Packages
############################

*.7z
*.csv
*.dat
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
*.com
*.class
*.dll
*.exe
*.o
*.seed
*.so
*.swo
*.swp
*.swn
*.swm
*.out
*.pid


############################
# Logs and databases
############################

.tmp
*.log
*.sql
*.sqlite


############################
# Misc.
############################

*#
.idea
nbproject
.vscode/


############################
# Node.js
############################

lib-cov
lcov.info
pids
logs
results
build
node_modules
.node_history
package-lock.json
**/package-lock.json
!docs/package-lock.json
*.heapsnapshot


############################
# Tests
############################

testApp
coverage
cypress/screenshots
cypress/videos


############################
# Documentation
############################

dist

############################
# Builds
############################

packages/strapi-generate-new/files/public/

############################
# Example app
############################

.dev
# *.cache

############################
# Visual Studio Code
############################

front-workspace.code-workspace



================================================
FILE: community/Terragrunt.gitignore
================================================
# Ignore the default terragrunt cache directory
# https://terragrunt.gruntwork.io/docs/features/caching/
.terragrunt-cache



================================================
FILE: community/Toit.gitignore
================================================
.packages
*_pb.toit



================================================
FILE: community/UiPath.gitignore
================================================
# gitignore template for RPA development using UiPath Studio
# website: https://www.uipath.com/product/studio
#
# Recommended: n/a

# Ignore folders that could cause issues if accidentally tracked
**/.local/**
**/.settings/**
**/.objects/**
**/.tmh/**
**/*.log



================================================
FILE: community/UTAU.gitignore
================================================
# Adobe Audition
*.pkf

# UTAU Engines
*.ctspec
*.d4c
*.dio
*.frc
*.frt
*.frq
*.harvest
*.lessaudio
*.llsm
*.mrq
*.pitchtier
*.platinum
*.pmk
*.sc.npz
*.star
*.uspec
*.vs4ufrq

# UTAU related tools
$read
*.setParam-Scache
*.lbp
*.lbp.caches/*

# OpenUtau
errors.txt

# Deepvocal
*.DVModel
*-log.txt
SKC
SKI
SKC_1
SKC_2
*.sksd

# VocalSharp
*.scep
*.vssf
*.vsdx
*.vsdxindex

# Binary Archive
*.7z
*.zip
*.rar
*.exe




================================================
FILE: community/V.gitignore
================================================
*.exe
*.o
*.so
*.tmp.c
*.exp
*.ilk
*.pdb
*.dll
*.lib
*.bak
*.out



================================================
FILE: community/Xilinx.gitignore
================================================
# gitignore template for Xilinx Vivado Design Suite
# website: https://www.xilinx.com/support/download.html

# [home]
*.jou
*.log
*.debug
*.str
*.zip
*.tmp
*.rst
*.os
*.js
*.pb
*.dcp
*.hwdef
*.vds
*.veo
*.wdf
*.vdi
*.dmp
*.rpx
*.rpt
*_stub.v
*_stub.vhdl
*_funcsim.v
*_funcsim.vhdl
.project

# [dir]
*.cache
.metadata
*.data
*.ipdefs
.Xil
*.sdk
*.hw
*.ip_user_files

### IP synth
*_synth_*

.jobs

### project synth
*/*.runs/synth*/*.xml
*/*.runs/synth*/*.txt
*/*.runs/synth*/*.sh
*/*.runs/synth*/*.tcl
*/*.runs/synth*/*.bat
*/*.runs/synth*/*.xdc
!*/*.runs/synth*/*utilization*.rpt

*.runs/synth*/*.xml
*.runs/synth*/*.txt
*.runs/synth*/*.sh
*.runs/synth*/*.tcl
*.runs/synth*/*.bat
*.runs/synth*/*.xdc
!*.runs/synth*/*utilization*.rpt

### project impl
*/*.runs/impl*/*.xml
*/*.runs/impl*/*.html
*/*.runs/impl*/*.txt
*/*.runs/impl*/*.sh
*/*.runs/impl*/*.tcl
*/*.runs/impl*/*.bat
!*/*.runs/impl*/*utilization*.rpt

*.runs/impl*/*.xml
*.runs/impl*/*.html
*.runs/impl*/*.txt
*.runs/impl*/*.sh
*.runs/impl*/*.tcl
*.runs/impl*/*.bat
!*.runs/impl*/*utilization*.rpt

### block design
*/*/bd/*/hdl
*/*/*/bd/*/hdl

*/*/bd/*/*.xdc
*/*/*/bd/*/*.xdc

*/*/bd/*/ip/*/*.xdc
*/*/*/bd/*/ip/*/*.xdc

*/*/bd/*/ip/*/*/
*/*/*/bd/*/ip/*/*/

*/*/bd/*/ip/*/*.vhd
*/*/*/bd/*/ip/*/*.vhd

*/*/bd/*/ip/*/*.xml
*/*/*/bd/*/ip/*/*.xml

*.c
*.h
*.vho
*.html
*/*/bd/*/ip/*/*.tcl
*/*/*/bd/*/ip/*/*.tcl
hw_handoff
ipshared



================================================
FILE: community/AWS/CDK.gitignore
================================================
# CDK asset staging directory.
# For more information about AWS-CDK, see  https://docs.aws.amazon.com/cdk/
.cdk.staging/
cdk.out/



================================================
FILE: community/AWS/SAM.gitignore
================================================
# gitignore template for AWS Serverless Application Model project
# website: https://docs.aws.amazon.com/serverless-application-model

# Ignore build folder
.aws-sam/



================================================
FILE: community/BoxLang/ColdBox.gitignore
================================================
# Servelet Ignores
WEB-INF

# Engines + Database + CBFS + Secrets
.tmp/**
.env
.engine/**
.cbfs/**

# Logs + Test Results
logs/**
tests/results/**

## Ignored Dependencies
/boxlang_modules/*
effective-pom.xml
/coldbox/**
/testbox/**
/modules/**
/lib/java/**

# NPM JS Assets (If applicable)
**/node_modules/*
npm-debug.log
yarn-error.log



================================================
FILE: community/CFML/ColdBox.gitignore
================================================
# Servelet Ignores
WEB-INF

# Engines + Database + CBFS + Secrets
.tmp/**
.env
.engine/**
.cbfs/**

# Logs + Test Results
logs/**
tests/results/**

## Ignored Dependencies
effective-pom.xml
/coldbox/**
/testbox/**
/modules/**
/lib/java/**

# NPM JS Assets (If applicable)
**/node_modules/*
npm-debug.log
yarn-error.log



================================================
FILE: community/DotNet/core.gitignore
================================================
*.swp
*.*~
project.lock.json
.DS_Store
*.pyc
nupkg/

# Visual Studio Code
.vscode

# Rider
.idea

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio 2015
.vs/




================================================
FILE: community/DotNet/InforCMS.gitignore
================================================
# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in



================================================
FILE: community/DotNet/Kentico.gitignore
================================================
# gitignore template for using Kentico CMS
# website: http://www.kentico.com/
#
# Recommended template: VisualStudio.gitignore

# Include some Kentico folders excluded by Visual Studio rules
!CMS/CMSAdminControls/*/
!CMS/CMSModules/System/*/
!CMS/App_Data/CIRepository/**

# Kentico temporary/environment files
CMS/App_Data/AzureCache
CMS/App_Data/AzureTemp
CMS/App_Data/CMSModules/DeviceProfile/logFiftyOne.txt
CMS/App_Data/CMSModules/DeviceProfiles/logFiftyOne.txt
CMS/App_Data/CMSModules/WebFarm/webfarm.sync
CMS/App_Data/CMSTemp
CMS/App_Data/Persistent
CMS/CMSSiteUtils/Export
CMS/CMSSiteUtils/Import

# Ignore all smart search indexes, but not the other system folder contents
CMS/App_Data/CMSModules/SmartSearch/**
!CMS/App_Data/CMSModules/SmartSearch/*/
!CMS/App_Data/CMSModules/SmartSearch/_StopWords/**
!CMS/App_Data/CMSModules/SmartSearch/_Synonyms/**

## Kentico Starter Sites
# Starter site resource Files
CMS/App_Data/DancingGoat

# Starter site web templates
CMS/App_Data/Templates/CommunitySite
CMS/App_Data/Templates/CorporateSite
CMS/App_Data/Templates/DancingGoat
CMS/App_Data/Templates/EcommerceSite
CMS/App_Data/Templates/IntranetPortal
CMS/App_Data/Templates/PersonalSite

# Starter site app themes
CMS/App_Themes/CommunitySite
CMS/App_Themes/CorporateSite
CMS/App_Themes/EcommerceSite
CMS/App_Themes/IntranetPortal*
CMS/App_Themes/PersonalSite

# Starter site ASPX templates
CMS/CMSTemplates/CorporateSite

# Starter site media libraries
CMS/CommunitySite
CMS/CorporateSite
CMS/DancingGoat
CMS/EcommerceSite
CMS/IntranetPortal
CMS/PersonalSite

## Project specific ignores
# Sensitive settings
AppSettings.config
ConnectionStrings.config

# Project media libraries (recommend shared file storage)
# e.g. CMS/{SiteCodeName}



================================================
FILE: community/DotNet/Umbraco.gitignore
================================================
## Ignore Umbraco files/folders generated for each instance
##
## Get latest from https://github.com/github/gitignore/blob/main/Umbraco.gitignore

# Note: VisualStudio gitignore rules may also be relevant

# Umbraco
# Ignore unimportant folders generated by Umbraco
**/App_Data/Logs/
**/App_Data/[Pp]review/
**/App_Data/TEMP/
**/App_Data/NuGetBackup/

# Ignore Umbraco content cache file
**/App_Data/umbraco.config

## this [Uu]mbraco/ folder should be created by cmd like `Install-Package UmbracoCms -Version 8.5.3`
## you can find your Umbraco version in your Web.config. (i.e. <add key="Umbraco.Core.ConfigurationStatus" value="8.5.3" />)
## Uncomment this line if you think it fits the way you work on your project.
## **/[Uu]mbraco/

## The [Mm]edia/ folder contains content. Content may vary by environment and should therefore not be added to source control.
## Uncomment this line if you think it fits the way you work on your project.
## **/[Mm]edia/

# Don't ignore Umbraco packages (VisualStudio.gitignore mistakes this for a NuGet packages folder)
# Make sure to include details from VisualStudio.gitignore BEFORE this
!**/App_Data/[Pp]ackages/*
!**/[Uu]mbraco/[Dd]eveloper/[Pp]ackages/*
!**/[Uu]mbraco/[Vv]iews/[Pp]ackages/*

# ImageProcessor DiskCache
**/App_Data/cache/

# Ignore the Models Builder models out of date flag
**/ood.flag

# NEW for version 9 .Net 5 (Core)
#ignore umbraco backoffice assest from wwwroot
**/wwwroot/umbraco/

# SQLite files
*.sqlite.db*

#ignore umbraco data/views/settings
**/umbraco/*

#include default location for modelsbuilder output
!**/umbraco/models

#include default location for packages
!**/umbraco/Data/packages



================================================
FILE: community/Elixir/Phoenix.gitignore
================================================
# gitignore template for Phoenix projects
# website: http://www.phoenixframework.org/
#
# Recommended template: Elixir.gitignore

# Temporary files
/tmp

# Static artifacts
/node_modules
/assets/node_modules

# Since we are building assets from web/static,
# we ignore priv/static. You may want to comment
# this depending on your deployment strategy.
/priv/static/

# Installer-related files
/installer/_build
/installer/tmp
/installer/doc
/installer/deps



================================================
FILE: community/embedded/AtmelStudio.gitignore
================================================
## Ignore Atmel Studio temporary files and build results
# https://www.microchip.com/mplab/avr-support/atmel-studio-7

# Atmel Studio is powered by an older version of Visual Studio,
# so most of the project and solution files are the same as VS files,
# only prefixed by an `at`.

#Build Directories
[Dd]ebug/
[Rr]elease/

#Build Results
*.o
*.d
*.eep
*.elf
*.hex
*.map
*.srec

#User Specific Files
*.atsuo



================================================
FILE: community/embedded/esp-idf.gitignore
================================================
# gitignore template for esp-idf, the official development framework for ESP32
# https://github.com/espressif/esp-idf

build/
sdkconfig
sdkconfig.old



================================================
FILE: community/embedded/IAR_EWARM.gitignore
================================================
# gitignore template for the IAR EWARM
# website: https://www.iar.com/knowledge/support/technical-notes/ide/which-files-should-be-version-controlled/

# Some tools will put the EWARM files
# under a subdirectory with the same name
# as the configuration.
# Example
# EWARM/Config1/Obj /List /Exe
# EWARM/Config2/Obj /List /Exe
EWARM/**/Obj
EWARM/**/List
EWARM/**/Exe

# Autogenerated project files
*.dep
*.ewt

# Autogenerated folder for debugger
EWARM/settings



================================================
FILE: community/embedded/uVision.gitignore
================================================
# git ignore file for Keil Ã‚ÂµVision Project

# Ã‚ÂµVision 5 and Ã‚ÂµVision 4 Project screen layout file
*.uvguix.*
*.uvgui.*

# Listing Files
*.i
*.lst
*.m51
*.m66
*.map

# Object Files
*.axf
*.b[0-2][0-9]
*.b3[0-1]
*.bak
*.build_log.htm
*.crf
*.d
*.dep
*.elf
*.htm
*.iex
*.lnp
*.o
*.obj
*.sbr

# Firmware Files
*.bin
*.h86
*.hex

# Build Files
.bat

# Debugger Files
.ini

# JLink Files
JLinkLog.txt

# Other Files



================================================
FILE: community/GNOME/GNOMEShellExtension.gitignore
================================================
# Ignored files for GNOME extension git repository

*.zip



================================================
FILE: community/Golang/Go.AllowList.gitignore
================================================
# Allowlisting gitignore template for GO projects prevents us
# from adding various unwanted local files, such as generated
# files, developer configurations or IDE-specific files etc.
#
# Recommended: Go.AllowList.gitignore

# Ignore everything
*

# But not these files...
!/.gitignore

!*.go
!go.sum
!go.mod

!README.md
!LICENSE

# !Makefile

# ...even if they are in subdirectories
!*/



================================================
FILE: community/Golang/Hugo.gitignore
================================================
# Generated files by hugo
/public/
/resources/_gen/
/assets/jsconfig.json
hugo_stats.json

# Executable may be added to repository
hugo.exe
hugo.darwin
hugo.linux

# Temporary lock file while building
/.hugo_build.lock



================================================
FILE: community/Java/JBoss4.gitignore
================================================
# gitignore for JBoss v4 projects

/server/all/data
/server/all/log
/server/all/tmp
/server/all/work
/server/default/data
/server/default/log
/server/default/tmp
/server/default/work
/server/minimal/data
/server/minimal/log
/server/minimal/tmp
/server/minimal/work

# Note:
# there may be other directories that contain *.xml.failed or *.war.failed files
/server/default/deploy/*.xml.failed
/server/default/deploy/*.war.failed



================================================
FILE: community/Java/JBoss6.gitignore
================================================
# gitignore for JBoss v6 projects
#
# Note: to ensure empty directories remain part of the repository, like
# `/server/minimal/lib`, you should add an empty `.gitignore` or `.gitkeep` file
# to the directory - otherwise you may have issues when starting the service.

/server/all/data
/server/all/log
/server/all/tmp
/server/all/work
/server/default/data
/server/default/log
/server/default/tmp
/server/default/work
/server/minimal/data
/server/minimal/log
/server/minimal/tmp
/server/minimal/work
/server/jbossweb-standalone/data
/server/jbossweb-standalone/log
/server/jbossweb-standalone/tmp
/server/jbossweb-standalone/work
/server/standard/data
/server/standard/log
/server/standard/tmp
/server/standard/work
/server/default/deploy/*.jar.failed
/server/default/deploy/*.jar.dodeploy
/server/default/deploy/*.xml.failed
/server/default/deploy/*.xml.dodeploy
/server/default/deploy/*.war.failed
/server/default/deploy/*.war.dodeploy




================================================
FILE: community/JavaScript/Cordova.gitignore
================================================
# gitignore template for the Cordova framework
# website: https://cordova.apache.org/
#
# Recommended template: Node.gitignore

# App platform binaries and built files
/platforms

# Optional to ignore plugin Git clones
#/plugins



================================================
FILE: community/JavaScript/Expo.gitignore
================================================
#Ã¢â‚¬Æ’.gitignore template for Expo
#Ã¢â‚¬Æ’website: https://expo.dev/
#Ã¢â‚¬Æ’docs: https://docs.expo.dev/workflow/expo-cli/
#
#Ã¢â‚¬Æ’Rationale:
#Ã¢â‚¬Æ’node_modules/ is always ignored
#Ã¢â‚¬Æ’.expo/, .expo-shared/ are ExpoÃ¢â‚¬â„¢s local state and project-settings cache (see docs)
#Ã¢â‚¬Æ’ Metro caches/logs are *.expo, *.tunnel, *.cache, *.tmp, *.log

# Node modules
node_modules/

# Expo local state and caches
.expo/             # runtime state (Metro bundler, dev-client data, tunnels)
.expo-shared/      # shared project settings (app.json edits, etc.)

# Metro bundler caches/logs
*.expo             # generic Expo temp files
*.tunnel           # Expo DevTools tunnels
*.cache            # Metro cache folder
*.tmp              # temp files created during bundling
*.log              # build or Metro logs

# Environment variables
.env
.env.local
.env.*.local

# Package manager logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*



================================================
FILE: community/JavaScript/Meteor.gitignore
================================================
# gitignore template for the Meteor framework
# website: https://www.meteor.com/
#
# Recommended template: Node.gitignore

# protect api keys in setting json
settings-production.json
settings.json

# protect your mup.json settings
mup.json
mup.js



================================================
FILE: community/JavaScript/NWjs.gitignore
================================================
# gitignore template for NW.js projects
# website: https://nwjs.io/

# Seen in standard and sdk versions
credits.html
locales/
libEGL.dll
libGLEv2.dll
node.dll
nw.dll
nw.exe
natives_blob.bin
nw_100_percent.pak
nw_200_percent.pak
nw_elf.dll
snapshot_blob.bin
resources.pak

# Seen only in standard
d3dcompiler_47.dll
ffmpeg.dll
icudtl.dat

# Seen only in sdk
pnacl/
chromedriver.exe
nacl_irt_x86_64.nexe
nwjc.exe
payload.exe



================================================
FILE: community/JavaScript/Vue.gitignore
================================================
# gitignore template for Vue.js projects
#
# Recommended template: Node.gitignore

# TODO: where does this rule come from?
docs/_book

# TODO: where does this rule come from?
test/



================================================
FILE: community/Linux/Snap.gitignore
================================================
# gitginore template for creating Snap packages
# website: https://snapcraft.io/

parts/
prime/
stage/
*.snap

# Snapcraft global state tracking data(automatically generated)
# https://forum.snapcraft.io/t/location-to-save-global-state/768
/snap/.snapcraft/

# Source archive packed by `snapcraft cleanbuild` before pushing to the LXD container
/*_source.tar.bz2



================================================
FILE: community/Obsidian/NotesAndCoreConfiguration.gitignore
================================================
# Excludes Obsidian workspace cache and plugins. All notes and core obsidian
# configuration files are tracked by Git.

# The current application UI state (DOM layout, recently-opened files, etc.) is
# stored in these files (separate for desktop and mobile) so you can resume
# your session seamlessly after a restart. If you want to track UI state, use
# the Workspaces core plugin instead of relying on these files.
.obsidian/workspace.json
.obsidian/workspace-mobile.json

# Obsidian plugins are stored under .obsidian/plugins/$plugin_name. They
# contain metadata (manifest.json), application code (main.js), stylesheets
# (styles.css), and user-configuration data (data.json).
# We want to exclude all plugin-related files, so we can exclude everything
# under this directory.
.obsidian/plugins/**/*



================================================
FILE: community/Obsidian/NotesAndExtendedConfiguration.gitignore
================================================
# Excludes Obsidian workspace cache and plugin code, but retains plugin
# configuration. All notes and user-controlled configuration files are tracked
# by Git.
#
# 				!!! WARNING !!!
#
# Community plugins may store sensitive secrets in their data.json files. By
# including these files, those secrets may be tracked in your Git repository.
#
# To ignore configurations for specific plugins, add a line like this after the
# contents of this file (order is important):
#     .obsidian/plugins/{{plugin_name}}/data.json
#
# Alternatively, ensure that you are treating your entire Git repository as
# sensitive data, since it may contain secrets, or may have contained them in
# past commits.  Understand your threat profile, and make the decision
# appropriate for yourself. If in doubt, err on the side of not including
# plugin configuration. Use one of the alternative gitignore files instead:
# * NotesOnly.gitignore
# * NotesAndCoreConfiguration.gitignore

# The current application UI state (DOM layout, recently-opened files, etc.) is
# stored in these files (separate for desktop and mobile) so you can resume
# your session seamlessly after a restart. If you want to track UI state, use
# the Workspaces core plugin instead of relying on these files.
.obsidian/workspace.json
.obsidian/workspace-mobile.json

# Obsidian plugins are stored under .obsidian/plugins/$plugin_name. They
# contain metadata (manifest.json), application code (main.js), stylesheets
# (styles.css), and user-configuration data (data.json).
# We only want to track data.json, so we:
# 1. exclude everything that the plugin folders contain,
# 2. unignore data.json in the plugin folders
.obsidian/plugins/*/**
!.obsidian/plugins/*/data.json



================================================
FILE: community/Obsidian/NotesOnly.gitignore
================================================
# Excludes all Obsidian-related configuration. All notes are tracked by Git.

# All Obsidian configuration and runtime state is stored here
.obsidian/**/*



================================================
FILE: community/PHP/Bitrix.gitignore
================================================
# gitignore template for 1C-Bitrix, a PHP-based CMS
# website: https://www.1c-bitrix.ru

#Exclude all of core files
/bitrix/*

#But not the templates and non bitrix components
!/bitrix/templates
!/bitrix/components
/bitrix/components/bitrix

#Exclude bitrix gadgets
!/bitrix/gadgets
/bitrix/gadgets/bitrix

#User can use that directory to store some stuff, but it's not really recommended, just use /local instead of this
!/bitrix/php_interface/

#Exclude database configs
/bitrix/php_interface/dbconn.php

#Exclude default file storage directory
/upload/



================================================
FILE: community/PHP/CodeSniffer.gitignore
================================================
# gitignore for the PHP Codesniffer framework
# website: https://github.com/squizlabs/PHP_CodeSniffer
#
# Recommended template: PHP.gitignore

/wpcs/*



================================================
FILE: community/PHP/Drupal7.gitignore
================================================
# gitignore template for Drupal 7 projects
#
# It is recommended that you use `Drupal.gitignore` as this is the latest version

# Ignore configuration files that may contain sensitive information.
sites/*/*settings*.php
sites/example.sites.php

# Ignore paths that contain generated content.
files/
sites/*/files
sites/*/private
sites/*/translations

# Ignore default text files
robots.txt
/CHANGELOG.txt
/COPYRIGHT.txt
/INSTALL*.txt
/LICENSE.txt
/MAINTAINERS.txt
/UPGRADE.txt
/README.txt
sites/README.txt
sites/all/libraries/README.txt
sites/all/modules/README.txt
sites/all/themes/README.txt

# Ignore everything but the "sites" folder ( for non core developer )
.htaccess
web.config
authorize.php
cron.php
index.php
install.php
update.php
xmlrpc.php
/includes
/misc
/modules
/profiles
/scripts
/themes



================================================
FILE: community/PHP/Jigsaw.gitignore
================================================
# gitignore template for Jigsaw Static Site Generator
#
# website - https://jigsaw.tighten.co

# Ignore build folder
build_*



================================================
FILE: community/PHP/Magento1.gitignore
================================================
# gitignore template for Magento v1 projects
#
# It is recommended that you use `Magento.gitignore` as this is the latest version

/PATCH_*.sh

/app/etc/local.xml

/media/*
!/media/.htaccess

!/media/customer
/media/customer/*
!/media/customer/.htaccess

!/media/dhl
/media/dhl/*
!/media/dhl/logo.jpg

!/media/downloadable
/media/downloadable/*
!/media/downloadable/.htaccess

!/media/xmlconnect
/media/xmlconnect/*

!/media/xmlconnect/custom
/media/xmlconnect/custom/*
!/media/xmlconnect/custom/ok.gif

!/media/xmlconnect/original
/media/xmlconnect/original/*
!/media/xmlconnect/original/ok.gif

!/media/xmlconnect/system
/media/xmlconnect/system/*
!/media/xmlconnect/system/ok.gif

/var/*
!/var/.htaccess

!/var/package
/var/package/*
!/var/package/*.xml




================================================
FILE: community/PHP/Magento2.gitignore
================================================
/sitemap
/sitemap.xml
/pub/sitemap
/pub/sitemap.xml
/app/config_sandbox
/app/etc/config.php
/app/etc/env.php
/app/code/Magento/TestModule*
/lib/internal/flex/uploader/.actionScriptProperties
/lib/internal/flex/uploader/.flexProperties
/lib/internal/flex/uploader/.project
/lib/internal/flex/uploader/.settings
/lib/internal/flex/varien/.actionScriptProperties
/lib/internal/flex/varien/.flexLibProperties
/lib/internal/flex/varien/.project
/lib/internal/flex/varien/.settings
/.grunt
/.php_cs.cache
/grunt-config.json
/dev/tools/grunt/configs/local-themes.js

/pub/media/*.*
!/pub/media/.htaccess
/pub/media/attribute/*
!/pub/media/attribute/.htaccess
/pub/media/analytics/*
/pub/media/catalog/*
!/pub/media/catalog/.htaccess
/pub/media/customer/*
!/pub/media/customer/.htaccess
/pub/media/downloadable/*
!/pub/media/downloadable/.htaccess
/pub/media/favicon/*
/pub/media/import/*
!/pub/media/import/.htaccess
/pub/media/logo/*
/pub/media/theme/*
/pub/media/theme_customization/*
!/pub/media/theme_customization/.htaccess
/pub/media/wysiwyg/*
!/pub/media/wysiwyg/.htaccess
/pub/media/tmp/*
!/pub/media/tmp/.htaccess
/pub/media/captcha/*
!/pub/media/captcha/.htaccess
/pub/static/*
!/pub/static/.htaccess

/var/*
!/var/.htaccess
/vendor/*
!/vendor/.htaccess
/generated/*
!/generated/.htaccess



================================================
FILE: community/PHP/Pimcore.gitignore
================================================
# gitignore template for Pimcore CMS

# pimcore source files
/pimcore

# asset files
/website/var/assets/*

# backups
/website/var/backup/*

# file cache
/website/var/cache/*

# generated PHP classes, keep definition files (.psf)
/website/var/classes/Object*
!/website/var/classes/objectbricks

# various configuration files
/website/var/config/system.xml
/website/var/config/cache.xml
/website/var/config/robots.txt
/website/var/config/Geo*
/website/var/config/object/*
/website/var/config/portal/*
/website/var/config/sqlreport/*

# sent e-mail log files
/website/var/email/*

# log files
/website/var/log/*.log

# serialized recyclebin files
/website/var/recyclebin/*

# search plugin
/website/var/search/*

# various temp files
/website/var/system/*
/website/var/tmp/*

# serialized version files
/website/var/versions/asset/*
/website/var/versions/document/*
/website/var/versions/object/*

# user profile images
/website/var/user-image/*

# keep .dummy files
!.dummy



================================================
FILE: community/PHP/ThinkPHP.gitignore
================================================
# gitignore template for ThinkPHP v3.2.3
# website: http://www.thinkphp.cn/

# Logs and Cache files
/Application/Runtime/

# Common configure file
/Application/Common/Conf/config.php


================================================
FILE: community/Python/JupyterNotebooks.gitignore
================================================
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# IPython
profile_default/
ipython_config.py

# Jupyter lab virtual documents
# https://jupyterlab-lsp.readthedocs.io/en/2.x/Configuring.html#virtual_documents_dir
.virtual_documents/

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/



================================================
FILE: community/Python/Nikola.gitignore
================================================
# gitignore template for Nikola static site generator
# website: https://getnikola.com/

.doit.db
*.py[cod]
cache/
output/



================================================
FILE: Global/README.md
================================================
## Globally Useful gitignores

This directory contains globally useful gitignores,
e.g. OS-specific and editor specific.

For more on global gitignores:
<https://help.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer>

And a good blog post about 'em:
<http://augustl.com/blog/2009/global_gitignores>



================================================
FILE: Global/AL.gitignore
================================================
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/
*.app
.snapshots/*



================================================
FILE: Global/Anjuta.gitignore
================================================
# Local configuration folder and symbol database
/.anjuta/
/.anjuta_sym_db.db



================================================
FILE: Global/Ansible.gitignore
================================================
*.retry
.ansible/



================================================
FILE: Global/Archives.gitignore
================================================
# It's better to unpack these files and commit the raw source because
# git has its own built in compression methods.
*.7z
*.jar
*.rar
*.zip
*.gz
*.gzip
*.tgz
*.bzip
*.bzip2
*.bz2
*.xz
*.lzma
*.cab
*.xar
*.zst
*.tzst

# Packing-only formats
*.iso
*.tar

# Package management formats
*.dmg
*.xpi
*.gem
*.egg
*.deb
*.rpm
*.msi
*.msm
*.msp
*.txz



================================================
FILE: Global/Backup.gitignore
================================================
*.bak
*.gho
*.ori
*.orig
*.tmp



================================================
FILE: Global/Bazaar.gitignore
================================================
.bzr/
.bzrignore



================================================
FILE: Global/BricxCC.gitignore
================================================
# Bricx Command Center IDE
# http://bricxcc.sourceforge.net
*.bak
*.sym



================================================
FILE: Global/Calabash.gitignore
================================================
# Calabash / Cucumber
rerun/
reports/
screenshots/
screenshot*.png
test-servers/

# bundler
.bundle
vendor



================================================
FILE: Global/Cloud9.gitignore
================================================
# Cloud9 IDE - http://c9.io
.c9revisions
.c9



================================================
FILE: Global/CodeKit.gitignore
================================================
# General CodeKit files to ignore
config.codekit
config.codekit3
/min



================================================
FILE: Global/Cursor.gitignore
================================================
.cursorignore
.cursorindexingignore



================================================
FILE: Global/CVS.gitignore
================================================
/CVS/*
**/CVS/*
.cvsignore
*/.cvsignore



================================================
FILE: Global/DartEditor.gitignore
================================================
.project
.buildlog



================================================
FILE: Global/Diff.gitignore
================================================
*.patch
*.diff



================================================
FILE: Global/Dreamweaver.gitignore
================================================
# DW Dreamweaver added files
_notes
_compareTemp
configs/
dwsync.xml
dw_php_codehinting.config
*.mno



================================================
FILE: Global/Dropbox.gitignore
================================================
# Dropbox settings and caches
.dropbox
.dropbox.attr
.dropbox.cache



================================================
FILE: Global/Eclipse.gitignore
================================================
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_tests/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project



================================================
FILE: Global/EiffelStudio.gitignore
================================================
# The compilation directory
EIFGENs



================================================
FILE: Global/Emacs.gitignore
================================================
# -*- mode: gitignore; -*-
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Org-mode
.org-id-locations
*_archive

# flymake-mode
*_flymake.*

# eshell files
/eshell/history
/eshell/lastdir

# elpa packages
/elpa/

# reftex files
*.rel

# AUCTeX auto folder
/auto/

# cask packages
.cask/
dist/

# Flycheck
flycheck_*.el

# server auth directory
/server/

# projectiles files
.projectile

# directory configuration
.dir-locals.el

# network security
/network-security.data

# undo-tree
*.~undo-tree~



================================================
FILE: Global/Ensime.gitignore
================================================
# Ensime specific
.ensime
.ensime_cache/
.ensime_lucene/



================================================
FILE: Global/Espresso.gitignore
================================================
*.esproj



================================================
FILE: Global/FlexBuilder.gitignore
================================================
bin/
bin-debug/
bin-release/



================================================
FILE: Global/GPG.gitignore
================================================
secring.*




================================================
FILE: Global/Images.gitignore
================================================
# JPEG
*.jpg
*.jpeg
*.jpe
*.jif
*.jfif
*.jfi

# JPEG 2000
*.jp2
*.j2k
*.jpf
*.jpx
*.jpm
*.mj2

# JPEG XR
*.jxr
*.hdp
*.wdp

# Graphics Interchange Format
*.gif

# RAW
*.raw

# Web P
*.webp

# Portable Network Graphics
*.png

# Animated Portable Network Graphics
*.apng

# Multiple-image Network Graphics
*.mng

# Tagged Image File Format
*.tiff
*.tif

# Scalable Vector Graphics
*.svg
*.svgz

# Portable Document Format
*.pdf

# X BitMap
*.xbm

# BMP
*.bmp
*.dib

# ICO
*.ico

# 3D Images
*.3dm
*.max



================================================
FILE: Global/JDeveloper.gitignore
================================================
# default application storage directory used by the IDE Performance Cache feature
.data/

# used for ADF styles caching
temp/

# default output directories
classes/
deploy/
javadoc/

# lock file, a part of Oracle Credential Store Framework
cwallet.sso.lck


================================================
FILE: Global/JEnv.gitignore
================================================
# JEnv local Java version configuration file
.java-version

# Used by previous versions of JEnv
.jenv-version



================================================
FILE: Global/JetBrains.gitignore
================================================
# Covers JetBrains IDEs: IntelliJ, GoLand, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# AWS User-specific
.idea/**/aws.xml

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint plugin
.idea/sonarlint/
.idea/sonarlint.xml # see https://community.sonarsource.com/t/is-the-file-idea-idea-idea-sonarlint-xml-intended-to-be-under-source-control/121119

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based HTTP Client
.idea/httpRequests
http-client.private.env.json

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

# Apifox Helper cache
.idea/.cache/.Apifox_Helper
.idea/ApifoxUploaderProjectSetting.xml



================================================
FILE: Global/Kate.gitignore
================================================
# Swap Files #
.*.kate-swp
.swp.*



================================================
FILE: Global/KDevelop4.gitignore
================================================
*.kdev4
.kdev4/



================================================
FILE: Global/Lazarus.gitignore
================================================
# Lazarus compiler-generated binaries (safe to delete)
*.exe
*.dll
*.so
*.dylib
*.lrs
*.res
*.compiled
*.dbg
*.ppu
*.o
*.or
*.a

# Lazarus autogenerated files (duplicated info)
*.rst
*.rsj
*.lrt

# Lazarus local files (user-specific info)
*.lps

# Lazarus backups and unit output folders.
# These can be changed by user in Lazarus/project options.
backup/
*.bak
lib/

# Application bundle for Mac OS
*.app/



================================================
FILE: Global/Lefthook.gitignore
================================================
# https://lefthook.dev/configuration/#config-file-name
/.lefthook-local.json
/.lefthook-local.toml
/.lefthook-local.yaml
/.lefthook-local.yml
/lefthook-local.json
/lefthook-local.toml
/lefthook-local.yaml
/lefthook-local.yml
/.config/lefthook-local.json
/.config/lefthook-local.toml
/.config/lefthook-local.yaml
/.config/lefthook-local.yml

# https://lefthook.dev/configuration/source_dir_local.html
/.lefthook-local/



================================================
FILE: Global/LibreOffice.gitignore
================================================
# LibreOffice locks
.~lock.*#



================================================
FILE: Global/Linux.gitignore
================================================
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# Metadata left by Dolphin file manager, which comes with KDE Plasma
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Log files created by default by the nohup command
nohup.out



================================================
FILE: Global/LyX.gitignore
================================================
# Ignore LyX backup and autosave files
# http://www.lyx.org/
*.lyx~
*.lyx#



================================================
FILE: Global/macOS.gitignore
================================================
# General
.DS_Store
__MACOSX/
.AppleDouble
.LSOverride
Icon[
]

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk



================================================
FILE: Global/MATLAB.gitignore
================================================
# Autosave files
*.asv
*.m~
*.autosave
*.slx.r*
*.mdl.r*

# Derived content-obscured files
*.p

# Compiled MEX files
*.mex*

# Packaged app and toolbox files
*.mlappinstall
*.mltbx

# Deployable archives
*.ctf

# Generated helpsearch folders
helpsearch*/

# Code generation folders
slprj/
sccprj/
codegen/

# Cache files
*.slxc

# Cloud based storage dotfile
.MATLABDriveTag



================================================
FILE: Global/Mercurial.gitignore
================================================
.hg/
.hgignore
.hgsigs
.hgsub
.hgsubstate
.hgtags



================================================
FILE: Global/Metals.gitignore
================================================
# Metals (Scala Language Server)
# Reference: https://scalameta.org/metals/docs/editors/vscode#files-and-directories-to-include-in-your-gitignore
.metals/
.bloop/
.ammonite/
metals.sbt



================================================
FILE: Global/MicrosoftOffice.gitignore
================================================
*.tmp

# Word temporary
~$*.doc*
~$*.dot*

# Word Auto Backup File
Backup of *.doc*

# Excel temporary
~$*.xls*

# Excel Backup File
*.xlk

# PowerPoint temporary
~$*.ppt*

# Visio autosave temporary files
*.~vsd*



================================================
FILE: Global/mise.gitignore
================================================
# https://mise.jdx.dev/configuration.html
# https://mise.jdx.dev/configuration/environments.html
.mise.*.local.toml
.mise.local.toml
mise.*.local.toml
mise.local.toml
.mise/*.local.toml
mise/*.local.toml

# https://mise.jdx.dev/configuration.html#tool-versions
#.tool-versions



================================================
FILE: Global/Momentics.gitignore
================================================
# Built files
x86/
arm/
arm-p/
translations/*.qm

# IDE settings
.settings/



================================================
FILE: Global/MonoDevelop.gitignore
================================================
#User Specific
*.userprefs
*.usertasks

#Mono Project Files
*.pidb
*.resources
test-results/



================================================
FILE: Global/NetBeans.gitignore
================================================
**/nbproject/private/
**/nbproject/Makefile-*.mk
**/nbproject/Package-*.bash
build/
nbbuild/
dist/
nbdist/
.nb-gradle/



================================================
FILE: Global/Ninja.gitignore
================================================
.ninja_deps
.ninja_log



================================================
FILE: Global/NotepadPP.gitignore
================================================
# Notepad++ backups #
*.bak



================================================
FILE: Global/Octave.gitignore
================================================
MATLAB.gitignore


================================================
FILE: Global/Otto.gitignore
================================================
.otto/



================================================
FILE: Global/Patch.gitignore
================================================
*.orig
*.rej



================================================
FILE: Global/PlatformIO.gitignore
================================================
.pio
.pioenvs
.piolibdeps
.vscode/.browse.c_cpp.db*
.vscode/c_cpp_properties.json
.vscode/launch.json



================================================
FILE: Global/PSoCCreator.gitignore
================================================
# Project Settings
*.cywrk.*
*.cyprj.*

# Generated Assets and Resources
Debug/
Release/
Export/
*/codegentemp
*/Generated_Source
*_datasheet.pdf
*_timing.html
*.cycdx
*.cyfit
*.rpt
*.svd
*.log
*.zip



================================================
FILE: Global/PuTTY.gitignore
================================================
# Private key
*.ppk



================================================
FILE: Global/Redcar.gitignore
================================================
.redcar



================================================
FILE: Global/Redis.gitignore
================================================
# Ignore redis binary dump (dump.rdb) files

*.rdb



================================================
FILE: Global/SBT.gitignore
================================================
# Simple Build Tool
# http://www.scala-sbt.org/release/docs/Getting-Started/Directories.html#configuring-version-control

dist/*
target/
lib_managed/
src_managed/
project/boot/
project/plugins/project/
.history
.cache
.lib/
.bsp/



================================================
FILE: Global/SlickEdit.gitignore
================================================
# SlickEdit workspace and project files are ignored by default because
# typically they are considered to be developer-specific and not part of a
# project.
*.vpw
*.vpj

# SlickEdit workspace history and tag files always contain user-specific
# data so they should not be stored in a repository.
*.vpwhistu
*.vpwhist
*.vtg



================================================
FILE: Global/Stata.gitignore
================================================
# .gitignore file for git projects containing Stata files
# Commercial statistical software: http://www.stata.com

# Stata dataset and output files
*.dta
*.gph
*.log
*.smcl
*.stpr
*.stsem
~*.stswp

# Graphic export files from Stata
# Stata command graph export: http://www.stata.com/manuals14/g-2graphexport.pdf
#
# You may add graphic export files to your .gitignore. However you should be
# aware that this will exclude all image files from this main directory
# and subdirectories.
# *.ps
# *.eps
# *.wmf
# *.emf
# *.pdf
# *.png
# *.tif



================================================
FILE: Global/SublimeText.gitignore
================================================
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Workspace files are user-specific
*.sublime-workspace

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# SFTP configuration file
sftp-config.json
sftp-config-alt*.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings



================================================
FILE: Global/SVN.gitignore
================================================
.svn/



================================================
FILE: Global/Syncthing.gitignore
================================================
# Syncthing caches
.stversions



================================================
FILE: Global/SynopsysVCS.gitignore
================================================
# Waveform formats
*.vcd
*.vpd
*.evcd
*.fsdb

# Default name of the simulation executable.  A different name can be
# specified with this switch (the associated daidir database name is
# also taken from here):  -o <path>/<filename>
simv

# Generated for Verilog and VHDL top configs
simv.daidir/
simv.db.dir/

# Infrastructure necessary to co-simulate SystemC models with
# Verilog/VHDL models.  An alternate directory may be specified with this
# switch:  -Mdir=<directory_path>
csrc/

# Log file - the following switch allows to specify the file that will be
# used to write all messages from simulation:  -l <filename>
*.log

# Coverage results (generated with urg) and database location.  The
# following switch can also be used:  urg -dir <coverage_directory>.vdb
simv.vdb/
urgReport/

# DVE and UCLI related files.
DVEfiles/
ucli.key

# When the design is elaborated for DirectC, the following file is created
# with declarations for C/C++ functions.
vc_hdrs.h



================================================
FILE: Global/Tags.gitignore
================================================
# Ignore tags created by etags, ctags, gtags (GNU global) and cscope
TAGS
.TAGS
!TAGS/
tags
.tags
!tags/
gtags.files
GTAGS
GRTAGS
GPATH
GSYMS
cscope.files
cscope.out
cscope.in.out
cscope.po.out




================================================
FILE: Global/TextMate.gitignore
================================================
*.tmproj
*.tmproject
tmtags



================================================
FILE: Global/TortoiseGit.gitignore
================================================
# Project-level settings
/.tgitconfig



================================================
FILE: Global/Vagrant.gitignore
================================================
# General
.vagrant/

# Log files (if you are creating logs in debug mode, uncomment this)
# *.log



================================================
FILE: Global/Vim.gitignore
================================================
# Swap
[._]*.s[a-v][a-z]
# comment out the next line if you don't need vector files
!*.svg
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Session
Session.vim
Sessionx.vim

# Temporary
.netrwhist
*~
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~



================================================
FILE: Global/VirtualEnv.gitignore
================================================
# Virtualenv
# https://realpython.com/python-virtual-environments-a-primer/#the-virtualenv-project
.Python
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
.venv
pip-selfcheck.json



================================================
FILE: Global/Virtuoso.gitignore
================================================
# Gitignore for Cadence Virtuoso
################################################################

# Log files
*.log
panic*.log.*

# OpenAccess database lock files
*.cdslck*

# Run directories for layout vs. schematic and design rule check
lvsRunDir/*
drcRunDir/*

# Abstract generation tool
abstract.log*
abstract.record*




================================================
FILE: Global/VisualStudioCode.gitignore
================================================
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
!*.code-workspace

# Built Visual Studio Code Extensions
*.vsix



================================================
FILE: Global/WebMethods.gitignore
================================================
**/IntegrationServer/datastore/
**/IntegrationServer/db/
**/IntegrationServer/DocumentStore/
**/IntegrationServer/lib/
**/IntegrationServer/logs/
**/IntegrationServer/replicate/
**/IntegrationServer/sdk/
**/IntegrationServer/support/
**/IntegrationServer/update/
**/IntegrationServer/userFtpRoot/
**/IntegrationServer/web/
**/IntegrationServer/WmRepository4/
**/IntegrationServer/XAStore/
**/IntegrationServer/packages/Wm*/



================================================
FILE: Global/Windows.gitignore
================================================
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk



================================================
FILE: Global/Xcode.gitignore
================================================
## User settings
xcuserdata/



================================================
FILE: Global/XilinxISE.gitignore
================================================
# intermediate build files
*.bgn
*.bit
*.bld
*.cmd_log
*.drc
*.ll
*.lso
*.msd
*.msk
*.ncd
*.ngc
*.ngd
*.ngr
*.pad
*.par
*.pcf
*.prj
*.ptwx
*.rbb
*.rbd
*.stx
*.syr
*.twr
*.twx
*.unroutes
*.ut
*.xpi
*.xst
*_bitgen.xwbt
*_envsettings.html
*_map.map
*_map.mrp
*_map.ngm
*_map.xrpt
*_ngdbuild.xrpt
*_pad.csv
*_pad.txt
*_par.xrpt
*_summary.html
*_summary.xml
*_usage.xml
*_xst.xrpt

# iMPACT generated files
_impactbatch.log
impact.xsl
impact_impact.xwbt
ise_impact.cmd
webtalk_impact.xml

# Core Generator generated files
xaw2verilog.log

# project-wide generated files
*.gise
par_usage_statistics.html
usage_statistics_webtalk.html
webtalk.log
webtalk_pn.xml

# generated folders
iseconfig/
xlnx_auto_0_xdb/
xst/
_ngo/
_xmsgs/



================================================
FILE: .github/CODEOWNERS
================================================
# Order is important. The LAST matching pattern has the MOST precedence.
# gitignore style patterns are used, not globs.
# https://docs.github.com/articles/about-codeowners
# https://git-scm.com/docs/gitignore

# Catch All - Defer to the gitignore maintainers
* @github/gitignore-maintainers



================================================
FILE: .github/PULL_REQUEST_TEMPLATE.md
================================================
### Reasons for making this change

_TODO_
<!---
Please provide some background for this change.
--->

### Links to documentation supporting these rule changes

_TODO_

<!---
Link to the project docs, any existing .gitignore files that project may have in it's own repo, etc
--->

### If this is a new template

Link to application or projectÃ¢â‚¬â„¢s homepage: TODO

### Merge and Approval Steps
- [ ] Confirm that you've read the [contribution guidelines](https://github.com/github/gitignore/tree/main?tab=readme-ov-file#contributing-guidelines) and ensured your PR aligns
- [ ] Ensure CI is passing
- [ ] Get a review and Approval from one of the maintainers



================================================
FILE: .github/workflows/stale.yml
================================================
name: Stale

# **What it does**: Close pull requests after no updates for 180 days.
# **Why we have it**: This repository gets a lot of PRs, and the maintainers team is small.
#                     This helps reduce the open PRs to ones that are most desired by the community.
# **Who does it impact**: Contributors and maintainers of github/gitignore.

on:
  schedule:
    - cron: '20 16 * * *' # Run every day at 16:20 UTC / 8:20 PST

permissions:
  actions: write
  contents: write # only for delete-branch option
  issues: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0
        with:
          stale-pr-message: 'This PR is stale because there have been no updates in 90 days. It will close after 180 days of inactivity. Leave a comment if you want to keep it open :smile:'
          close-pr-message: 'This PR has been closed because it was inactive for 180 days. If you want to continue working on it, please open a new PR.'
          days-before-stale: 90
          days-before-close: 180
          stale-pr-label: 'stale'
          exempt-pr-labels: 'keep'
          close-issue-reason: not_planned
          ascending: true # Sort PRs by last updated date in ascending order
          operations-per-run: 300





================================================
FILE: gitingest_outputs/github_gitignore_20250905_194008.txt
================================================
Directory structure:
â””â”€â”€ github-gitignore/
    â”œâ”€â”€ README.md
    â”œâ”€â”€ Actionscript.gitignore
    â”œâ”€â”€ Ada.gitignore
    â”œâ”€â”€ AdventureGameStudio.gitignore
    â”œâ”€â”€ Agda.gitignore
    â”œâ”€â”€ AL.gitignore
    â”œâ”€â”€ Android.gitignore
    â”œâ”€â”€ Angular.gitignore
    â”œâ”€â”€ AppceleratorTitanium.gitignore
    â”œâ”€â”€ AppEngine.gitignore
    â”œâ”€â”€ ArchLinuxPackages.gitignore
    â”œâ”€â”€ Autotools.gitignore
    â”œâ”€â”€ Ballerina.gitignore
    â”œâ”€â”€ C++.gitignore
    â”œâ”€â”€ C.gitignore
    â”œâ”€â”€ CakePHP.gitignore
    â”œâ”€â”€ CFWheels.gitignore
    â”œâ”€â”€ ChefCookbook.gitignore
    â”œâ”€â”€ Clojure.gitignore
    â”œâ”€â”€ CMake.gitignore
    â”œâ”€â”€ CodeIgniter.gitignore
    â”œâ”€â”€ CommonLisp.gitignore
    â”œâ”€â”€ Composer.gitignore
    â”œâ”€â”€ Concrete5.gitignore
    â”œâ”€â”€ CONTRIBUTING.md
    â”œâ”€â”€ Coq.gitignore
    â”œâ”€â”€ CraftCMS.gitignore
    â”œâ”€â”€ CUDA.gitignore
    â”œâ”€â”€ D.gitignore
    â”œâ”€â”€ Dart.gitignore
    â”œâ”€â”€ Delphi.gitignore
    â”œâ”€â”€ DM.gitignore
    â”œâ”€â”€ Dotnet.gitignore
    â”œâ”€â”€ Drupal.gitignore
    â”œâ”€â”€ Eagle.gitignore
    â”œâ”€â”€ ecu.test.gitignore
    â”œâ”€â”€ Elisp.gitignore
    â”œâ”€â”€ Elixir.gitignore
    â”œâ”€â”€ Elm.gitignore
    â”œâ”€â”€ EPiServer.gitignore
    â”œâ”€â”€ Erlang.gitignore
    â”œâ”€â”€ ExpressionEngine.gitignore
    â”œâ”€â”€ ExtJs.gitignore
    â”œâ”€â”€ Fancy.gitignore
    â”œâ”€â”€ Finale.gitignore
    â”œâ”€â”€ Firebase.gitignore
    â”œâ”€â”€ FlaxEngine.gitignore
    â”œâ”€â”€ Flutter.gitignore
    â”œâ”€â”€ ForceDotCom.gitignore
    â”œâ”€â”€ Fortran.gitignore
    â”œâ”€â”€ FuelPHP.gitignore
    â”œâ”€â”€ Gcov.gitignore
    â”œâ”€â”€ GitBook.gitignore
    â”œâ”€â”€ GitHubPages.gitignore
    â”œâ”€â”€ Gleam.gitignore
    â”œâ”€â”€ Go.gitignore
    â”œâ”€â”€ Godot.gitignore
    â”œâ”€â”€ Gradle.gitignore
    â”œâ”€â”€ Grails.gitignore
    â”œâ”€â”€ GWT.gitignore
    â”œâ”€â”€ Haskell.gitignore
    â”œâ”€â”€ Haxe.gitignore
    â”œâ”€â”€ HIP.gitignore
    â”œâ”€â”€ IAR.gitignore
    â”œâ”€â”€ Idris.gitignore
    â”œâ”€â”€ IGORPro.gitignore
    â”œâ”€â”€ Java.gitignore
    â”œâ”€â”€ JBoss.gitignore
    â”œâ”€â”€ Jekyll.gitignore
    â”œâ”€â”€ JENKINS_HOME.gitignore
    â”œâ”€â”€ Joomla.gitignore
    â”œâ”€â”€ Julia.gitignore
    â”œâ”€â”€ Katalon.gitignore
    â”œâ”€â”€ KiCad.gitignore
    â”œâ”€â”€ Kohana.gitignore
    â”œâ”€â”€ Kotlin.gitignore
    â”œâ”€â”€ LabVIEW.gitignore
    â”œâ”€â”€ LangChain.gitignore
    â”œâ”€â”€ Laravel.gitignore
    â”œâ”€â”€ Leiningen.gitignore
    â”œâ”€â”€ LemonStand.gitignore
    â”œâ”€â”€ LICENSE
    â”œâ”€â”€ Lilypond.gitignore
    â”œâ”€â”€ Lithium.gitignore
    â”œâ”€â”€ Lua.gitignore
    â”œâ”€â”€ Luau.gitignore
    â”œâ”€â”€ Magento.gitignore
    â”œâ”€â”€ Maven.gitignore
    â”œâ”€â”€ Mercury.gitignore
    â”œâ”€â”€ MetaProgrammingSystem.gitignore
    â”œâ”€â”€ Modelica.gitignore
    â”œâ”€â”€ ModelSim.gitignore
    â”œâ”€â”€ Nanoc.gitignore
    â”œâ”€â”€ Nestjs.gitignore
    â”œâ”€â”€ Nextjs.gitignore
    â”œâ”€â”€ Nim.gitignore
    â”œâ”€â”€ Nix.gitignore
    â”œâ”€â”€ Node.gitignore
    â”œâ”€â”€ Objective-C.gitignore
    â”œâ”€â”€ OCaml.gitignore
    â”œâ”€â”€ Opa.gitignore
    â”œâ”€â”€ OpenCart.gitignore
    â”œâ”€â”€ OracleForms.gitignore
    â”œâ”€â”€ Packer.gitignore
    â”œâ”€â”€ Perl.gitignore
    â”œâ”€â”€ Phalcon.gitignore
    â”œâ”€â”€ PlayFramework.gitignore
    â”œâ”€â”€ Plone.gitignore
    â”œâ”€â”€ Prestashop.gitignore
    â”œâ”€â”€ Processing.gitignore
    â”œâ”€â”€ PureScript.gitignore
    â”œâ”€â”€ Python.gitignore
    â”œâ”€â”€ Qooxdoo.gitignore
    â”œâ”€â”€ Qt.gitignore
    â”œâ”€â”€ R.gitignore
    â”œâ”€â”€ Racket.gitignore
    â”œâ”€â”€ Rails.gitignore
    â”œâ”€â”€ Raku.gitignore
    â”œâ”€â”€ ReScript.gitignore
    â”œâ”€â”€ RhodesRhomobile.gitignore
    â”œâ”€â”€ ROS.gitignore
    â”œâ”€â”€ Ruby.gitignore
    â”œâ”€â”€ Rust.gitignore
    â”œâ”€â”€ Salesforce.gitignore
    â”œâ”€â”€ Sass.gitignore
    â”œâ”€â”€ Scala.gitignore
    â”œâ”€â”€ Scheme.gitignore
    â”œâ”€â”€ SCons.gitignore
    â”œâ”€â”€ Scrivener.gitignore
    â”œâ”€â”€ Sdcc.gitignore
    â”œâ”€â”€ SeamGen.gitignore
    â”œâ”€â”€ SketchUp.gitignore
    â”œâ”€â”€ Smalltalk.gitignore
    â”œâ”€â”€ Solidity-Remix.gitignore
    â”œâ”€â”€ SSDT-sqlproj.gitignore
    â”œâ”€â”€ Stella.gitignore
    â”œâ”€â”€ SugarCRM.gitignore
    â”œâ”€â”€ Swift.gitignore
    â”œâ”€â”€ Symfony.gitignore
    â”œâ”€â”€ SymphonyCMS.gitignore
    â”œâ”€â”€ Terraform.gitignore
    â”œâ”€â”€ TestComplete.gitignore
    â”œâ”€â”€ TeX.gitignore
    â”œâ”€â”€ Textpattern.gitignore
    â”œâ”€â”€ TurboGears2.gitignore
    â”œâ”€â”€ TwinCAT3.gitignore
    â”œâ”€â”€ Typo3.gitignore
    â”œâ”€â”€ Unity.gitignore
    â”œâ”€â”€ UnrealEngine.gitignore
    â”œâ”€â”€ VBA.gitignore
    â”œâ”€â”€ VisualStudio.gitignore
    â”œâ”€â”€ VVVV.gitignore
    â”œâ”€â”€ Waf.gitignore
    â”œâ”€â”€ WordPress.gitignore
    â”œâ”€â”€ Xojo.gitignore
    â”œâ”€â”€ Yeoman.gitignore
    â”œâ”€â”€ Yii.gitignore
    â”œâ”€â”€ ZendFramework.gitignore
    â”œâ”€â”€ Zephir.gitignore
    â”œâ”€â”€ Zig.gitignore
    â”œâ”€â”€ community/
    â”‚   â”œâ”€â”€ Alteryx.gitignore
    â”‚   â”œâ”€â”€ AltiumDesigner.gitignore
    â”‚   â”œâ”€â”€ AutoIt.gitignore
    â”‚   â”œâ”€â”€ AutomationStudio.gitignore
    â”‚   â”œâ”€â”€ B4X.gitignore
    â”‚   â”œâ”€â”€ Bazel.gitignore
    â”‚   â”œâ”€â”€ Beef.gitignore
    â”‚   â”œâ”€â”€ Dotter.gitignore
    â”‚   â”œâ”€â”€ Exercism.gitignore
    â”‚   â”œâ”€â”€ Gretl.gitignore
    â”‚   â”œâ”€â”€ Hexo.gitignore
    â”‚   â”œâ”€â”€ LensStudio.gitignore
    â”‚   â”œâ”€â”€ libogc.gitignore
    â”‚   â”œâ”€â”€ Logtalk.gitignore
    â”‚   â”œâ”€â”€ MetaTrader5.gitignore
    â”‚   â”œâ”€â”€ Move.gitignore
    â”‚   â”œâ”€â”€ NasaSpecsIntact.gitignore
    â”‚   â”œâ”€â”€ OpenSSL.gitignore
    â”‚   â”œâ”€â”€ OpenTofu.gitignore
    â”‚   â”œâ”€â”€ Puppet.gitignore
    â”‚   â”œâ”€â”€ Racket.gitignore
    â”‚   â”œâ”€â”€ Red.gitignore
    â”‚   â”œâ”€â”€ ROS2.gitignore
    â”‚   â”œâ”€â”€ SPFx.gitignore
    â”‚   â”œâ”€â”€ Splunk.gitignore
    â”‚   â”œâ”€â”€ Strapi.gitignore
    â”‚   â”œâ”€â”€ Terragrunt.gitignore
    â”‚   â”œâ”€â”€ Toit.gitignore
    â”‚   â”œâ”€â”€ UiPath.gitignore
    â”‚   â”œâ”€â”€ UTAU.gitignore
    â”‚   â”œâ”€â”€ V.gitignore
    â”‚   â”œâ”€â”€ Xilinx.gitignore
    â”‚   â”œâ”€â”€ AWS/
    â”‚   â”‚   â”œâ”€â”€ CDK.gitignore
    â”‚   â”‚   â””â”€â”€ SAM.gitignore
    â”‚   â”œâ”€â”€ BoxLang/
    â”‚   â”‚   â””â”€â”€ ColdBox.gitignore
    â”‚   â”œâ”€â”€ CFML/
    â”‚   â”‚   â””â”€â”€ ColdBox.gitignore
    â”‚   â”œâ”€â”€ DotNet/
    â”‚   â”‚   â”œâ”€â”€ core.gitignore
    â”‚   â”‚   â”œâ”€â”€ InforCMS.gitignore
    â”‚   â”‚   â”œâ”€â”€ Kentico.gitignore
    â”‚   â”‚   â””â”€â”€ Umbraco.gitignore
    â”‚   â”œâ”€â”€ Elixir/
    â”‚   â”‚   â””â”€â”€ Phoenix.gitignore
    â”‚   â”œâ”€â”€ embedded/
    â”‚   â”‚   â”œâ”€â”€ AtmelStudio.gitignore
    â”‚   â”‚   â”œâ”€â”€ esp-idf.gitignore
    â”‚   â”‚   â”œâ”€â”€ IAR_EWARM.gitignore
    â”‚   â”‚   â””â”€â”€ uVision.gitignore
    â”‚   â”œâ”€â”€ GNOME/
    â”‚   â”‚   â””â”€â”€ GNOMEShellExtension.gitignore
    â”‚   â”œâ”€â”€ Golang/
    â”‚   â”‚   â”œâ”€â”€ Go.AllowList.gitignore
    â”‚   â”‚   â””â”€â”€ Hugo.gitignore
    â”‚   â”œâ”€â”€ Java/
    â”‚   â”‚   â”œâ”€â”€ JBoss4.gitignore
    â”‚   â”‚   â””â”€â”€ JBoss6.gitignore
    â”‚   â”œâ”€â”€ JavaScript/
    â”‚   â”‚   â”œâ”€â”€ Cordova.gitignore
    â”‚   â”‚   â”œâ”€â”€ Expo.gitignore
    â”‚   â”‚   â”œâ”€â”€ Meteor.gitignore
    â”‚   â”‚   â”œâ”€â”€ NWjs.gitignore
    â”‚   â”‚   â””â”€â”€ Vue.gitignore
    â”‚   â”œâ”€â”€ Linux/
    â”‚   â”‚   â””â”€â”€ Snap.gitignore
    â”‚   â”œâ”€â”€ Obsidian/
    â”‚   â”‚   â”œâ”€â”€ NotesAndCoreConfiguration.gitignore
    â”‚   â”‚   â”œâ”€â”€ NotesAndExtendedConfiguration.gitignore
    â”‚   â”‚   â””â”€â”€ NotesOnly.gitignore
    â”‚   â”œâ”€â”€ PHP/
    â”‚   â”‚   â”œâ”€â”€ Bitrix.gitignore
    â”‚   â”‚   â”œâ”€â”€ CodeSniffer.gitignore
    â”‚   â”‚   â”œâ”€â”€ Drupal7.gitignore
    â”‚   â”‚   â”œâ”€â”€ Jigsaw.gitignore
    â”‚   â”‚   â”œâ”€â”€ Magento1.gitignore
    â”‚   â”‚   â”œâ”€â”€ Magento2.gitignore
    â”‚   â”‚   â”œâ”€â”€ Pimcore.gitignore
    â”‚   â”‚   â””â”€â”€ ThinkPHP.gitignore
    â”‚   â””â”€â”€ Python/
    â”‚       â”œâ”€â”€ JupyterNotebooks.gitignore
    â”‚       â””â”€â”€ Nikola.gitignore
    â”œâ”€â”€ Global/
    â”‚   â”œâ”€â”€ README.md
    â”‚   â”œâ”€â”€ AL.gitignore
    â”‚   â”œâ”€â”€ Anjuta.gitignore
    â”‚   â”œâ”€â”€ Ansible.gitignore
    â”‚   â”œâ”€â”€ Archives.gitignore
    â”‚   â”œâ”€â”€ Backup.gitignore
    â”‚   â”œâ”€â”€ Bazaar.gitignore
    â”‚   â”œâ”€â”€ BricxCC.gitignore
    â”‚   â”œâ”€â”€ Calabash.gitignore
    â”‚   â”œâ”€â”€ Cloud9.gitignore
    â”‚   â”œâ”€â”€ CodeKit.gitignore
    â”‚   â”œâ”€â”€ Cursor.gitignore
    â”‚   â”œâ”€â”€ CVS.gitignore
    â”‚   â”œâ”€â”€ DartEditor.gitignore
    â”‚   â”œâ”€â”€ Diff.gitignore
    â”‚   â”œâ”€â”€ Dreamweaver.gitignore
    â”‚   â”œâ”€â”€ Dropbox.gitignore
    â”‚   â”œâ”€â”€ Eclipse.gitignore
    â”‚   â”œâ”€â”€ EiffelStudio.gitignore
    â”‚   â”œâ”€â”€ Emacs.gitignore
    â”‚   â”œâ”€â”€ Ensime.gitignore
    â”‚   â”œâ”€â”€ Espresso.gitignore
    â”‚   â”œâ”€â”€ FlexBuilder.gitignore
    â”‚   â”œâ”€â”€ GPG.gitignore
    â”‚   â”œâ”€â”€ Images.gitignore
    â”‚   â”œâ”€â”€ JDeveloper.gitignore
    â”‚   â”œâ”€â”€ JEnv.gitignore
    â”‚   â”œâ”€â”€ JetBrains.gitignore
    â”‚   â”œâ”€â”€ Kate.gitignore
    â”‚   â”œâ”€â”€ KDevelop4.gitignore
    â”‚   â”œâ”€â”€ Lazarus.gitignore
    â”‚   â”œâ”€â”€ Lefthook.gitignore
    â”‚   â”œâ”€â”€ LibreOffice.gitignore
    â”‚   â”œâ”€â”€ Linux.gitignore
    â”‚   â”œâ”€â”€ LyX.gitignore
    â”‚   â”œâ”€â”€ macOS.gitignore
    â”‚   â”œâ”€â”€ MATLAB.gitignore
    â”‚   â”œâ”€â”€ Mercurial.gitignore
    â”‚   â”œâ”€â”€ Metals.gitignore
    â”‚   â”œâ”€â”€ MicrosoftOffice.gitignore
    â”‚   â”œâ”€â”€ mise.gitignore
    â”‚   â”œâ”€â”€ Momentics.gitignore
    â”‚   â”œâ”€â”€ MonoDevelop.gitignore
    â”‚   â”œâ”€â”€ NetBeans.gitignore
    â”‚   â”œâ”€â”€ Ninja.gitignore
    â”‚   â”œâ”€â”€ NotepadPP.gitignore
    â”‚   â”œâ”€â”€ Octave.gitignore
    â”‚   â”œâ”€â”€ Otto.gitignore
    â”‚   â”œâ”€â”€ Patch.gitignore
    â”‚   â”œâ”€â”€ PlatformIO.gitignore
    â”‚   â”œâ”€â”€ PSoCCreator.gitignore
    â”‚   â”œâ”€â”€ PuTTY.gitignore
    â”‚   â”œâ”€â”€ Redcar.gitignore
    â”‚   â”œâ”€â”€ Redis.gitignore
    â”‚   â”œâ”€â”€ SBT.gitignore
    â”‚   â”œâ”€â”€ SlickEdit.gitignore
    â”‚   â”œâ”€â”€ Stata.gitignore
    â”‚   â”œâ”€â”€ SublimeText.gitignore
    â”‚   â”œâ”€â”€ SVN.gitignore
    â”‚   â”œâ”€â”€ Syncthing.gitignore
    â”‚   â”œâ”€â”€ SynopsysVCS.gitignore
    â”‚   â”œâ”€â”€ Tags.gitignore
    â”‚   â”œâ”€â”€ TextMate.gitignore
    â”‚   â”œâ”€â”€ TortoiseGit.gitignore
    â”‚   â”œâ”€â”€ Vagrant.gitignore
    â”‚   â”œâ”€â”€ Vim.gitignore
    â”‚   â”œâ”€â”€ VirtualEnv.gitignore
    â”‚   â”œâ”€â”€ Virtuoso.gitignore
    â”‚   â”œâ”€â”€ VisualStudioCode.gitignore
    â”‚   â”œâ”€â”€ WebMethods.gitignore
    â”‚   â”œâ”€â”€ Windows.gitignore
    â”‚   â”œâ”€â”€ Xcode.gitignore
    â”‚   â””â”€â”€ XilinxISE.gitignore
    â””â”€â”€ .github/
        â”œâ”€â”€ CODEOWNERS
        â”œâ”€â”€ PULL_REQUEST_TEMPLATE.md
        â””â”€â”€ workflows/
            â””â”€â”€ stale.yml

================================================
FILE: README.md
================================================
# A collection of `.gitignore` templates

This is GitHubÃ¢â‚¬â„¢s collection of [`.gitignore`][man] file templates.
We use this list to populate the `.gitignore` template choosers available
in the GitHub.com interface when creating new repositories and files.

For more information about how `.gitignore` files work, and how to use them,
the following resources are a great place to start:

- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.
- The [Ignoring Files article][help] on the GitHub Help site.
- The [gitignore(5)][man] manual page.

[man]: https://git-scm.com/docs/gitignore
[help]: https://help.github.com/articles/ignoring-files
[chapter]: https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring
[progit]: https://git-scm.com/book

## Folder structure

We support a collection of templates, organized in this way:

- The root folder contains templates in common use, to help people get started
  with popular programming languages and technologies. These define a meaningful
  set of rules to help get started, and ensure you are not committing
  unimportant files into your repository.
- [`Global`](./Global) contains templates for various editors, tools and
  operating systems that can be used in different situations. It is recommended
  that you either [add these to your global template](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer)
  or merge these rules into your project-specific templates if you want to use
  them permanently.
- [`community`](./community) contains specialized templates for other popular
  languages, tools and project, which don't currently belong in the mainstream
  templates. These should be added to your project-specific templates when you
  decide to adopt the framework or tool.

## What makes a good template?

A template should contain a set of rules to help Git repositories work with a
specific programming language, framework, tool or environment.

If it's not possible to curate a small set of useful rules for this situation,
then the template is not a good fit for this collection.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework), it could live under the `community`
directory. See [versioned templates](#versioned-templates) for more details.

If you have a small set of rules, or want to support a technology that is not
widely in use, and still believe this will be helpful to others, please read the
section about [specialized templates](#specialized-templates) for more details.

Include details when opening pull request if the template is important and visible. We
may not accept it immediately, but we can promote it to the root at a later date
based on interest.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the _most common and helpful_ templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.

## Contributing guidelines

WeÃ¢â‚¬â„¢d love for you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to _everyone_
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change is specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify _one template_ per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

## Versioned templates

Some templates can change greatly between versions, and if you wish to contribute
to this repository we need to follow this specific flow:

- the template at the root should be the current supported version
- the template at the root should not have a version in the filename (i.e.
  "evergreen")
- previous versions of templates should live under `community/`
- previous versions of the template should embed the version in the filename,
  for readability

This helps ensure users get the latest version (because they'll use whatever is
at the root) but helps maintainers support older versions still in the wild.

## Specialized templates

If you have a template that you would like to contribute, but it isn't quite
mainstream, please consider adding this to the `community` directory under a
folder that best suits where it belongs.

The rules in your specialized template should be specific to the framework or
tool, and any additional templates should be mentioned in a comment in the
header of the template.

For example, this template might live at `community/DotNet/InforCRM.gitignore`:

```gitignore
# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in
```

## Contributing workflow

HereÃ¢â‚¬â„¢s how we suggest you go about proposing a change to this project:

1. [Fork this project][fork] to your account.
2. [Create a branch][branch] for the change you intend to make.
3. Make your changes to your fork.
4. [Send a pull request][pr] from your forkÃ¢â‚¬â„¢s branch to our `main` branch.

Using the web-based interface to make changes is fine too, and will help you
by automatically forking the project and prompting to send a pull request too.

[fork]: https://help.github.com/articles/fork-a-repo/
[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository
[pr]: https://help.github.com/articles/using-pull-requests/

## License

[CC0-1.0](./LICENSE).



================================================
FILE: Actionscript.gitignore
================================================
# Build and Release Folders
bin-debug/
bin-release/
[Oo]bj/
[Bb]in/

# Other files and folders
.settings/

# Executables
*.swf
*.air
*.ipa
*.apk

# Project files, i.e. `.project`, `.actionScriptProperties` and `.flexProperties`
# should NOT be excluded as they contain compiler settings and other important
# information for Eclipse / Flash Builder.



================================================
FILE: Ada.gitignore
================================================
# Object file
*.o

# Ada Library Information
*.ali



================================================
FILE: AdventureGameStudio.gitignore
================================================
# Built things
_Debug/
Compiled/

# AudioCache can be rebuilt from sources
AudioCache/

# Lockfile
_OpenInEditor.lock

# User settings
Game.agf.user
*.crm.user

# Backups
Game.agf.bak
backup_acsprset.spr

# Memory dumps
*.dmp

# Temporary files
# temporarily created during sprite or room background compression
~aclzw.tmp
# temporary, main game data, before getting packed into exe
game28.dta
# temporary build of the game before being moved to Compiled/ folder
*.exe

# Log files
warnings.log



================================================
FILE: Agda.gitignore
================================================
*.agdai
MAlonzo/**



================================================
FILE: AL.gitignore
================================================
### AL ###
#Template for AL projects for Dynamics 365 Business Central
#launch.json folder
.vscode/
#Cache folder
.alcache/
#Symbols folder
.alpackages/
#Snapshots folder
.snapshots/
#Testing Output folder
.output/
#Extension App-file
*.app
#Rapid Application Development File
rad.json
#Translation Base-file
*.g.xlf
#License-file
*.flf
#Test results file
TestResults.xml


================================================
FILE: Android.gitignore
================================================
# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Log/OS Files
*.log

# Android Studio generated files and folders
captures/
.externalNativeBuild/
.cxx/
*.aab
*.apk
output-metadata.json

# IntelliJ
*.iml
.idea/
misc.xml
deploymentTargetDropDown.xml
render.experimental.xml

# Keystore files
*.jks
*.keystore

# Google Services (e.g. APIs or Firebase)
google-services.json

# Android Profiling
*.hprof



================================================
FILE: Angular.gitignore
================================================
# Angular specific
/dist/
/out-tsc/
/tmp/
/coverage/
/e2e/test-output/
/.angular/
.angular/

# Node modules and dependency files
/node_modules/
/package-lock.json
/yarn.lock

# Environment files
/.env

# Angular CLI and build artefacts
/.angular-cli.json
/.ng/

# TypeScript cache
*.tsbuildinfo

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*



================================================
FILE: AppceleratorTitanium.gitignore
================================================
# Build folder and log file
build/
build.log



================================================
FILE: AppEngine.gitignore
================================================
# Google App Engine generated folder
appengine-generated/



================================================
FILE: ArchLinuxPackages.gitignore
================================================
*.tar
*.tar.*
*.jar
*.exe
*.msi
*.deb
*.zip
*.tgz
*.log
*.log.*
*.sig

pkg/
src/



================================================
FILE: Autotools.gitignore
================================================
# http://www.gnu.org/software/automake

Makefile.in
/ar-lib
/mdate-sh
/py-compile
/test-driver
/ylwrap
.deps/
.dirstamp

# http://www.gnu.org/software/autoconf

autom4te.cache
/autoscan.log
/autoscan-*.log
/aclocal.m4
/compile
/config.cache
/config.guess
/config.h.in
/config.log
/config.status
/config.sub
/configure
/configure.scan
/depcomp
/install-sh
/missing
/stamp-h1

# https://www.gnu.org/software/libtool/

/libtool
/ltmain.sh
.libs/

# http://www.gnu.org/software/texinfo

/texinfo.tex

# http://www.gnu.org/software/m4/

m4/libtool.m4
m4/ltoptions.m4
m4/ltsugar.m4
m4/ltversion.m4
m4/lt~obsolete.m4

# Generated Makefile
# (meta build system like autotools,
# can automatically generate from config.status script
# (which is called by configure script))
Makefile



================================================
FILE: Ballerina.gitignore
================================================
# generated files
target/
generated/

# dependencies
Dependencies.toml

# config files
Config.toml
# the config files used for testing, Uncomment the following line if you want to commit the test config files
#!**/tests/Config.toml



================================================
FILE: C++.gitignore
================================================
# Prerequisites
*.d

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Linker files
*.ilk

# Debugger Files
*.pdb

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app

# debug information files
*.dwo



================================================
FILE: C.gitignore
================================================
# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf

# debug information files
*.dwo



================================================
FILE: CakePHP.gitignore
================================================
# CakePHP 3

/vendor/*
/config/app.php

/tmp/cache/models/*
!/tmp/cache/models/empty
/tmp/cache/persistent/*
!/tmp/cache/persistent/empty
/tmp/cache/views/*
!/tmp/cache/views/empty
/tmp/sessions/*
!/tmp/sessions/empty
/tmp/tests/*
!/tmp/tests/empty

/logs/*
!/logs/empty

# CakePHP 2

/app/tmp/*
/app/Config/core.php
/app/Config/database.php
/vendors/*



================================================
FILE: CFWheels.gitignore
================================================
# unpacked plugin folders
plugins/**/*

# files directory where uploads go
files

# DBMigrate plugin: generated SQL
db/sql

# AssetBundler plugin: generated bundles
javascripts/bundles
stylesheets/bundles



================================================
FILE: ChefCookbook.gitignore
================================================
.vagrant
/cookbooks

# Bundler
bin/*
.bundle/*

.kitchen/
.kitchen.local.yml



================================================
FILE: Clojure.gitignore
================================================
Leiningen.gitignore


================================================
FILE: CMake.gitignore
================================================
CMakeLists.txt.user
CMakeCache.txt
CMakeFiles
CMakeScripts
Testing
Makefile
cmake_install.cmake
install_manifest.txt
compile_commands.json
CTestTestfile.cmake
_deps
CMakeUserPresets.json

# CLion
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#cmake-build-*



================================================
FILE: CodeIgniter.gitignore
================================================
*/config/development
*/logs/log-*.php
!*/logs/index.html
*/cache/*
!system/cache/*
!*/cache/index.html
!*/cache/.htaccess

user_guide_src/build/*
user_guide_src/cilexer/build/*
user_guide_src/cilexer/dist/*
user_guide_src/cilexer/pycilexer.egg-info/*

#codeigniter 3
application/logs/*
!application/logs/index.html
!application/logs/.htaccess
/vendor/



================================================
FILE: CommonLisp.gitignore
================================================
*.FASL
*.fasl
*.lisp-temp
*.dfsl
*.pfsl
*.d64fsl
*.p64fsl
*.lx64fsl
*.lx32fsl
*.dx64fsl
*.dx32fsl
*.fx64fsl
*.fx32fsl
*.sx64fsl
*.sx32fsl
*.wx64fsl
*.wx32fsl



================================================
FILE: Composer.gitignore
================================================
composer.phar
/vendor/

# Commit your application's lock file https://getcomposer.org/doc/01-basic-usage.md#commit-your-composer-lock-file-to-version-control
# You may choose to ignore a library lock file http://getcomposer.org/doc/02-libraries.md#lock-file
# composer.lock



================================================
FILE: Concrete5.gitignore
================================================
# ignore the error log and .htaccess and others
error_log
.htaccess

# concrete5 5.6 specific

config/site.php
files/cache/*
files/tmp/*

# concrete5 5.7 specific

# ignore everything but the index.html
/application/files/*
!/application/files/index.html

# ignore updates folder
/updates/*

# ignore sitemap.xml
/sitemap.xml



================================================
FILE: CONTRIBUTING.md
================================================
# Contributing guidelines

WeÃ¢â‚¬â„¢d love you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to *everyone*
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify *one template* per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework) then it's brittle and probably no more
helpful than a simple `ls`. If it's not possible to curate a small set of
useful rules, then the template might not be a good fit for this collection.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the *most common and helpful* templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.



================================================
FILE: Coq.gitignore
================================================
.*.aux
.*.d
*.a
*.cma
*.cmi
*.cmo
*.cmx
*.cmxa
*.cmxs
*.glob
*.ml.d
*.ml4.d
*.mlg.d
*.mli.d
*.mllib.d
*.mlpack.d
*.native
*.o
*.v.d
*.vio
*.vo
*.vok
*.vos
.coq-native
.csdp.cache
.lia.cache
.nia.cache
.nlia.cache
.nra.cache
csdp.cache
lia.cache
nia.cache
nlia.cache
nra.cache
native_compute_profile_*.data

# generated timing files
*.timing.diff
*.v.after-timing
*.v.before-timing
*.v.timing
time-of-build-after.log
time-of-build-before.log
time-of-build-both.log
time-of-build-pretty.log



================================================
FILE: CraftCMS.gitignore
================================================
# Craft 2 Storage (https://craftcms.com/support/craft-storage-gitignore)
# not necessary for Craft 3 (https://github.com/craftcms/craft/issues/26)
/craft/storage/*
!/craft/storage/rebrand



================================================
FILE: CUDA.gitignore
================================================
*.i
*.ii
*.gpu
*.ptx
*.cubin
*.fatbin



================================================
FILE: D.gitignore
================================================
# Compiled Object files
*.o
*.obj

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Compiled Static libraries
*.a
*.lib

# Executables
*.exe

# DUB
.dub
docs.json
__dummy.html
docs/

# Code coverage
*.lst



================================================
FILE: Dart.gitignore
================================================
# See https://www.dartlang.org/guides/libraries/private-files

# Files and directories created by pub
.dart_tool/
.packages
build/
# If you're building an application, you may want to check-in your pubspec.lock
pubspec.lock

# Directory created by dartdoc
# If you don't generate documentation locally you can remove this line.
doc/api/

# dotenv environment variables file
.env*

# Avoid committing generated Javascript files:
*.dart.js
# Produced by the --dump-info flag.
*.info.json
# When generated by dart2js. Don't specify *.js if your
# project includes source files written in JavaScript.
*.js
*.js_
*.js.deps
*.js.map

.flutter-plugins
.flutter-plugins-dependencies



================================================
FILE: Delphi.gitignore
================================================
# Uncomment these types if you want even more clean repository. But be careful.
# It can make harm to an existing project source. Read explanations below.
#
# Resource files are binaries containing manifest, project icon and version info.
# They can not be viewed as text or compared by diff-tools. Consider replacing them with .rc files.
#*.res
#
# Type library file (binary). In old Delphi versions it should be stored.
# Since Delphi 2009 it is produced from .ridl file and can safely be ignored.
#*.tlb
#
# Diagram Portfolio file. Used by the diagram editor up to Delphi 7.
# Uncomment this if you are not using diagrams or use newer Delphi version.
#*.ddp
#
# Visual LiveBindings file. Added in Delphi XE2.
# Uncomment this if you are not using LiveBindings Designer.
#*.vlb
#
# Deployment Manager configuration file for your project. Added in Delphi XE2.
# Uncomment this if it is not mobile development and you do not use remote debug feature.
#*.deployproj
#
# C++ object files produced when C/C++ Output file generation is configured.
# Uncomment this if you are not using external objects (zlib library for example).
#*.obj
#

# Default Delphi compiler directories
# Content of this directories are generated with each Compile/Construct of a project.
# Most of the time, files here have not there place in a code repository.
#Win32/
#Win64/
#OSX64/
#OSXARM64/
#Android/
#Android64/
#iOSDevice64/
#Linux64/

# Delphi compiler-generated binaries (safe to delete)
*.exe
*.dll
*.bpl
*.bpi
*.dcp
*.so
*.apk
*.drc
*.map
*.dres
*.rsm
*.tds
*.dcu
*.lib
*.a
*.o
*.ocx

# Delphi autogenerated files (duplicated info)
*.cfg
*.hpp
*Resource.rc

# Delphi local files (user-specific info)
*.local
*.identcache
*.projdata
*.tvsconfig
*.dsk
*.dsv

# Delphi history and backups
__history/
__recovery/
*.~*

# Castalia statistics file (since XE7 Castalia is distributed with Delphi)
*.stat

# Boss dependency manager vendor folder https://github.com/HashLoad/boss
modules/



================================================
FILE: DM.gitignore
================================================
*.dmb
*.rsc
*.int
*.lk
*.zip



================================================
FILE: Dotnet.gitignore
================================================
## A streamlined .gitignore for modern .NET projects
## including temporary files, build results, and
## files generated by popular .NET tools. If you are
## developing with Visual Studio, the VS .gitignore
## https://github.com/github/gitignore/blob/main/VisualStudio.gitignore
## has more thorough IDE-specific entries.
##
## Get latest from https://github.com/github/gitignore/blob/main/Dotnet.gitignore

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg

# Others
~$*
*~
CodeCoverage/

# MSBuild Binary and Structured Log
*.binlog

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml


================================================
FILE: Drupal.gitignore
================================================
# gitignore template for Drupal 8 projects
#
# earlier versions of Drupal are tracked in `community/PHP/`
#
# follows official upstream conventions:
# https://www.drupal.org/docs/develop/using-composer

# Ignore configuration files that may contain sensitive information
/web/sites/*/*settings*.php
/web/sites/*/*services*.yml

# Ignore paths that may contain user-generated content
/web/sites/*/files
/web/sites/*/public
/web/sites/*/private
/web/sites/*/files-public
/web/sites/*/files-private

# Ignore paths that may contain temporary files
/web/sites/*/translations
/web/sites/*/tmp
/web/sites/*/cache

# Ignore drupal core (if not versioning drupal sources)
/web/vendor
/web/core
/web/modules/README.txt
/web/modules/contrib
/web/profiles/README.txt
/web/profiles/contrib
/web/sites/development.services.yml
/web/sites/example.settings.local.php
/web/sites/example.sites.php
/web/sites/README.txt
/web/themes/README.txt
/web/themes/contrib
/web/.csslintrc
/web/.editorconfig
/web/.eslintignore
/web/.eslintrc.json
/web/.gitattributes
/web/.htaccess
/web/.ht.router.php
/web/autoload.php
/web/composer.json
/web/composer.lock
/web/example.gitignore
/web/index.php
/web/INSTALL.txt
/web/LICENSE.txt
/web/README.txt
/web/robots.txt
/web/update.php
/web/web.config

# Ignore vendor dependencies and scripts
/vendor
/composer.phar
/composer
/robo.phar
/robo
/drush.phar
/drush
/drupal.phar
/drupal



================================================
FILE: Eagle.gitignore
================================================
# Ignore list for Eagle, a PCB layout tool

# Backup files
*.s#?
*.b#?
*.l#?
*.b$?
*.s$?
*.l$?

# Eagle project file
# It contains a serial number and references to the file structure
# on your computer.
# comment the following line if you want to have your project file included.
eagle.epf

# Autorouter files
*.pro
*.job

# CAM files
*.$$$
*.cmp
*.ly2
*.l15
*.sol
*.plc
*.stc
*.sts
*.crc
*.crs

*.dri
*.drl
*.gpi
*.pls
*.ger
*.xln

*.drd
*.drd.*

*.s#*
*.b#*

*.info

*.eps

# file locks introduced since 7.x
*.lck



================================================
FILE: ecu.test.gitignore
================================================
# gitignore template for ecu.test workspaces - by tracetronic https://tracetronic.com
# website: https://www.ecu-test.com
#   * all directories are related to the default directories, please adapt the .gitignore if you use customized directories

# Dynamic workspace settings
#   * We don't recommend to ignore the .workspace directory, because of important
#     * project specific settings
#     * local user settings
.workspace/ETdrive.xml
.workspace/favorites.xml
.workspace/filters.xml
.workspace/generators.xml
.workspace/history.xml
.workspace/parallelExecution.xml
.workspace/signalviewer.xml
.workspace/signalViewerHistory.json
.workspace/signalviewer2layout.xml
.workspace/testeditor.xml
.workspace/tooladapter.xml
.workspace/view.xml
# optional, if your process depends on this file remove exclusion
.workspace/attributeLists.xml
.workspace/interactiveexecution.xml
.workspace/protocol.xml
.workspace/pythonlibrary.xml
# deprecated, support for older versions
.workspace/traceexplorer.xml

# Custom file formats and test dependencies
#  * you can manage your artifacts also with test.guide (https://www.test-guide.info) and reference them via Playbooks
*.arxml
*.a2l
*.dbc
*.hex
*.s19
[tT]estdata
[tT]estdaten

# Test results and test execution related content
#   * Git is not intended to store and provide test results for all iterations
#   * We recommend to use test.guide (https://www.test-guide.info) for the test report management
TestReports

# Report generators and templates
#   * if you want to provide (f.e.) your own report generators exclude the directory here and ignore only the unnecessary subdirectories
Templates

# optional, default for external Python libraries
PyLibs

# Exclude large binary artifacts
#  * you can manage your artifacts also with test.guide (https://www.test-guide.info) and reference them via Playbooks
Offline-FIUs
Offline-Models
Offline-SGBDs
*.exe
*.msi
*.zip
*.7z

# Exclude default and custom temporary directories
Backup_*

# Python bytecode and cache files
__pycache__/
*.py[cod]



================================================
FILE: Elisp.gitignore
================================================
# Compiled
*.elc

# Packaging
.cask/
.eask/
.eldev/
.keg/

# Built distribution
dist/

# Backup files
*~

# Undo-tree save-files
*.~undo-tree



================================================
FILE: Elixir.gitignore
================================================
/_build
/cover
/deps
/doc
/.fetch
erl_crash.dump
*.ez
*.beam
/config/*.secret.exs
.elixir_ls/



================================================
FILE: Elm.gitignore
================================================
# elm-package generated files
elm-stuff
# elm-repl generated files
repl-temp-*



================================================
FILE: EPiServer.gitignore
================================================
######################
## EPiServer Files
######################
*License.config



================================================
FILE: Erlang.gitignore
================================================
.eunit
*.o
*.beam
*.plt
erl_crash.dump
.concrete/DEV_MODE

# rebar 2.x
.rebar
rel/example_project
ebin/*.beam
deps

# rebar 3
.rebar3
_build/
_checkouts/



================================================
FILE: ExpressionEngine.gitignore
================================================
.DS_Store

# Images
images/avatars/
images/captchas/
images/smileys/
images/member_photos/
images/signature_attachments/
images/pm_attachments/

# For security do not publish the following files
system/expressionengine/config/database.php
system/expressionengine/config/config.php

# Caches
sized/
thumbs/
_thumbs/
*/expressionengine/cache/*



================================================
FILE: ExtJs.gitignore
================================================
.architect
bootstrap.css
bootstrap.js
bootstrap.json
bootstrap.jsonp
build/
classic.json
classic.jsonp
ext/
modern.json
modern.jsonp
resources/sass/.sass-cache/
resources/.arch-internal-preview.css
.arch-internal-preview.css



================================================
FILE: Fancy.gitignore
================================================
*.rbc
*.fyc



================================================
FILE: Finale.gitignore
================================================
*.bak
*.db
*.avi
*.pdf
*.ps
*.mid
*.midi
*.mp3
*.aif
*.wav
# Some versions of Finale have a bug and randomly save extra copies of
# the music source as "<Filename> copy.mus"
*copy.mus



================================================
FILE: Firebase.gitignore
================================================
# Firebase build and deployment files
/firebase-debug.log
/firebase-debug.*.log
.firebaserc

# Firebase Hosting
/firebase.json
*.cache
hosting/.cache

# Firebase Functions
/functions/node_modules/
/functions/.env
/functions/package-lock.json

# Firebase Emulators
/firebase-*.zip
/.firebase/
/emulator-ui/

# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment files (local configs)
/.env.*



================================================
FILE: FlaxEngine.gitignore
================================================
# Ignore Flax project files
Binaries/
Cache/
Logs/
Output/
Screenshots/
*.HotReload.*

# Ignore Visual Studio project files (generated locally)
*.csproj
*.sln

# Ignore thumbnails created by Windows
Thumbs.db

# Ignore files built by Visual Studio
*.obj
*.exe
*.pdb
*.user
*.aps
*.pch
*.vspscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.cache
*.ilk
*.log
[Bb]in
[Dd]ebug*/
*.lib
*.sbr
obj/
[Rr]elease*/
_ReSharper*/
[Tt]est[Rr]esult*
.vs/

# Ignore Nuget packages folder
packages/



================================================
FILE: Flutter.gitignore
================================================
# Miscellaneous
*.class
*.lock
*.log
*.pyc
*.swp
.buildlog/
.history



# Flutter repo-specific
/bin/cache/
/bin/internal/bootstrap.bat
/bin/internal/bootstrap.sh
/bin/mingit/
/dev/benchmarks/mega_gallery/
/dev/bots/.recipe_deps
/dev/bots/android_tools/
/dev/devicelab/ABresults*.json
/dev/docs/doc/
/dev/docs/flutter.docs.zip
/dev/docs/lib/
/dev/docs/pubspec.yaml
/dev/integration_tests/**/xcuserdata
/dev/integration_tests/**/Pods
/packages/flutter/coverage/
version
analysis_benchmark.json

# packages file containing multi-root paths
.packages.generated

# Flutter/Dart/Pub related
**/doc/api/
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
**/generated_plugin_registrant.dart
.packages
.pub-preload-cache/
.pub/
build/
flutter_*.png
linked_*.ds
unlinked.ds
unlinked_spec.ds

# Android related
**/android/**/gradle-wrapper.jar
.gradle/
**/android/captures/
**/android/gradlew
**/android/gradlew.bat
**/android/local.properties
**/android/**/GeneratedPluginRegistrant.java
**/android/key.properties
*.jks

# iOS/XCode related
**/ios/**/*.mode1v3
**/ios/**/*.mode2v3
**/ios/**/*.moved-aside
**/ios/**/*.pbxuser
**/ios/**/*.perspectivev3
**/ios/**/*sync/
**/ios/**/.sconsign.dblite
**/ios/**/.tags*
**/ios/**/.vagrant/
**/ios/**/DerivedData/
**/ios/**/Icon?
**/ios/**/Pods/
**/ios/**/.symlinks/
**/ios/**/profile
**/ios/**/xcuserdata
**/ios/.generated/
**/ios/Flutter/.last_build_id
**/ios/Flutter/App.framework
**/ios/Flutter/Flutter.framework
**/ios/Flutter/Flutter.podspec
**/ios/Flutter/Generated.xcconfig
**/ios/Flutter/ephemeral
**/ios/Flutter/app.flx
**/ios/Flutter/app.zip
**/ios/Flutter/flutter_assets/
**/ios/Flutter/flutter_export_environment.sh
**/ios/ServiceDefinitions.json
**/ios/Runner/GeneratedPluginRegistrant.*

# macOS
**/Flutter/ephemeral/
**/Pods/
**/macos/Flutter/GeneratedPluginRegistrant.swift
**/macos/Flutter/ephemeral
**/xcuserdata/

# Windows
**/windows/flutter/generated_plugin_registrant.cc
**/windows/flutter/generated_plugin_registrant.h
**/windows/flutter/generated_plugins.cmake

# Linux
**/linux/flutter/generated_plugin_registrant.cc
**/linux/flutter/generated_plugin_registrant.h
**/linux/flutter/generated_plugins.cmake

# Coverage
coverage/

# Symbols
app.*.symbols

# Exceptions to above rules.
!**/ios/**/default.mode1v3
!**/ios/**/default.mode2v3
!**/ios/**/default.pbxuser
!**/ios/**/default.perspectivev3
!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages
!/dev/ci/**/Gemfile.lock


================================================
FILE: ForceDotCom.gitignore
================================================
.project
.settings
salesforce.schema
Referenced Packages



================================================
FILE: Fortran.gitignore
================================================
C++.gitignore


================================================
FILE: FuelPHP.gitignore
================================================
# the composer package lock file and install directory
# Commit your application's lock file http://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file
# You may choose to ignore a library lock file http://getcomposer.org/doc/02-libraries.md#lock-file
# /composer.lock
/fuel/vendor

# the fuelphp document
/docs/

# you may install these packages with `oil package`.
# http://fuelphp.com/docs/packages/oil/package.html
# /fuel/packages/auth/
# /fuel/packages/email/
# /fuel/packages/oil/
# /fuel/packages/orm/
# /fuel/packages/parser/

# dynamically generated files
/fuel/app/logs/*/*/*
/fuel/app/cache/*/*
/fuel/app/config/crypt.php



================================================
FILE: Gcov.gitignore
================================================
# gcc coverage testing tool files

*.gcno
*.gcda
*.gcov



================================================
FILE: GitBook.gitignore
================================================
# Node rules:
## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

## Dependency directory
## Commenting this out is preferred by some people, see
## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git
node_modules

# Book build output
_book

# eBook build output
*.epub
*.mobi
*.pdf



================================================
FILE: GitHubPages.gitignore
================================================
# This .gitignore is appropriate for repositories deployed to GitHub Pages and using
# a Gemfile as specified at https://github.com/github/pages-gem#conventional

# Basic Jekyll gitignores (synchronize to Jekyll.gitignore)
_site/
.sass-cache/
.jekyll-cache/
.jekyll-metadata

# Additional Ruby/bundler ignore for when you run: bundle install
/vendor

# Specific ignore for GitHub Pages
# GitHub Pages will always use its own deployed version of pages-gem
# This means GitHub Pages will NOT use your Gemfile.lock and therefore it is
# counterproductive to check this file into the repository.
# Details at https://github.com/github/pages-gem/issues/768
Gemfile.lock



================================================
FILE: Gleam.gitignore
================================================
*.beam
*.ez
/build
erl_crash.dump



================================================
FILE: Go.gitignore
================================================
# If you prefer the allow list template instead of the deny list, see community template:
# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore
#
# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib

# Test binary, built with `go test -c`
*.test

# Code coverage profiles and other test artifacts
*.out
coverage.*
*.coverprofile
profile.cov

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work
go.work.sum

# env file
.env

# Editor/IDE
# .idea/
# .vscode/



================================================
FILE: Godot.gitignore
================================================
# Godot 4+ specific ignores
.godot/
.nomedia

# Godot-specific ignores
.import/
export.cfg
export_credentials.cfg
*.tmp

# Imported translations (automatically generated from CSV files)
*.translation

# Mono-specific ignores
.mono/
data_*/
mono_crash.*.json



================================================
FILE: Gradle.gitignore
================================================
.gradle
**/build/
!**/src/**/build/

# Ignore Gradle GUI config
gradle-app.setting

# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)
!gradle-wrapper.jar

# Avoid ignore Gradle wrappper properties
!gradle-wrapper.properties

# Cache of project
.gradletasknamecache

# Eclipse Gradle plugin generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath



================================================
FILE: Grails.gitignore
================================================
# .gitignore for Grails 1.2 and 1.3
# Although this should work for most versions of grails, it is
# suggested that you use the "grails integrate-with --git" command
# to generate your .gitignore file.

# web application files
/web-app/WEB-INF/classes

# default HSQL database files for production mode
/prodDb.*

# general HSQL database files
*Db.properties
*Db.script

# logs
/stacktrace.log
/test/reports
/logs

# project release file
/*.war

# plugin release files
/*.zip
/plugin.xml

# older plugin install locations
/plugins
/web-app/plugins

# "temporary" build files
/target



================================================
FILE: GWT.gitignore
================================================
*.class

# Package Files #
*.jar
*.war

# gwt caches and compiled units #
war/gwt_bree/
gwt-unitCache/

# boilerplate generated classes #
.apt_generated/

# more caches and things from deploy #
war/WEB-INF/deploy/
war/WEB-INF/classes/

#compilation logs
.gwt/

#gwt junit compilation files
www-test/

#old GWT (1.5) created this dir
.gwt-tmp/



================================================
FILE: Haskell.gitignore
================================================
dist
dist-*
cabal-dev
*.o
*.hi
*.hie
*.chi
*.chs.h
*.dyn_o
*.dyn_hi
.hpc
.hsenv
.cabal-sandbox/
cabal.sandbox.config
*.prof
*.aux
*.hp
*.eventlog
.stack-work/
cabal.project.local
cabal.project.local~
.HTF/
.ghc.environment.*



================================================
FILE: Haxe.gitignore
================================================
.haxelib/
.haxelsp/recording/
dump/



================================================
FILE: HIP.gitignore
================================================
# HIP.gitignore
# GitHub gitignore template for AMD HIP (ROCm) projects
#
# Reference:
#   Official AMD ROCm HIP .gitignore: https://github.com/ROCm/hip/blob/amd-staging/.gitignore

# 1. Build directories and files
/build/                          # common build directory
/CMakeFiles/                     # CMake internal files
/CMakeCache.txt                  # CMake cache file
/Makefile                        # autogenerated Makefile
/cmake_install.cmake             # install script
/install_manifest.txt            # install manifest list
*.ninja-dep                      # Ninja dependency files
*.ninja_log                      # Ninja log files
meson-logs/                      # Meson log directory

# 2. Compilation outputs and intermediates
*.o                              # object files
*.obj                            # Windows object files
*.so                             # shared libraries
*.a                              # static librarie
*.d                              # dependency files
*.gch                            # precompiled headers
*.ii                             # preprocessed output
*.ii.cpp                         # C++ preprocessed output
*.out                            # generic executable outputs
*.exe                            # Windows executables

# 3. HIP/ROCm specific binaries and intermediates
*.hsaco                          # ROCm compiled binary
*.s                              # assembly output
*.kernels.cpp                    # autogenerated kernel sources
*.hip.cpp.*                      # hipcc intermediate outputs

# 4. Official sample binaries and tutorial outputs
bin/hipInfo                      # sample binary
bin/hipBusBandwidth              # sample binary
bin/hipDispatchLatency           # sample binary
bin/hipify-clang                 # sample tool
samples/**/*.out                 # tutorial outputs
samples/**/*.code                # ISA/code dumps
samples/**/*.hsaco               # compiled binaries
samples/**/*.co                  # kernel code outputs

# 5. Tags, logs and test outputs
tags                             # ctags index
*.log                            # log files
/tests_output/                   # custom test output directory
/samples_output/                 # custom sample output directory



================================================
FILE: IAR.gitignore
================================================
# Compiled binaries
*.o
*.bin
*.elf
*.hex
*.map
*.out
*.obj

# Trash
*.bak
thumbs.db
*.~*

# IAR Settings
**/settings/*.crun
**/settings/*.dbgdt
**/settings/*.cspy
**/settings/*.cspy.*
**/settings/*.xcl
**/settings/*.dni
**/settings/*.wsdt
**/settings/*.wspos

# IAR Debug Exe
**/Exe/*.sim

# IAR Debug Obj
**/Obj/*.pbd
**/Obj/*.pbd.*
**/Obj/*.pbi
**/Obj/*.pbi.*

# IAR project "Debug" directory
Debug/

# IAR project "Release" directory
Release/

# IAR project settings directory
settings/

# IAR backup files
Backup*

# IAR .dep files
*.dep


================================================
FILE: Idris.gitignore
================================================
# Idris 2
*.ttc
*.ttm

# Idris 1
*.ibc
*.o



================================================
FILE: IGORPro.gitignore
================================================
# Avoid including Experiment files: they can be created and edited locally to test the ipf files
*.pxp
*.pxt
*.uxp
*.uxt



================================================
FILE: Java.gitignore
================================================
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*



================================================
FILE: JBoss.gitignore
================================================
jboss/server/all/deploy/project.ext
jboss/server/default/deploy/project.ext
jboss/server/minimal/deploy/project.ext
jboss/server/all/log/*.log
jboss/server/all/tmp/**/*
jboss/server/all/data/**/*
jboss/server/all/work/**/*
jboss/server/default/log/*.log
jboss/server/default/tmp/**/*
jboss/server/default/data/**/*
jboss/server/default/work/**/*
jboss/server/minimal/log/*.log
jboss/server/minimal/tmp/**/*
jboss/server/minimal/data/**/*
jboss/server/minimal/work/**/*

# deployed package files #

*.DEPLOYED



================================================
FILE: Jekyll.gitignore
================================================
_site/
.sass-cache/
.jekyll-cache/
.jekyll-metadata
# Ignore folders generated by Bundler
.bundle/
vendor/



================================================
FILE: JENKINS_HOME.gitignore
================================================
# Learn more about Jenkins and JENKINS_HOME directory for which this file is
# intended.
#
#  http://jenkins-ci.org/
#  https://wiki.jenkins-ci.org/display/JENKINS/Administering+Jenkins
#
# Note: secret.key is purposefully not tracked by git. This should be backed up
# separately because configs may contain secrets which were encrypted using the
# secret.key.  To back up secrets use 'tar -czf /tmp/secrets.tgz secret*' and
# save the file separate from your repository.  If you want secrets backed up
# with configuration, then see the bottom of this file for an example.

# Ignore all JENKINS_HOME except jobs directory, root xml config, and
# .gitignore file.
/*
!/jobs
!/.gitignore
!/*.xml

# Ignore all files in jobs subdirectories except for folders.
# Note: git doesn't track folders, only file content.
jobs/**
!jobs/**/

# Uncomment the following line to save next build numbers with config.

#!jobs/**/nextBuildNumber

# For performance reasons, we want to ignore builds in Jenkins jobs because it
# contains many tiny files on large installations.  This can impact git
# performance when running even basic commands like 'git status'.
builds
indexing

# Exclude only config.xml files in repository subdirectories.
!config.xml

# Don't track workspaces (when users build on the master).
jobs/**/*workspace

# Security warning: If secrets are included with your configuration, then an
# adversary will be able to decrypt all encrypted secrets within Jenkins
# config.  Including secrets is a bad practice, but the example is included in
# case someone still wants it for convenience.  Uncomment the following line to
# include secrets for decryption with repository configuration in Git.

#!/secret*

# As a result, only Jenkins settings and job config.xml files in JENKINS_HOME
# will be tracked by git.



================================================
FILE: Joomla.gitignore
================================================
/.htaccess
/administrator/cache/*
/administrator/components/com_actionlogs/*
/administrator/components/com_admin/*
/administrator/components/com_ajax/*
/administrator/components/com_associations/*
/administrator/components/com_banners/*
/administrator/components/com_cache/*
/administrator/components/com_categories/*
/administrator/components/com_checkin/*
/administrator/components/com_config/*
/administrator/components/com_contact/*
/administrator/components/com_content/*
/administrator/components/com_contenthistory/*
/administrator/components/com_cpanel/*
/administrator/components/com_fields/*
/administrator/components/com_finder/*
/administrator/components/com_installer/*
/administrator/components/com_joomlaupdate/*
/administrator/components/com_languages/*
/administrator/components/com_login/*
/administrator/components/com_media/*
/administrator/components/com_menus/*
/administrator/components/com_messages/*
/administrator/components/com_modules/*
/administrator/components/com_newsfeeds/*
/administrator/components/com_plugins/*
/administrator/components/com_postinstall/*
/administrator/components/com_privacy/*
/administrator/components/com_redirect/*
/administrator/components/com_search/*
/administrator/components/com_tags/*
/administrator/components/com_templates/*
/administrator/components/com_users/*
/administrator/help/*
/administrator/includes/*
/administrator/index.php
/administrator/language/en-GB/en-GB.com_actionlogs.ini
/administrator/language/en-GB/en-GB.com_actionlogs.sys.ini
/administrator/language/en-GB/en-GB.com_admin.ini
/administrator/language/en-GB/en-GB.com_admin.sys.ini
/administrator/language/en-GB/en-GB.com_ajax.ini
/administrator/language/en-GB/en-GB.com_ajax.sys.ini
/administrator/language/en-GB/en-GB.com_associations.ini
/administrator/language/en-GB/en-GB.com_associations.sys.ini
/administrator/language/en-GB/en-GB.com_banners.ini
/administrator/language/en-GB/en-GB.com_banners.sys.ini
/administrator/language/en-GB/en-GB.com_cache.ini
/administrator/language/en-GB/en-GB.com_cache.sys.ini
/administrator/language/en-GB/en-GB.com_categories.ini
/administrator/language/en-GB/en-GB.com_categories.sys.ini
/administrator/language/en-GB/en-GB.com_checkin.ini
/administrator/language/en-GB/en-GB.com_checkin.sys.ini
/administrator/language/en-GB/en-GB.com_config.ini
/administrator/language/en-GB/en-GB.com_config.sys.ini
/administrator/language/en-GB/en-GB.com_contact.ini
/administrator/language/en-GB/en-GB.com_contact.sys.ini
/administrator/language/en-GB/en-GB.com_content.ini
/administrator/language/en-GB/en-GB.com_content.sys.ini
/administrator/language/en-GB/en-GB.com_contenthistory.ini
/administrator/language/en-GB/en-GB.com_contenthistory.sys.ini
/administrator/language/en-GB/en-GB.com_cpanel.ini
/administrator/language/en-GB/en-GB.com_cpanel.sys.ini
/administrator/language/en-GB/en-GB.com_fields.ini
/administrator/language/en-GB/en-GB.com_fields.sys.ini
/administrator/language/en-GB/en-GB.com_finder.ini
/administrator/language/en-GB/en-GB.com_finder.sys.ini
/administrator/language/en-GB/en-GB.com_installer.ini
/administrator/language/en-GB/en-GB.com_installer.sys.ini
/administrator/language/en-GB/en-GB.com_joomlaupdate.ini
/administrator/language/en-GB/en-GB.com_joomlaupdate.sys.ini
/administrator/language/en-GB/en-GB.com_languages.ini
/administrator/language/en-GB/en-GB.com_languages.sys.ini
/administrator/language/en-GB/en-GB.com_login.ini
/administrator/language/en-GB/en-GB.com_login.sys.ini
/administrator/language/en-GB/en-GB.com_mailto.sys.ini
/administrator/language/en-GB/en-GB.com_media.ini
/administrator/language/en-GB/en-GB.com_media.sys.ini
/administrator/language/en-GB/en-GB.com_menus.ini
/administrator/language/en-GB/en-GB.com_menus.sys.ini
/administrator/language/en-GB/en-GB.com_messages.ini
/administrator/language/en-GB/en-GB.com_messages.sys.ini
/administrator/language/en-GB/en-GB.com_modules.ini
/administrator/language/en-GB/en-GB.com_modules.sys.ini
/administrator/language/en-GB/en-GB.com_newsfeeds.ini
/administrator/language/en-GB/en-GB.com_newsfeeds.sys.ini
/administrator/language/en-GB/en-GB.com_plugins.ini
/administrator/language/en-GB/en-GB.com_plugins.sys.ini
/administrator/language/en-GB/en-GB.com_postinstall.ini
/administrator/language/en-GB/en-GB.com_postinstall.sys.ini
/administrator/language/en-GB/en-GB.com_privacy.ini
/administrator/language/en-GB/en-GB.com_privacy.sys.ini
/administrator/language/en-GB/en-GB.com_redirect.ini
/administrator/language/en-GB/en-GB.com_redirect.sys.ini
/administrator/language/en-GB/en-GB.com_search.ini
/administrator/language/en-GB/en-GB.com_search.sys.ini
/administrator/language/en-GB/en-GB.com_tags.ini
/administrator/language/en-GB/en-GB.com_tags.sys.ini
/administrator/language/en-GB/en-GB.com_templates.ini
/administrator/language/en-GB/en-GB.com_templates.sys.ini
/administrator/language/en-GB/en-GB.com_users.ini
/administrator/language/en-GB/en-GB.com_users.sys.ini
/administrator/language/en-GB/en-GB.com_weblinks.ini
/administrator/language/en-GB/en-GB.com_weblinks.sys.ini
/administrator/language/en-GB/en-GB.com_wrapper.ini
/administrator/language/en-GB/en-GB.com_wrapper.sys.ini
/administrator/language/en-GB/en-GB.ini
/administrator/language/en-GB/en-GB.lib_joomla.ini
/administrator/language/en-GB/en-GB.localise.php
/administrator/language/en-GB/en-GB.mod_custom.ini
/administrator/language/en-GB/en-GB.mod_custom.sys.ini
/administrator/language/en-GB/en-GB.mod_feed.ini
/administrator/language/en-GB/en-GB.mod_feed.sys.ini
/administrator/language/en-GB/en-GB.mod_latest.ini
/administrator/language/en-GB/en-GB.mod_latest.sys.ini
/administrator/language/en-GB/en-GB.mod_latestactions.ini
/administrator/language/en-GB/en-GB.mod_latestactions.sys.ini
/administrator/language/en-GB/en-GB.mod_logged.ini
/administrator/language/en-GB/en-GB.mod_logged.sys.ini
/administrator/language/en-GB/en-GB.mod_login.ini
/administrator/language/en-GB/en-GB.mod_login.sys.ini
/administrator/language/en-GB/en-GB.mod_menu.ini
/administrator/language/en-GB/en-GB.mod_menu.sys.ini
/administrator/language/en-GB/en-GB.mod_multilangstatus.ini
/administrator/language/en-GB/en-GB.mod_multilangstatus.sys.ini
/administrator/language/en-GB/en-GB.mod_online.ini
/administrator/language/en-GB/en-GB.mod_online.sys.ini
/administrator/language/en-GB/en-GB.mod_popular.ini
/administrator/language/en-GB/en-GB.mod_popular.sys.ini
/administrator/language/en-GB/en-GB.mod_privacy_dashboard.ini
/administrator/language/en-GB/en-GB.mod_privacy_dashboard.sys.ini
/administrator/language/en-GB/en-GB.mod_quickicon.ini
/administrator/language/en-GB/en-GB.mod_quickicon.sys.ini
/administrator/language/en-GB/en-GB.mod_sampledata.ini
/administrator/language/en-GB/en-GB.mod_sampledata.sys.ini
/administrator/language/en-GB/en-GB.mod_stats_admin.ini
/administrator/language/en-GB/en-GB.mod_stats_admin.sys.ini
/administrator/language/en-GB/en-GB.mod_status.ini
/administrator/language/en-GB/en-GB.mod_status.sys.ini
/administrator/language/en-GB/en-GB.mod_submenu.ini
/administrator/language/en-GB/en-GB.mod_submenu.sys.ini
/administrator/language/en-GB/en-GB.mod_title.ini
/administrator/language/en-GB/en-GB.mod_title.sys.ini
/administrator/language/en-GB/en-GB.mod_toolbar.ini
/administrator/language/en-GB/en-GB.mod_toolbar.sys.ini
/administrator/language/en-GB/en-GB.mod_unread.ini
/administrator/language/en-GB/en-GB.mod_unread.sys.ini
/administrator/language/en-GB/en-GB.mod_version.ini
/administrator/language/en-GB/en-GB.mod_version.sys.ini
/administrator/language/en-GB/en-GB.plg_actionlog_joomla.ini
/administrator/language/en-GB/en-GB.plg_actionlog_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_cookie.ini
/administrator/language/en-GB/en-GB.plg_authentication_cookie.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_example.ini
/administrator/language/en-GB/en-GB.plg_authentication_example.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_gmail.ini
/administrator/language/en-GB/en-GB.plg_authentication_gmail.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_joomla.ini
/administrator/language/en-GB/en-GB.plg_authentication_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_authentication_ldap.ini
/administrator/language/en-GB/en-GB.plg_authentication_ldap.sys.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha.sys.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha_invisible.ini
/administrator/language/en-GB/en-GB.plg_captcha_recaptcha_invisible.sys.ini
/administrator/language/en-GB/en-GB.plg_content_confirmconsent.ini
/administrator/language/en-GB/en-GB.plg_content_confirmconsent.sys.ini
/administrator/language/en-GB/en-GB.plg_content_contact.ini
/administrator/language/en-GB/en-GB.plg_content_contact.sys.ini
/administrator/language/en-GB/en-GB.plg_content_emailcloak.ini
/administrator/language/en-GB/en-GB.plg_content_emailcloak.sys.ini
/administrator/language/en-GB/en-GB.plg_content_fields.ini
/administrator/language/en-GB/en-GB.plg_content_fields.sys.ini
/administrator/language/en-GB/en-GB.plg_content_finder.ini
/administrator/language/en-GB/en-GB.plg_content_finder.sys.ini
/administrator/language/en-GB/en-GB.plg_content_geshi.ini
/administrator/language/en-GB/en-GB.plg_content_geshi.sys.ini
/administrator/language/en-GB/en-GB.plg_content_joomla.ini
/administrator/language/en-GB/en-GB.plg_content_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_content_loadmodule.ini
/administrator/language/en-GB/en-GB.plg_content_loadmodule.sys.ini
/administrator/language/en-GB/en-GB.plg_content_pagebreak.ini
/administrator/language/en-GB/en-GB.plg_content_pagebreak.sys.ini
/administrator/language/en-GB/en-GB.plg_content_pagenavigation.ini
/administrator/language/en-GB/en-GB.plg_content_pagenavigation.sys.ini
/administrator/language/en-GB/en-GB.plg_content_vote.ini
/administrator/language/en-GB/en-GB.plg_content_vote.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_article.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_article.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_contact.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_contact.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_fields.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_fields.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_image.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_image.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_menu.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_menu.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_module.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_module.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_pagebreak.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_pagebreak.sys.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_readmore.ini
/administrator/language/en-GB/en-GB.plg_editors-xtd_readmore.sys.ini
/administrator/language/en-GB/en-GB.plg_editors_codemirror.ini
/administrator/language/en-GB/en-GB.plg_editors_codemirror.sys.ini
/administrator/language/en-GB/en-GB.plg_editors_none.ini
/administrator/language/en-GB/en-GB.plg_editors_none.sys.ini
/administrator/language/en-GB/en-GB.plg_editors_tinymce.ini
/administrator/language/en-GB/en-GB.plg_editors_tinymce.sys.ini
/administrator/language/en-GB/en-GB.plg_extension_joomla.ini
/administrator/language/en-GB/en-GB.plg_extension_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_calendar.ini
/administrator/language/en-GB/en-GB.plg_fields_calendar.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_checkboxes.ini
/administrator/language/en-GB/en-GB.plg_fields_checkboxes.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_color.ini
/administrator/language/en-GB/en-GB.plg_fields_color.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_editor.ini
/administrator/language/en-GB/en-GB.plg_fields_editor.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_image.ini
/administrator/language/en-GB/en-GB.plg_fields_image.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_imagelist.ini
/administrator/language/en-GB/en-GB.plg_fields_imagelist.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_integer.ini
/administrator/language/en-GB/en-GB.plg_fields_integer.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_list.ini
/administrator/language/en-GB/en-GB.plg_fields_list.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_media.ini
/administrator/language/en-GB/en-GB.plg_fields_media.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_radio.ini
/administrator/language/en-GB/en-GB.plg_fields_radio.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_repeatable.ini
/administrator/language/en-GB/en-GB.plg_fields_repeatable.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_sql.ini
/administrator/language/en-GB/en-GB.plg_fields_sql.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_text.ini
/administrator/language/en-GB/en-GB.plg_fields_text.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_textarea.ini
/administrator/language/en-GB/en-GB.plg_fields_textarea.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_url.ini
/administrator/language/en-GB/en-GB.plg_fields_url.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_user.ini
/administrator/language/en-GB/en-GB.plg_fields_user.sys.ini
/administrator/language/en-GB/en-GB.plg_fields_usergrouplist.ini
/administrator/language/en-GB/en-GB.plg_fields_usergrouplist.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_categories.ini
/administrator/language/en-GB/en-GB.plg_finder_categories.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_contacts.ini
/administrator/language/en-GB/en-GB.plg_finder_contacts.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_content.ini
/administrator/language/en-GB/en-GB.plg_finder_content.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_newsfeeds.ini
/administrator/language/en-GB/en-GB.plg_finder_newsfeeds.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_tags.ini
/administrator/language/en-GB/en-GB.plg_finder_tags.sys.ini
/administrator/language/en-GB/en-GB.plg_finder_weblinks.ini
/administrator/language/en-GB/en-GB.plg_finder_weblinks.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_folderinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_folderinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_packageinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_packageinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_urlinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_urlinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_installer_webinstaller.ini
/administrator/language/en-GB/en-GB.plg_installer_webinstaller.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_actionlogs.ini
/administrator/language/en-GB/en-GB.plg_privacy_actionlogs.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_consents.ini
/administrator/language/en-GB/en-GB.plg_privacy_consents.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_contact.ini
/administrator/language/en-GB/en-GB.plg_privacy_contact.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_content.ini
/administrator/language/en-GB/en-GB.plg_privacy_content.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_message.ini
/administrator/language/en-GB/en-GB.plg_privacy_message.sys.ini
/administrator/language/en-GB/en-GB.plg_privacy_user.ini
/administrator/language/en-GB/en-GB.plg_privacy_user.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_extensionupdate.ini
/administrator/language/en-GB/en-GB.plg_quickicon_extensionupdate.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_joomlaupdate.ini
/administrator/language/en-GB/en-GB.plg_quickicon_joomlaupdate.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_phpversioncheck.ini
/administrator/language/en-GB/en-GB.plg_quickicon_phpversioncheck.sys.ini
/administrator/language/en-GB/en-GB.plg_quickicon_privacycheck.ini
/administrator/language/en-GB/en-GB.plg_quickicon_privacycheck.sys.ini
/administrator/language/en-GB/en-GB.plg_sampledata_blog.ini
/administrator/language/en-GB/en-GB.plg_sampledata_blog.sys.ini
/administrator/language/en-GB/en-GB.plg_search_categories.ini
/administrator/language/en-GB/en-GB.plg_search_categories.sys.ini
/administrator/language/en-GB/en-GB.plg_search_contacts.ini
/administrator/language/en-GB/en-GB.plg_search_contacts.sys.ini
/administrator/language/en-GB/en-GB.plg_search_content.ini
/administrator/language/en-GB/en-GB.plg_search_content.sys.ini
/administrator/language/en-GB/en-GB.plg_search_newsfeeds.ini
/administrator/language/en-GB/en-GB.plg_search_newsfeeds.sys.ini
/administrator/language/en-GB/en-GB.plg_search_tags.ini
/administrator/language/en-GB/en-GB.plg_search_tags.sys.ini
/administrator/language/en-GB/en-GB.plg_search_weblinks.ini
/administrator/language/en-GB/en-GB.plg_search_weblinks.sys.ini
/administrator/language/en-GB/en-GB.plg_system_actionlogs.ini
/administrator/language/en-GB/en-GB.plg_system_actionlogs.sys.ini
/administrator/language/en-GB/en-GB.plg_system_cache.ini
/administrator/language/en-GB/en-GB.plg_system_cache.sys.ini
/administrator/language/en-GB/en-GB.plg_system_debug.ini
/administrator/language/en-GB/en-GB.plg_system_debug.sys.ini
/administrator/language/en-GB/en-GB.plg_system_fields.ini
/administrator/language/en-GB/en-GB.plg_system_fields.sys.ini
/administrator/language/en-GB/en-GB.plg_system_highlight.ini
/administrator/language/en-GB/en-GB.plg_system_highlight.sys.ini
/administrator/language/en-GB/en-GB.plg_system_languagecode.ini
/administrator/language/en-GB/en-GB.plg_system_languagecode.sys.ini
/administrator/language/en-GB/en-GB.plg_system_languagefilter.ini
/administrator/language/en-GB/en-GB.plg_system_languagefilter.sys.ini
/administrator/language/en-GB/en-GB.plg_system_log.ini
/administrator/language/en-GB/en-GB.plg_system_log.sys.ini
/administrator/language/en-GB/en-GB.plg_system_logout.ini
/administrator/language/en-GB/en-GB.plg_system_logout.sys.ini
/administrator/language/en-GB/en-GB.plg_system_logrotation.ini
/administrator/language/en-GB/en-GB.plg_system_logrotation.sys.ini
/administrator/language/en-GB/en-GB.plg_system_p3p.ini
/administrator/language/en-GB/en-GB.plg_system_p3p.sys.ini
/administrator/language/en-GB/en-GB.plg_system_privacyconsent.ini
/administrator/language/en-GB/en-GB.plg_system_privacyconsent.sys.ini
/administrator/language/en-GB/en-GB.plg_system_redirect.ini
/administrator/language/en-GB/en-GB.plg_system_redirect.sys.ini
/administrator/language/en-GB/en-GB.plg_system_remember.ini
/administrator/language/en-GB/en-GB.plg_system_remember.sys.ini
/administrator/language/en-GB/en-GB.plg_system_sef.ini
/administrator/language/en-GB/en-GB.plg_system_sef.sys.ini
/administrator/language/en-GB/en-GB.plg_system_sessiongc.ini
/administrator/language/en-GB/en-GB.plg_system_sessiongc.sys.ini
/administrator/language/en-GB/en-GB.plg_system_stats.ini
/administrator/language/en-GB/en-GB.plg_system_stats.sys.ini
/administrator/language/en-GB/en-GB.plg_system_updatenotification.ini
/administrator/language/en-GB/en-GB.plg_system_updatenotification.sys.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_totp.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_totp.sys.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_yubikey.ini
/administrator/language/en-GB/en-GB.plg_twofactorauth_yubikey.sys.ini
/administrator/language/en-GB/en-GB.plg_user_contactcreator.ini
/administrator/language/en-GB/en-GB.plg_user_contactcreator.sys.ini
/administrator/language/en-GB/en-GB.plg_user_joomla.ini
/administrator/language/en-GB/en-GB.plg_user_joomla.sys.ini
/administrator/language/en-GB/en-GB.plg_user_profile.ini
/administrator/language/en-GB/en-GB.plg_user_profile.sys.ini
/administrator/language/en-GB/en-GB.plg_user_terms.ini
/administrator/language/en-GB/en-GB.plg_user_terms.sys.ini
/administrator/language/en-GB/en-GB.tpl_hathor.ini
/administrator/language/en-GB/en-GB.tpl_hathor.sys.ini
/administrator/language/en-GB/en-GB.tpl_isis.ini
/administrator/language/en-GB/en-GB.tpl_isis.sys.ini
/administrator/language/en-GB/en-GB.xml
/administrator/language/en-GB/install.xml
/administrator/language/overrides/*
/administrator/language/index.html
/administrator/logs/*
/administrator/manifests/files/joomla.xml
/administrator/manifests/libraries/fof.xml
/administrator/manifests/libraries/idna_convert.xml
/administrator/manifests/libraries/joomla.xml
/administrator/manifests/libraries/phpass.xml
/administrator/manifests/libraries/phputf8.xml
/administrator/manifests/packages/pkg_en-GB.xml
/administrator/manifests/packages/index.html
/administrator/modules/mod_custom/*
/administrator/modules/mod_feed/*
/administrator/modules/mod_latest/*
/administrator/modules/mod_latestactions/*
/administrator/modules/mod_logged/*
/administrator/modules/mod_login/*
/administrator/modules/mod_menu/*
/administrator/modules/mod_multilangstatus/*
/administrator/modules/mod_online/*
/administrator/modules/mod_popular/*
/administrator/modules/mod_privacy_dashboard/*
/administrator/modules/mod_quickicon/*
/administrator/modules/mod_sampledata/*
/administrator/modules/mod_stats_admin/*
/administrator/modules/mod_status/*
/administrator/modules/mod_submenu/*
/administrator/modules/mod_title/*
/administrator/modules/mod_toolbar/*
/administrator/modules/mod_unread/*
/administrator/modules/mod_version/*
/administrator/templates/hathor/*
/administrator/templates/isis/*
/administrator/templates/system/*
/bin/*
/cache/*
/cli/*
/components/com_ajax/*
/components/com_banners/*
/components/com_config/*
/components/com_contact/*
/components/com_content/*
/components/com_contenthistory/*
/components/com_fields/*
/components/com_finder/*
/components/com_mailto/*
/components/com_media/*
/components/com_menus/*
/components/com_modules/*
/components/com_newsfeeds/*
/components/com_privacy/*
/components/com_search/*
/components/com_tags/*
/components/com_users/*
/components/com_wrapper/*
/components/index.html
/images/banners/*
/images/headers/*
/images/sampledata/*
/images/index.html
/images/joomla*
/images/powered_by.png
/includes/*
/installation/*
/language/en-GB/en-GB.com_ajax.ini
/language/en-GB/en-GB.com_config.ini
/language/en-GB/en-GB.com_contact.ini
/language/en-GB/en-GB.com_content.ini
/language/en-GB/en-GB.com_finder.ini
/language/en-GB/en-GB.com_mailto.ini
/language/en-GB/en-GB.com_media.ini
/language/en-GB/en-GB.com_messages.ini
/language/en-GB/en-GB.com_newsfeeds.ini
/language/en-GB/en-GB.com_privacy.ini
/language/en-GB/en-GB.com_search.ini
/language/en-GB/en-GB.com_tags.ini
/language/en-GB/en-GB.com_users.ini
/language/en-GB/en-GB.com_weblinks.ini
/language/en-GB/en-GB.com_wrapper.ini
/language/en-GB/en-GB.files_joomla.sys.ini
/language/en-GB/en-GB.finder_cli.ini
/language/en-GB/en-GB.ini
/language/en-GB/en-GB.lib_fof.ini
/language/en-GB/en-GB.lib_fof.sys.ini
/language/en-GB/en-GB.lib_idna_convert.sys.ini
/language/en-GB/en-GB.lib_joomla.ini
/language/en-GB/en-GB.lib_joomla.sys.ini
/language/en-GB/en-GB.lib_phpass.sys.ini
/language/en-GB/en-GB.lib_phpmailer.sys.ini
/language/en-GB/en-GB.lib_phputf8.sys.ini
/language/en-GB/en-GB.lib_simplepie.sys.ini
/language/en-GB/en-GB.localise.php
/language/en-GB/en-GB.mod_articles_archive.ini
/language/en-GB/en-GB.mod_articles_archive.sys.ini
/language/en-GB/en-GB.mod_articles_categories.ini
/language/en-GB/en-GB.mod_articles_categories.sys.ini
/language/en-GB/en-GB.mod_articles_category.ini
/language/en-GB/en-GB.mod_articles_category.sys.ini
/language/en-GB/en-GB.mod_articles_latest.ini
/language/en-GB/en-GB.mod_articles_latest.sys.ini
/language/en-GB/en-GB.mod_articles_news.ini
/language/en-GB/en-GB.mod_articles_news.sys.ini
/language/en-GB/en-GB.mod_articles_popular.ini
/language/en-GB/en-GB.mod_articles_popular.sys.ini
/language/en-GB/en-GB.mod_banners.ini
/language/en-GB/en-GB.mod_banners.sys.ini
/language/en-GB/en-GB.mod_breadcrumbs.ini
/language/en-GB/en-GB.mod_breadcrumbs.sys.ini
/language/en-GB/en-GB.mod_custom.ini
/language/en-GB/en-GB.mod_custom.sys.ini
/language/en-GB/en-GB.mod_feed.ini
/language/en-GB/en-GB.mod_feed.sys.ini
/language/en-GB/en-GB.mod_finder.ini
/language/en-GB/en-GB.mod_finder.sys.ini
/language/en-GB/en-GB.mod_footer.ini
/language/en-GB/en-GB.mod_footer.sys.ini
/language/en-GB/en-GB.mod_languages.ini
/language/en-GB/en-GB.mod_languages.sys.ini
/language/en-GB/en-GB.mod_login.ini
/language/en-GB/en-GB.mod_login.sys.ini
/language/en-GB/en-GB.mod_menu.ini
/language/en-GB/en-GB.mod_menu.sys.ini
/language/en-GB/en-GB.mod_random_image.ini
/language/en-GB/en-GB.mod_random_image.sys.ini
/language/en-GB/en-GB.mod_related_items.ini
/language/en-GB/en-GB.mod_related_items.sys.ini
/language/en-GB/en-GB.mod_search.ini
/language/en-GB/en-GB.mod_search.sys.ini
/language/en-GB/en-GB.mod_stats.ini
/language/en-GB/en-GB.mod_stats.sys.ini
/language/en-GB/en-GB.mod_syndicate.ini
/language/en-GB/en-GB.mod_syndicate.sys.ini
/language/en-GB/en-GB.mod_tags_popular.ini
/language/en-GB/en-GB.mod_tags_popular.sys.ini
/language/en-GB/en-GB.mod_tags_similar.ini
/language/en-GB/en-GB.mod_tags_similar.sys.ini
/language/en-GB/en-GB.mod_users_latest.ini
/language/en-GB/en-GB.mod_users_latest.sys.ini
/language/en-GB/en-GB.mod_weblinks.ini
/language/en-GB/en-GB.mod_weblinks.sys.ini
/language/en-GB/en-GB.mod_whosonline.ini
/language/en-GB/en-GB.mod_whosonline.sys.ini
/language/en-GB/en-GB.mod_wrapper.ini
/language/en-GB/en-GB.mod_wrapper.sys.ini
/language/en-GB/en-GB.tpl_atomic.ini
/language/en-GB/en-GB.tpl_atomic.sys.ini
/language/en-GB/en-GB.tpl_beez3.ini
/language/en-GB/en-GB.tpl_beez3.sys.ini
/language/en-GB/en-GB.tpl_beez5.ini
/language/en-GB/en-GB.tpl_beez5.sys.ini
/language/en-GB/en-GB.tpl_beez_20.ini
/language/en-GB/en-GB.tpl_beez_20.sys.ini
/language/en-GB/en-GB.tpl_protostar.ini
/language/en-GB/en-GB.tpl_protostar.sys.ini
/language/en-GB/en-GB.xml
/language/en-GB/install.xml
/language/overrides/*
/language/index.html
/layouts/joomla/*
/layouts/libraries/*
/layouts/plugins/*
/layouts/index.html
/libraries/cms/*
/libraries/fof/*
/libraries/idna_convert/*
/libraries/joomla/*
/libraries/legacy/*
/libraries/php-encryption/*
/libraries/phpass/*
/libraries/phpmailer/*
/libraries/phputf8/*
/libraries/simplepie/*
/libraries/src/*
/libraries/vendor/*
/libraries/classmap.php
/libraries/cms.php
/libraries/import.legacy.php
/libraries/import.php
/libraries/index.html
/libraries/loader.php
/media/cms/*
/media/com_associations/*
/media/com_contact/*
/media/com_content/*
/media/com_contenthistory/*
/media/com_fields/*
/media/com_finder/*
/media/com_joomlaupdate/*
/media/com_menus/*
/media/com_modules/*
/media/com_wrapper/*
/media/contacts/*
/media/editors/*
/media/jui/*
/media/mailto/*
/media/media/*
/media/mod_languages/*
/media/mod_sampledata/*
/media/overrider/*
/media/plg_captcha_recaptcha/*
/media/plg_captcha_recaptcha_invisible/*
/media/plg_quickicon_extensionupdate/*
/media/plg_quickicon_joomlaupdate/*
/media/plg_quickicon_privacycheck/*
/media/plg_system_highlight/*
/media/plg_system_stats/*
/media/plg_twofactorauth_totp/*
/media/system/*
/media/index.html
/modules/mod_articles_archive/*
/modules/mod_articles_categories/*
/modules/mod_articles_category/*
/modules/mod_articles_latest/*
/modules/mod_articles_news/*
/modules/mod_articles_popular/*
/modules/mod_banners/*
/modules/mod_breadcrumbs/*
/modules/mod_custom/*
/modules/mod_feed/*
/modules/mod_finder/*
/modules/mod_footer/*
/modules/mod_languages/*
/modules/mod_login/*
/modules/mod_menu/*
/modules/mod_random_image/*
/modules/mod_related_items/*
/modules/mod_search/*
/modules/mod_stats/*
/modules/mod_syndicate/*
/modules/mod_tags_popular/*
/modules/mod_tags_similar/*
/modules/mod_users_latest/*
/modules/mod_whosonline/*
/modules/mod_wrapper/*
/modules/index.html
/plugins/actionlog/joomla/*
/plugins/authentication/cookie/*
/plugins/authentication/example/*
/plugins/authentication/gmail/*
/plugins/authentication/joomla/*
/plugins/authentication/ldap/*
/plugins/captcha/recaptcha/*
/plugins/captcha/recaptcha_invisible/*
/plugins/content/confirmconsent/*
/plugins/content/contact/*
/plugins/content/emailcloak/*
/plugins/content/example/*
/plugins/content/fields/*
/plugins/content/finder/*
/plugins/content/geshi/*
/plugins/content/joomla/*
/plugins/content/loadmodule/*
/plugins/content/pagebreak/*
/plugins/content/pagenavigation/*
/plugins/content/vote/*
/plugins/editors/codemirror/*
/plugins/editors/none/*
/plugins/editors/tinymce/*
/plugins/editors-xtd/article/*
/plugins/editors-xtd/contact/*
/plugins/editors-xtd/fields/*
/plugins/editors-xtd/image/*
/plugins/editors-xtd/menu/*
/plugins/editors-xtd/module/*
/plugins/editors-xtd/pagebreak/*
/plugins/editors-xtd/readmore/*
/plugins/extension/example/*
/plugins/extension/joomla/*
/plugins/fields/calendar/*
/plugins/fields/checkboxes/*
/plugins/fields/color/*
/plugins/fields/editor/*
/plugins/fields/imagelist/*
/plugins/fields/integer/*
/plugins/fields/list/*
/plugins/fields/media/*
/plugins/fields/radio/*
/plugins/fields/repeatable/*
/plugins/fields/sql/*
/plugins/fields/text/*
/plugins/fields/textarea/*
/plugins/fields/url/*
/plugins/fields/user/*
/plugins/fields/usergrouplist/*
/plugins/finder/categories/*
/plugins/finder/contacts/*
/plugins/finder/content/*
/plugins/finder/newsfeeds/*
/plugins/finder/tags/*
/plugins/installer/folderinstaller/*
/plugins/installer/packageinstaller/*
/plugins/installer/urlinstaller/*
/plugins/privacy/actionlogs/*
/plugins/privacy/consents/*
/plugins/privacy/contact/*
/plugins/privacy/content/*
/plugins/privacy/message/*
/plugins/privacy/user/*
/plugins/quickicon/extensionupdate/*
/plugins/quickicon/joomlaupdate/*
/plugins/quickicon/phpversioncheck/*
/plugins/quickicon/privacycheck/*
/plugins/quickicon/index.html
/plugins/sampledata/blog/*
/plugins/search/categories/*
/plugins/search/contacts/*
/plugins/search/content/*
/plugins/search/newsfeeds/*
/plugins/search/tags/*
/plugins/search/weblinks/*
/plugins/search/index.html
/plugins/system/actionlogs/*
/plugins/system/cache/*
/plugins/system/debug/*
/plugins/system/fields/*
/plugins/system/highlight/*
/plugins/system/languagecode/*
/plugins/system/languagefilter/*
/plugins/system/log/*
/plugins/system/logout/*
/plugins/system/logrotation/*
/plugins/system/p3p/*
/plugins/system/privacyconsent/*
/plugins/system/redirect/*
/plugins/system/remember/*
/plugins/system/sef/*
/plugins/system/sessiongc/*
/plugins/system/stats/*
/plugins/system/updatenotification/*
/plugins/system/index.html
/plugins/twofactorauth/totp/*
/plugins/twofactorauth/yubikey/*
/plugins/user/contactcreator/*
/plugins/user/example/*
/plugins/user/joomla/*
/plugins/user/profile/*
/plugins/user/terms/*
/plugins/user/index.html
/plugins/index.html
/templates/beez3/*
/templates/protostar/*
/templates/system/*
/templates/index.html
/tmp/*
/configuration.php
/htaccess.txt
/index.php
/joomla.xml
/LICENSE.txt
/README.txt
/robots.txt.dist
/web.config.txt



================================================
FILE: Julia.gitignore
================================================
# Files generated by invoking Julia with --code-coverage
*.jl.cov
*.jl.*.cov

# Files generated by invoking Julia with --track-allocation
*.jl.mem

# System-specific files and directories generated by the BinaryProvider and BinDeps packages
# They contain absolute paths specific to the host computer, and so should not be committed
deps/deps.jl
deps/build.log
deps/downloads/
deps/usr/
deps/src/

# Build artifacts for creating documentation generated by the Documenter package
docs/build/
docs/site/

# File generated by Pkg, the package manager, based on a corresponding Project.toml
# It records a fixed state of all packages used by the project. As such, it should not be
# committed for packages, but should be committed for applications that require a static
# environment.
Manifest*.toml

# File generated by the Preferences package to store local preferences
LocalPreferences.toml
JuliaLocalPreferences.toml



================================================
FILE: Katalon.gitignore
================================================
# Katalon Test Suite
# Compiled class file
*.class
*.swp
output
!output/.gitkeep
build

Libs/TempTestCase*
Libs/TempTestSuite*
bin/lib/TempTestCase*
Reports/
\.classpath
\.project
\.settings/
bin/lib/
Libs/
.svn/
.gradle


# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*



================================================
FILE: KiCad.gitignore
================================================
# For PCBs designed using KiCad: https://www.kicad.org/
# Format documentation: https://kicad.org/help/file-formats/

# Temporary files
*.000
*.bak
*.bck
*.kicad_pcb-bak
*.kicad_sch-bak
*-backups
*-cache*
*-bak
*-bak*
*~
~*
_autosave-*
\#auto_saved_files\#
*.tmp
*-save.pro
*-save.kicad_pcb
fp-info-cache
~*.lck
\#auto_saved_files#

# Netlist files (exported from Eeschema)
*.net

# Autorouter files (exported from Pcbnew)
*.dsn
*.ses

# Exported BOM files
*.xml
*.csv

# Archived Backups (KiCad 6.0)
**/*-backups/*.zip

# Local project settings
*.kicad_prl



================================================
FILE: Kohana.gitignore
================================================
application/cache/*
application/logs/*



================================================
FILE: Kotlin.gitignore
================================================
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*
replay_pid*

# Kotlin Gradle plugin data, see https://kotlinlang.org/docs/whatsnew20.html#new-directory-for-kotlin-data-in-gradle-projects
.kotlin/


================================================
FILE: LabVIEW.gitignore
================================================
# Libraries
*.lvlibp
*.llb

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe

# Metadata
*.aliases
*.lvlps
.cache/



================================================
FILE: LangChain.gitignore
================================================
# gitignore template for LangChain products, e.g., LangGraph, LangSmith
# website: https://www.langchain.com/
# website: https://www.langchain.com/langgraph

# LangGraph
.langgraph_api/



================================================
FILE: Laravel.gitignore
================================================
/vendor/
node_modules/
npm-debug.log
yarn-error.log

# Laravel 4 specific
bootstrap/compiled.php
app/storage/

# Laravel 5 & Lumen specific
public/storage
public/hot

# Laravel 5 & Lumen specific with changed public path
public_html/storage
public_html/hot

storage/*.key
.env
Homestead.yaml
Homestead.json
/.vagrant
.phpunit.result.cache

/public/build
/storage/pail
.env.backup
.env.production
.phpactor.json
auth.json



================================================
FILE: Leiningen.gitignore
================================================
pom.xml
pom.xml.asc
*.jar
*.class
/lib/
/classes/
/target/
/checkouts/
.lein-deps-sum
.lein-repl-history
.lein-plugins/
.lein-failures
.nrepl-port
.cpcache/



================================================
FILE: LemonStand.gitignore
================================================
boot.php
index.php
install.php
/config/*
!/config/config.php
/controllers/*
/init/*
/logs/*
/phproad/*
/temp/*
/uploaded/*
/installer_files/*
/modules/backend/*
/modules/blog/*
/modules/cms/*
/modules/core/*
/modules/session/*
/modules/shop/*
/modules/system/*
/modules/users/*
# add content_*.php if you don't want erase client changes to content



================================================
FILE: LICENSE
================================================
CC0 1.0 Universal

Statement of Purpose

The laws of most jurisdictions throughout the world automatically confer
exclusive Copyright and Related Rights (defined below) upon the creator and
subsequent owner(s) (each and all, an "owner") of an original work of
authorship and/or a database (each, a "Work").

Certain owners wish to permanently relinquish those rights to a Work for the
purpose of contributing to a commons of creative, cultural and scientific
works ("Commons") that the public can reliably and without fear of later
claims of infringement build upon, modify, incorporate in other works, reuse
and redistribute as freely as possible in any form whatsoever and for any
purposes, including without limitation commercial purposes. These owners may
contribute to the Commons to promote the ideal of a free culture and the
further production of creative, cultural and scientific works, or to gain
reputation or greater distribution for their Work in part through the use and
efforts of others.

For these and/or other purposes and motivations, and without any expectation
of additional consideration or compensation, the person associating CC0 with a
Work (the "Affirmer"), to the extent that he or she is an owner of Copyright
and Related Rights in the Work, voluntarily elects to apply CC0 to the Work
and publicly distribute the Work under its terms, with knowledge of his or her
Copyright and Related Rights in the Work and the meaning and intended legal
effect of CC0 on those rights.

1. Copyright and Related Rights. A Work made available under CC0 may be
protected by copyright and related or neighboring rights ("Copyright and
Related Rights"). Copyright and Related Rights include, but are not limited
to, the following:

  i. the right to reproduce, adapt, distribute, perform, display, communicate,
  and translate a Work;

  ii. moral rights retained by the original author(s) and/or performer(s);

  iii. publicity and privacy rights pertaining to a person's image or likeness
  depicted in a Work;

  iv. rights protecting against unfair competition in regards to a Work,
  subject to the limitations in paragraph 4(a), below;

  v. rights protecting the extraction, dissemination, use and reuse of data in
  a Work;

  vi. database rights (such as those arising under Directive 96/9/EC of the
  European Parliament and of the Council of 11 March 1996 on the legal
  protection of databases, and under any national implementation thereof,
  including any amended or successor version of such directive); and

  vii. other similar, equivalent or corresponding rights throughout the world
  based on applicable law or treaty, and any national implementations thereof.

2. Waiver. To the greatest extent permitted by, but not in contravention of,
applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and
unconditionally waives, abandons, and surrenders all of Affirmer's Copyright
and Related Rights and associated claims and causes of action, whether now
known or unknown (including existing as well as future claims and causes of
action), in the Work (i) in all territories worldwide, (ii) for the maximum
duration provided by applicable law or treaty (including future time
extensions), (iii) in any current or future medium and for any number of
copies, and (iv) for any purpose whatsoever, including without limitation
commercial, advertising or promotional purposes (the "Waiver"). Affirmer makes
the Waiver for the benefit of each member of the public at large and to the
detriment of Affirmer's heirs and successors, fully intending that such Waiver
shall not be subject to revocation, rescission, cancellation, termination, or
any other legal or equitable action to disrupt the quiet enjoyment of the Work
by the public as contemplated by Affirmer's express Statement of Purpose.

3. Public License Fallback. Should any part of the Waiver for any reason be
judged legally invalid or ineffective under applicable law, then the Waiver
shall be preserved to the maximum extent permitted taking into account
Affirmer's express Statement of Purpose. In addition, to the extent the Waiver
is so judged Affirmer hereby grants to each affected person a royalty-free,
non transferable, non sublicensable, non exclusive, irrevocable and
unconditional license to exercise Affirmer's Copyright and Related Rights in
the Work (i) in all territories worldwide, (ii) for the maximum duration
provided by applicable law or treaty (including future time extensions), (iii)
in any current or future medium and for any number of copies, and (iv) for any
purpose whatsoever, including without limitation commercial, advertising or
promotional purposes (the "License"). The License shall be deemed effective as
of the date CC0 was applied by Affirmer to the Work. Should any part of the
License for any reason be judged legally invalid or ineffective under
applicable law, such partial invalidity or ineffectiveness shall not
invalidate the remainder of the License, and in such case Affirmer hereby
affirms that he or she will not (i) exercise any of his or her remaining
Copyright and Related Rights in the Work or (ii) assert any associated claims
and causes of action with respect to the Work, in either case contrary to
Affirmer's express Statement of Purpose.

4. Limitations and Disclaimers.

  a. No trademark or patent rights held by Affirmer are waived, abandoned,
  surrendered, licensed or otherwise affected by this document.

  b. Affirmer offers the Work as-is and makes no representations or warranties
  of any kind concerning the Work, express, implied, statutory or otherwise,
  including without limitation warranties of title, merchantability, fitness
  for a particular purpose, non infringement, or the absence of latent or
  other defects, accuracy, or the present or absence of errors, whether or not
  discoverable, all to the greatest extent permissible under applicable law.

  c. Affirmer disclaims responsibility for clearing rights of other persons
  that may apply to the Work or any use thereof, including without limitation
  any person's Copyright and Related Rights in the Work. Further, Affirmer
  disclaims responsibility for obtaining any necessary consents, permissions
  or other rights required for any use of the Work.

  d. Affirmer understands and acknowledges that Creative Commons is not a
  party to this document and has no duty or obligation with respect to this
  CC0 or use of the Work.

For more information, please see
<http://creativecommons.org/publicdomain/zero/1.0/>



================================================
FILE: Lilypond.gitignore
================================================
*.pdf
*.ps
*.midi
*.mid
*.log
*~



================================================
FILE: Lithium.gitignore
================================================
libraries/*
resources/tmp/*



================================================
FILE: Lua.gitignore
================================================
# Compiled Lua sources
luac.out

# luarocks build files
*.src.rock
*.zip
*.tar.gz

# Object files
*.o
*.os
*.ko
*.obj
*.elf

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo
*.def
*.exp

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex




================================================
FILE: Luau.gitignore
================================================
# A fast, small, safe, gradually typed embeddable scripting language derived from Lua
#
# https://github.com/luau-lang/luau
# https://luau.org/

# Code coverage
coverage.out

# Profiling
profile.out
profile.svg

# Time trace
trace.json



================================================
FILE: Magento.gitignore
================================================
#--------------------------#
# Magento Default Files    #
#--------------------------#

/PATCH_*.sh

/app/etc/local.xml

/media/*
!/media/.htaccess

!/media/customer
/media/customer/*
!/media/customer/.htaccess

!/media/dhl
/media/dhl/*
!/media/dhl/logo.jpg

!/media/downloadable
/media/downloadable/*
!/media/downloadable/.htaccess

!/media/xmlconnect
/media/xmlconnect/*

!/media/xmlconnect/custom
/media/xmlconnect/custom/*
!/media/xmlconnect/custom/ok.gif

!/media/xmlconnect/original
/media/xmlconnect/original/*
!/media/xmlconnect/original/ok.gif

!/media/xmlconnect/system
/media/xmlconnect/system/*
!/media/xmlconnect/system/ok.gif

/var/*
!/var/.htaccess

!/var/package
/var/package/*
!/var/package/*.xml




================================================
FILE: Maven.gitignore
================================================
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
# https://maven.apache.org/wrapper/#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar

# Eclipse m2e generated files
# Eclipse Core
.project
# JDT-specific (Eclipse Java Development Tools)
.classpath



================================================
FILE: Mercury.gitignore
================================================
Mercury/
Mercury.modules
*.mh
*.err
*.init
*.dll
*.exe
*.a
*.so
*.dylib
*.beams
*.d
*.c_date



================================================
FILE: MetaProgrammingSystem.gitignore
================================================
workspace.xml
junitvmwatcher*.properties
build.properties

# generated java classes and java source files
#   manually add any custom artifacts that can't be generated from the models
#   http://confluence.jetbrains.com/display/MPSD25/HowTo+--+MPS+and+Git
classes_gen
source_gen
source_gen.caches

# generated test code and test results
test_gen
test_gen.caches
TEST-*.xml
junit*.properties



================================================
FILE: Modelica.gitignore
================================================
# Modelica - an object-oriented language for modeling of cyber-physical systems
# https://modelica.org/
# Ignore temporary files, build results, simulation files

## Modelica-specific files
*~
*.bak
*.bak-mo
*.mof
\#*\#
*.moe
*.mol

## Build artefacts
*.exe
*.exp
*.o
*.pyc

## Simulation files
*.mat

## Package files
*.gz
*.rar
*.tar
*.zip

## Dymola-specific files
buildlog.txt
dsfinal.txt
dsin.txt
dslog.txt
dsmodel*
dsres.txt
dymosim*
request
stat
status
stop
success
*.



================================================
FILE: ModelSim.gitignore
================================================
# ignore ModelSim generated files and directories (temp files and so on)
[_@]*

# ignore compilation output of ModelSim
*.mti
*.dat
*.dbs
*.psm
*.bak
*.cmp
*.jpg
*.html
*.bsf

# ignore simulation output of ModelSim
wlf*
*.wlf
*.vstf
*.ucdb
cov*/
transcript*
sc_dpiheader.h
vsim.dbg



================================================
FILE: Nanoc.gitignore
================================================
# For projects using Nanoc (http://nanoc.ws/)

# Default location for output (needs to match output_dir's value found in nanoc.yaml)
output/

# Temporary file directory
tmp/nanoc/

# Crash Log
crash.log



================================================
FILE: Nestjs.gitignore
================================================
# Nestjs specific
/dist
/node_modules
/build
/tmp

# Logs
logs
*.log
npm-debug.log*
pnpm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# dotenv environment variable files
.env
.env.development
.env.test
.env.production

# temp directory
.temp
.tmp



================================================
FILE: Nextjs.gitignore
================================================
# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# next.js
/.next/
/out/

# production
/build

# misc
.DS_Store
*.pem

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# local env files
.env*.local
.env

# vercel
.vercel

# typescript
*.tsbuildinfo
next-env.d.ts



================================================
FILE: Nim.gitignore
================================================
nimcache/
nimblecache/
htmldocs/



================================================
FILE: Nix.gitignore
================================================
# Ignore build outputs from performing a nix-build or `nix build` command
result
result-*

# Ignore automatically generated direnv output
.direnv



================================================
FILE: Node.gitignore
================================================
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.*
!.env.example

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist
.output

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Sveltekit cache directory
.svelte-kit/

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Firebase cache directory
.firebase/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Vite files
vite.config.js.timestamp-*
vite.config.ts.timestamp-*
.vite/



================================================
FILE: Objective-C.gitignore
================================================
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output



================================================
FILE: OCaml.gitignore
================================================
*.annot
*.cmo
*.cma
*.cmi
*.a
*.o
*.cmx
*.cmxs
*.cmxa

# Files containing detailed information about the compilation (generated
# by `ocamlc`/`ocamlopt` when invoked using the option `-bin-annot`).
# These files are typically useful for code inspection tools
# (e.g. Merlin).
*.cmt
*.cmti

# ocamlbuild and Dune default working directory
_build/

# ocamlbuild targets
*.byte
*.native

# oasis generated files
setup.data
setup.log

# Merlin configuring file for Vim and Emacs
.merlin

# Dune generated files
*.install

# Local OPAM switch
_opam/



================================================
FILE: Opa.gitignore
================================================
_build
_tracks

opa-debug-js

*.opp
*.opx
*.opx.broken
*.dump
*.api
*.api-txt
*.exe
*.log



================================================
FILE: OpenCart.gitignore
================================================
.htaccess
/config.php
admin/config.php

!index.html

download/
image/data/
image/cache/
system/cache/
system/logs/

system/storage/

# vQmod log files
vqmod/logs/*
# vQmod cache files
vqmod/vqcache/*
vqmod/checked.cache
vqmod/mods.cache



================================================
FILE: OracleForms.gitignore
================================================
# Compiled Form Modules
*.fmx

# Compiled Menu Modules
*.mmx

# Compiled Pre-Linked Libraries
*.plx



================================================
FILE: Packer.gitignore
================================================
# Cache objects
packer_cache/

# Crash log
crash.log

# https://www.packer.io/guides/hcl/variables
# Exclude all .pkrvars.hcl files, which are likely to contain sensitive data,
# such as password, private keys, and other secrets. These should not be part of
# version control as they are data points which are potentially sensitive and
# subject to change depending on the environment.
#
*.pkrvars.hcl

# For built boxes
*.box



================================================
FILE: Perl.gitignore
================================================
!Build/
.last_cover_stats
/META.yml
/META.json
/MYMETA.*
*.o
*.pm.tdy
*.bs

# Devel::Cover
cover_db/

# Devel::NYTProf
nytprof.out

# Dist::Zilla
/.build/

# Module::Build
_build/
Build
Build.bat

# Module::Install
inc/

# ExtUtils::MakeMaker
/blib/
/_eumm/
/*.gz
/Makefile
/Makefile.old
/MANIFEST.bak
/pm_to_blib
/*.zip

# Carton/Carmel
/local/
/.carmel/
# cpanfile.snapshot should generally be ignored for library code, otherwise included
# cpanfile.snapshot



================================================
FILE: Phalcon.gitignore
================================================
/cache/
/config/development/



================================================
FILE: PlayFramework.gitignore
================================================
# Ignore Play! working directory #
bin/
/db
.eclipse
/lib/
/logs/
/modules
/project/project
/project/target
/target
tmp/
test-result
server.pid
*.eml
/dist/
.cache



================================================
FILE: Plone.gitignore
================================================
*.pyc
*.pyo
*.tmp*
*.mo
*.egg
*.EGG
*.egg-info
*.EGG-INFO
.*.cfg
bin/
build/
develop-eggs/
downloads/
eggs/
fake-eggs/
parts/
dist/
var/



================================================
FILE: Prestashop.gitignore
================================================
# Cache, temp and personal files

/.htaccess
*.log

# Cache
/cache/*
!/cache/.htaccess
!/cache/cachefs/index.php
!/cache/deprecated.txt
!/cache/index.php
!/cache/purifier/index.php
!/cache/push/activity
!/cache/push/index.php
!/cache/push/trends
!/cache/sandbox/index.php
!/cache/smarty/cache/index.php
!/cache/smarty/compile/index.php
!/cache/smarty/index.php
!/cache/tcpdf/index.php

# Download
/download/*
!/download/.htaccess
!/download/index.php

# Images
/img/*
!/img/.htaccess
!/img/index.php
!/img/404.gif
!/img/bg_500.png
!/img/bg_loader.png
!/img/favicon.ico
!/img/loader.gif
!/img/loadingAnimation.gif
!/img/logo.jpg
!/img/logo.png
!/img/logo_invoice.jpg
!/img/logo_stores.png
!/img/macFFBgHack.png
!/img/prestashop-avatar.png
!/img/prestashop@2x.png
!/img/preston-login-wink@2x.png
!/img/preston-login@2x.png
!/img/questionmark.png
!/img/genders/index.php
!/img/admin/index.php
!/img/c/index.php
!/img/cms/index.php
!/img/co/index.php
!/img/jquery-ui
!/img/l/index.php
!/img/m/index.php
!/img/os/index.php
!/img/p/index.php
!/img/s/index.php
!/img/scenes
!/img/st/index.php
!/img/su/index.php
!/img/t/index.php
!/img/tmp/index.php

# Upload
/upload/*
!/upload/.htaccess

/vendor/*
/docs/phpdoc-sf/
/composer.lock
*.hot-update.js
*.hot-update.json


/admin-dev/autoupgrade/*
!/admin-dev/autoupgrade/index.php
!/admin-dev/autoupgrade/backup/index.php

/admin-dev/backups/*
!/admin-dev/backups/.htaccess

/admin-dev/import/*
!/admin-dev/import/.htaccess
!/admin-dev/import/index.php

/admin-dev/export/*
!/admin-dev/export/.htaccess
!/admin-dev/export/index.php

# Downloaded RTL files
/admin-dev/themes/default/css/bundle/default_rtl.css
/admin-dev/themes/default/css/bundle/shared_rtl.css
/admin-dev/themes/default/css/font_rtl.css
/admin-dev/themes/default/css/overrides_rtl.css
/admin-dev/themes/default/css/vendor/font-awesome/font-awesome_rtl.css
/admin-dev/themes/default/css/vendor/nv.d3_rtl.css
/admin-dev/themes/default/css/vendor/titatoggle-min_rtl.css
/admin-dev/themes/default/public/theme_rtl.css
/admin-dev/themes/new-theme/css/module/drop_rtl.css
/admin-dev/themes/new-theme/css/right-sidebar_rtl.css

themes/*/cache/*

# Config

config/settings.inc.php
config/settings.old.php
config/xml/*
config/themes/*
!config/xml/themes/default.xml
themes/*/config/settings_*.json
app/config/parameters.old.yml
app/config/config.php

# Themes, modules and overrides

modules/*
override/*
themes/*/
!themes/classic
!themes/_core
!themes/_libraries

# Vendors and dependencies

bower_components/
node_modules/
composer.phar
php-cs-fixer
.grunt/*

# Translations and emails templates

translations/*
mails/*
!mails/themes/
!mails/_partials/
themes/default-bootstrap/lang/*
themes/default-bootstrap/modules/*/translations/*.php
themes/default-bootstrap/mails/*
!themes/default-bootstrap/mails/en/
themes/default-bootstrap/modules/*/mails/*
!themes/default-bootstrap/modules/*/mails/en

# MISC

*sitemap.xml
/robots.txt

# Symfony

/bin/
/app/Resources/geoip/GeoLite2-City.mmdb
/app/Resources/translations/*
!/app/Resources/translations/default
/app/config/parameters.yml
/app/config/parameters.php
/build/
/phpunit.xml
/var/*
!/var/cache
/var/cache/*
!var/cache/.gitkeep
!/var/logs
/var/logs/*
!var/logs/.gitkeep
!/var/sessions
/var/sessions/*
!var/sessions/.gitkeep
!var/SymfonyRequirements.php
/vendor/
/web/bundles/




================================================
FILE: Processing.gitignore
================================================
.DS_Store
applet
application.linux-arm64
application.linux-armv6hf
application.linux32
application.linux64
application.windows32
application.windows64
application.macosx
out



================================================
FILE: PureScript.gitignore
================================================
# Dependencies
.psci_modules
.spago
bower_components
node_modules

# Generated files
.psci
output



================================================
FILE: Python.gitignore
================================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[codz]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py.cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#uv.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock
#poetry.toml

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#   pdm recommends including project-wide configuration in pdm.toml, but excluding .pdm-python.
#   https://pdm-project.org/en/latest/usage/project/#working-with-version-control
#pdm.lock
#pdm.toml
.pdm-python
.pdm-build/

# pixi
#   Similar to Pipfile.lock, it is generally recommended to include pixi.lock in version control.
#pixi.lock
#   Pixi creates a virtual environment in the .pixi directory, just like venv module creates one
#   in the .venv directory. It is recommended not to include this directory in version control.
.pixi

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# Redis
*.rdb
*.aof
*.pid

# RabbitMQ
mnesia/
rabbitmq/
rabbitmq-data/

# ActiveMQ
activemq-data/

# SageMath parsed files
*.sage.py

# Environments
.env
.envrc
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Abstra
# Abstra is an AI-powered process automation framework.
# Ignore directories containing user credentials, local state, and settings.
# Learn more at https://abstra.io/docs
.abstra/

# Visual Studio Code
#  Visual Studio Code specific template is maintained in a separate VisualStudioCode.gitignore
#  that can be found at https://github.com/github/gitignore/blob/main/Global/VisualStudioCode.gitignore
#  and can be added to the global gitignore or merged into this file. However, if you prefer,
#  you could uncomment the following to ignore the entire vscode folder
# .vscode/

# Ruff stuff:
.ruff_cache/

# PyPI configuration file
.pypirc

# Marimo
marimo/_static/
marimo/_lsp/
__marimo__/

# Streamlit
.streamlit/secrets.toml



================================================
FILE: Qooxdoo.gitignore
================================================
cache
cache-downloads
inspector
api
source/inspector.html



================================================
FILE: Qt.gitignore
================================================
# C++ objects and libs
*.slo
*.lo
*.o
*.a
*.la
*.lai
*.so
*.so.*
*.dll
*.dylib

# Qt-es
object_script.*.Release
object_script.*.Debug
*_plugin_import.cpp
/.qmake.cache
/.qmake.stash
*.pro.user
*.pro.user.*
*.qbs.user
*.qbs.user.*
*.moc
moc_*.cpp
moc_*.h
qrc_*.cpp
ui_*.h
*.qmlc
*.jsc
Makefile*
*build-*
*.qm
*.prl

# Qt unit tests
target_wrapper.*

# QtCreator
*.autosave

# QtCreator Qml
*.qmlproject.user
*.qmlproject.user.*

# QtCreator CMake
CMakeLists.txt.user*

# QtCreator 4.8< compilation database
compile_commands.json

# QtCreator local machine specific files for imported projects
*creator.user*

*_qmlcache.qrc



================================================
FILE: R.gitignore
================================================
# History files
.Rhistory
.Rapp.history

# Session Data files
.RData
.RDataTmp

# User-specific files
.Ruserdata

# Example code in package build process
*-Ex.R

# Output files from R CMD build
/*.tar.gz

# Output files from R CMD check
/*.Rcheck/

# RStudio files
.Rproj.user/

# produced vignettes
vignettes/*.html
vignettes/*.pdf

# OAuth2 token, see https://github.com/hadley/httr/releases/tag/v0.3
.httr-oauth

# knitr and R markdown default cache directories
*_cache/
/cache/

# Temporary files created by R markdown
*.utf8.md
*.knit.md

# R Environment Variables
.Renviron

# pkgdown site
docs/

# translation temp files
po/*~

# RStudio Connect folder
rsconnect/



================================================
FILE: Racket.gitignore
================================================
.DS_Store
compiled/
/doc/
*~
*.bak
\#*
.\#*



================================================
FILE: Rails.gitignore
================================================
*.rbc
capybara-*.html
.rspec
/db/*.sqlite3
/db/*.sqlite3-journal
/db/*.sqlite3-[0-9]*
/public/system
/coverage/
/spec/tmp
*.orig
rerun.txt
pickle-email-*.html

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# TODO Comment out this rule if you are OK with secrets being uploaded to the repo
config/initializers/secret_token.rb
config/master.key

# Only include if you have production secrets in this file, which is no longer a Rails default
# config/secrets.yml

# dotenv, dotenv-rails
# TODO Comment out these rules if environment variables can be committed
.env
.env*.local

## Environment normalization:
/.bundle
/vendor/bundle

# these should all be checked in to normalize the environment:
# Gemfile.lock, .ruby-version, .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# if using bower-rails ignore default bower_components path bower.json files
/vendor/assets/bower_components
*.bowerrc
bower.json

# Ignore pow environment settings
.powenv

# Ignore Byebug command history file.
.byebug_history

# Ignore node_modules
node_modules/

# Ignore precompiled javascript packs
/public/packs
/public/packs-test
/public/assets

# Ignore yarn files
/yarn-error.log
yarn-debug.log*
.yarn-integrity

# Ignore uploaded files in development
/storage/*
!/storage/.keep
/public/uploads



================================================
FILE: Raku.gitignore
================================================
# Gitignore for Raku (https://raku.org)
# As part of https://github.com/github/gitignore

# precompiled files
.precomp
lib/.precomp




================================================
FILE: ReScript.gitignore
================================================
/node_modules/
/lib/
.bsb.lock



================================================
FILE: RhodesRhomobile.gitignore
================================================
rholog-*
sim-*
bin/libs
bin/RhoBundle
bin/tmp
bin/target
bin/*.ap_
*.o
*.jar



================================================
FILE: ROS.gitignore
================================================
devel/
logs/
build/
bin/
lib/
msg_gen/
srv_gen/
msg/*Action.msg
msg/*ActionFeedback.msg
msg/*ActionGoal.msg
msg/*ActionResult.msg
msg/*Feedback.msg
msg/*Goal.msg
msg/*Result.msg
msg/_*.py
build_isolated/
devel_isolated/

# Generated by dynamic reconfigure
*.cfgc
/cfg/cpp/
/cfg/*.py

# Ignore generated docs
*.dox
*.wikidoc

# eclipse stuff
.project
.cproject

# qcreator stuff
CMakeLists.txt.user

srv/_*.py
*.pcd
*.pyc
qtcreator-*
*.user

/planning/cfg
/planning/docs
/planning/src

*~

# Emacs
.#*

# Catkin custom files
CATKIN_IGNORE



================================================
FILE: Ruby.gitignore
================================================
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/pkg/
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/

# Used by dotenv library to load environment variables.
# .env

# Ignore Byebug command history file.
.byebug_history

## Specific to RubyMotion:
.dat*
.repl_history
build/
*.bridgesupport
build-iPhoneOS/
build-iPhoneSimulator/

## Specific to RubyMotion (use of CocoaPods):
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# vendor/Pods/

## Documentation cache and generated files:
/.yardoc/
/_yardoc/
/doc/
/rdoc/

## Environment normalization:
/.bundle/
/vendor/bundle
/lib/bundler/man/

# for a library or gem, you might want to ignore these files since the code is
# intended to run in multiple environments; otherwise, check them in:
# Gemfile.lock
# .ruby-version
# .ruby-gemset

# unless supporting rvm < 1.11.0 or doing something fancy, ignore this:
.rvmrc

# Used by RuboCop. Remote config files pulled in from inherit_from directive.
# .rubocop-https?--*



================================================
FILE: Rust.gitignore
================================================
# Generated by Cargo
# will have compiled files and executables
debug
target

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# Generated by cargo mutants
# Contains mutation testing data
**/mutants.out*/

# RustRover
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/



================================================
FILE: Salesforce.gitignore
================================================
# This file is used for Git repositories to specify intentionally untracked files that Git should ignore. 
# If you are not using git, you can delete this file. For more information see: https://git-scm.com/docs/gitignore
# For useful gitignore templates see: https://github.com/github/gitignore

# Salesforce cache
.sf/
.sfdx/
.localdevserver/
deploy-options.json
.localdev

# LWC VSCode autocomplete
**/lwc/jsconfig.json

# LWC Jest coverage reports
coverage/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Eslint cache
.eslintcache

# Windows system files
Thumbs.db
ehthumbs.db
[Dd]esktop.ini
$RECYCLE.BIN/

# Salesforce Analyzer results
sca-results.csv
sfca_results.json

# Local environment variables
.env



================================================
FILE: Sass.gitignore
================================================
.sass-cache/
*.css.map
*.sass.map
*.scss.map



================================================
FILE: Scala.gitignore
================================================
*.class
*.log

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*



================================================
FILE: Scheme.gitignore
================================================
*.ss~
*.ss#*
.#*.ss

*.scm~
*.scm#*
.#*.scm



================================================
FILE: SCons.gitignore
================================================
# for projects that use SCons for building: http://http://www.scons.org/
.sconsign.dblite

# When configure fails, SCons outputs these
config.log
.sconf_temp



================================================
FILE: Scrivener.gitignore
================================================
*/Files/binder.autosave
*/Files/binder.backup
*/Files/search.indexes
*/Files/user.lock
*/Files/Docs/docs.checksum
*/Files/Data/docs.checksum
*/QuickLook/
*/Settings/ui.plist



================================================
FILE: Sdcc.gitignore
================================================
# SDCC stuff
*.lnk
*.lst
*.map
*.mem
*.rel
*.rst
*.sym



================================================
FILE: SeamGen.gitignore
================================================
/bootstrap/data
/bootstrap/tmp
/classes/
/dist/
/exploded-archives/
/test-build/
/test-output/
/test-report/
/target/
temp-testng-customsuite.xml

# based on http://stackoverflow.com/a/8865858/422476 I am removing inline comments

#/classes/  		              all class files
#/dist/                       contains generated war files for deployment
#/exploded-archives/		      war content generation during deploy (or explode)
#/test-build/                 test compilation (ant target for Seam)
#/test-output/                test results
#/test-report/                test report generation for, e.g., Hudson
#/target/                     maven output folder
#temp-testng-customsuite.xml	generated when running test cases under Eclipse

# Thanks to @VonC and @kraftan for their helpful answers on a related question
# on StackOverflow.com:
# http://stackoverflow.com/questions/4176687
# /what-is-the-recommended-source-control-ignore-pattern-for-seam-projects



================================================
FILE: SketchUp.gitignore
================================================
*.skb



================================================
FILE: Smalltalk.gitignore
================================================
# changes file
*.changes
*.chg

# system image
*.image
*.img7
*.img

# Pharo Smalltalk Debug log file
PharoDebug.log

# Squeak Smalltalk Debug log file
SqueakDebug.log

# Dolphin Smalltalk source file
*.sml

# Dolphin Smalltalk error file
*.errors

# Monticello package cache
/package-cache

# playground cache
/play-cache
/play-stash

# Metacello-github cache
/github-cache
github-*.zip



================================================
FILE: Solidity-Remix.gitignore
================================================
# Remix compiler artifacts
**/artifacts/
**/artifacts/**

# Remix plugin state folders
deps/
states/

# Debug info
*.dbg.json
*.tsbuildinfo

# Optional
.env
.env.local


================================================
FILE: SSDT-sqlproj.gitignore
================================================
## Ignore Visual Studio SSDT sqlproj specific temporary files, build results, etc
##
##
## Get latest from https://github.com/github/gitignore/blob/master/SSDT-sqlproj.gitignore
# Build output
bin/
obj/

# DACPAC files
*.dacpac

# Publish profiles (optional, if environment-specific)
*.publish.xml

# SQL Server debug files
*.dbmdl
*.sqlcmdvars

# Visual Studio settings
.vs/

# User-specific files
*.user
*.suo
*.userosscache
*.sln.docstates

# Backup files
*.bak
*.log




================================================
FILE: Stella.gitignore
================================================
# Atari 2600 (Stella) support for multiple assemblers
# - DASM
# - CC65

# Assembled binaries and object directories
obj/
a.out
*.bin
*.a26

# Add in special Atari 7800-based binaries for good measure
*.a78



================================================
FILE: SugarCRM.gitignore
================================================
## SugarCRM
# Ignore custom .htaccess stuff.
/.htaccess
# Ignore the cache directory completely.
# This will break the current behaviour. Which was often leading to
# the misuse of the repository as backup replacement.
# For development the cache directory can be safely ignored and
# therefore it is ignored.
/cache/*
!/cache/index.html
# Ignore some files and directories from the custom directory.
/custom/history/
/custom/modulebuilder/
/custom/working/
/custom/modules/*/Ext/
/custom/application/Ext/
# Custom configuration should also be ignored.
/config.php
/config_override.php
# The silent upgrade scripts aren't needed.
/silentUpgrade*.php
# Logs files can safely be ignored.
*.log
# Ignore the new upload directories.
/upload/*
!/upload/index.html
/upload_backup/



================================================
FILE: Swift.gitignore
================================================
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you want to avoid checking in source code from the Xcode workspace
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output



================================================
FILE: Symfony.gitignore
================================================
# Cache and logs (Symfony2)
/app/cache/*
/app/logs/*
!app/cache/.gitkeep
!app/logs/.gitkeep

# Email spool folder
/app/spool/*

# Cache, session files and logs (Symfony3)
/var/cache/*
/var/logs/*
/var/sessions/*
!var/cache/.gitkeep
!var/logs/.gitkeep
!var/sessions/.gitkeep

# Logs (Symfony4)
/var/log/*
!var/log/.gitkeep

# Parameters
/app/config/parameters.yml
/app/config/parameters.ini

# Managed by Composer
/app/bootstrap.php.cache
/var/bootstrap.php.cache
/bin/*
!bin/console
!bin/symfony_requirements
/vendor/

# Assets and user uploads
/web/bundles/
/web/uploads/

# PHPUnit
/app/phpunit.xml
/phpunit.xml

# Build data
/build/

# Composer PHAR
/composer.phar

# Backup entities generated with doctrine:generate:entities command
**/Entity/*~

# Embedded web-server pid file
/.web-server-pid



================================================
FILE: SymphonyCMS.gitignore
================================================
manifest/cache/
manifest/logs/
manifest/tmp/
symphony/
workspace/uploads/
install-log.txt



================================================
FILE: Terraform.gitignore
================================================
# Local .terraform directories
.terraform/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Optional: ignore graph output files generated by `terraform graph`
# *.dot

# Optional: ignore plan files saved before destroying Terraform configuration
# Uncomment the line below if you want to ignore planout files.
# planout


================================================
FILE: TestComplete.gitignore
================================================
# Test Complete ignore files: https://support.smartbear.com/viewarticle/68002/

# Tester-specific Settings
*.tcCFGExtender
*.tcLS

# Type library declarations
*.tlb

# Log files
*.tcLogs

# Backup files
*.bak



================================================
FILE: TeX.gitignore
================================================
## Core latex/pdflatex auxiliary files:
*.aux
*.lof
*.log
*.lot
*.fls
*.out
*.toc
*.fmt
*.fot
*.cb
*.cb2
.*.lb

## Intermediate documents:
*.dvi
*.xdv
*-converted-to.*
# these rules might exclude image files for figures etc.
# *.ps
# *.eps
# *.pdf

## Generated if empty string is given at "Please type another file name for output:"
.pdf

## Bibliography auxiliary files (bibtex/biblatex/biber):
*.bbl
*.bbl-SAVE-ERROR
*.bcf
*.bcf-SAVE-ERROR
*.blg
*-blx.aux
*-blx.bib
*.run.xml

## Build tool auxiliary files:
*.fdb_latexmk
*.synctex
*.synctex(busy)
*.synctex.gz
*.synctex.gz(busy)
*.pdfsync
*.rubbercache
rubber.cache

## Build tool directories for auxiliary files
# latexrun
latex.out/

## Auxiliary and intermediate files from other packages:
# algorithms
*.alg
*.loa

# achemso
acs-*.bib

# amsthm
*.thm

# attachfile2
*.atfi

# beamer
*.nav
*.pre
*.snm
*.vrb

# changes
*.soc
*.loc

# comment
*.cut

# cprotect
*.cpt

# elsarticle (documentclass of Elsevier journals)
*.spl

# endnotes
*.ent

# fixme
*.lox

# feynmf/feynmp
*.mf
*.mp
*.t[1-9]
*.t[1-9][0-9]
*.tfm

#(r)(e)ledmac/(r)(e)ledpar
*.end
*.?end
*.[1-9]
*.[1-9][0-9]
*.[1-9][0-9][0-9]
*.[1-9]R
*.[1-9][0-9]R
*.[1-9][0-9][0-9]R
*.eledsec[1-9]
*.eledsec[1-9]R
*.eledsec[1-9][0-9]
*.eledsec[1-9][0-9]R
*.eledsec[1-9][0-9][0-9]
*.eledsec[1-9][0-9][0-9]R

# glossaries
*.acn
*.acr
*.glg
*.glg-abr
*.glo
*.glo-abr
*.gls
*.gls-abr
*.glsdefs
*.lzo
*.lzs
*.slg
*.slo
*.sls

# uncomment this for glossaries-extra (will ignore makeindex's style files!)
# *.ist

# gnuplot
*.gnuplot
*.table

# gnuplottex
*-gnuplottex-*

# gregoriotex
*.gaux
*.glog
*.gtex

# htlatex
*.4ct
*.4tc
*.idv
*.lg
*.trc
*.xref

# hypdoc
*.hd

# hyperref
*.brf

# knitr
*-concordance.tex
# TODO Uncomment the next line if you use knitr and want to ignore its generated tikz files
# *.tikz
*-tikzDictionary

# latexindent will create succesive backup files by default
#*.bak*

# listings
*.lol

# luatexja-ruby
*.ltjruby

# makeidx
*.idx
*.ilg
*.ind

# minitoc
*.maf
*.mlf
*.mlt
*.mtc[0-9]*
*.slf[0-9]*
*.slt[0-9]*
*.stc[0-9]*

# minted
_minted*
*.data.minted
*.pyg

# morewrites
*.mw

# newpax
*.newpax

# nomencl
*.nlg
*.nlo
*.nls

# pax
*.pax

# pdfpcnotes
*.pdfpc

# sagetex
*.sagetex.sage
*.sagetex.py
*.sagetex.scmd

# scrwfile
*.wrt

# spelling
*.spell.bad
*.spell.txt

# svg
svg-inkscape/

# sympy
*.sout
*.sympy
sympy-plots-for-*.tex/

# pdfcomment
*.upa
*.upb

# pythontex
*.pytxcode
pythontex-files-*/

# tcolorbox
*.listing

# thmtools
*.loe

# TikZ & PGF
*.dpth
*.md5
*.auxlock

# titletoc
*.ptc

# todonotes
*.tdo

# vhistory
*.hst
*.ver

# easy-todo
*.lod

# xcolor
*.xcp

# xmpincl
*.xmpi

# xindy
*.xdy

# xypic precompiled matrices and outlines
*.xyc
*.xyd

# endfloat
*.ttt
*.fff

# Latexian
TSWLatexianTemp*

## Editors:
# WinEdt
*.bak
*.sav

# latexindent.pl
*.bak[0-9]*

# Texpad
.texpadtmp

# LyX
*.lyx~

# Kile
*.backup

# gummi
.*.swp

# KBibTeX
*~[0-9]*

# TeXnicCenter
*.tps

# auto folder when using emacs and auctex
./auto/*
*.el

# expex forward references with \gathertags
*-tags.tex

# standalone packages
*.sta

# Makeindex log files
*.lpz

# xwatermark package
*.xwm

# REVTeX puts footnotes in the bibliography by default, unless the nofootinbib
# option is specified. Footnotes are the stored in a file with suffix Notes.bib.
# Uncomment the next line to have this generated file ignored.
#*Notes.bib



================================================
FILE: Textpattern.gitignore
================================================
.htaccess
css.php
rpc/
sites/site*/admin/
sites/site*/private/
sites/site*/public/admin/
sites/site*/public/setup/
sites/site*/public/theme/
textpattern/
HISTORY.txt
README.txt



================================================
FILE: TurboGears2.gitignore
================================================
*.py[co]

# Default development database
devdata.db

# Default data directory
data/*

# Packages
*.egg
*.egg-info
dist
build

# Installer logs
pip-log.txt

# Unit test / coverage reports
.coverage
.tox



================================================
FILE: TwinCAT3.gitignore
================================================
### TwinCAT3 ###
# website: https://www.beckhoff.com/twincat3/

# TwinCAT PLC
*.plcproj.bak
*.plcproj.orig
*.tpy
*.tclrs
*.library
*.compiled-library
*.compileinfo
*.asm
*.core
LineIDs.dbg
LineIDs.dbg.bak

# TwinCAT C++ and shared types
# ignoring the TMC file is only useful for plain PLC programming
# as soon as shared data types (via tmc), C++ or in general TcCom-Module are used, the TMC file has to be part of the repository
*.tmc
*.tmcRefac

# TwinCAT project files
*.tsproj.bak
*.tsproj.b?k
*.tsproj.orig
*.tspproj.bak
*.xti.bak
*.xti.bk?
*.xti.orig
*.xtv
*.xtv.bak
*.xtv.bk?
*.xt?.bk?
*.xt?.orig

# Multiuser specific
**/.TcGit/

# exclude not required folders
**/_Boot/
**/_CompileInfo/
**/_Libraries/
**/_ModuleInstall/
**/_Deployment/
**/_Repository/


# To include a specific library directory (i.e. third party/custom libs),
# use pattern `!/**/_Libraries/<directory name>/` i.e. `!/**/_Libraries/www.tcunit.org/`
#

# VS Shell project specific files and folders
**/.vs/
*.~u
*.project.~u
*.suo



================================================
FILE: Typo3.gitignore
================================================
## TYPO3 v6.2
# Ignore several upload and file directories.
/fileadmin/user_upload/
/fileadmin/_temp_/
/fileadmin/_processed_/
/uploads/
# Ignore cache
/typo3conf/temp_CACHED*
/typo3conf/temp_fieldInfo.php
/typo3conf/deprecation_*.log
/typo3conf/ENABLE_INSTALL_TOOL
/typo3conf/realurl_autoconf.php
/FIRST_INSTALL
# Ignore system folders, you should have them symlinked.
# If not comment out the following entries.
/typo3
/typo3_src
/typo3_src-*
/Packages
/.htaccess
/index.php
# Ignore temp directory.
/typo3temp/



================================================
FILE: Unity.gitignore
================================================
# This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore
#
.utmp/
/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/[Ll]ogs/
/[Uu]ser[Ss]ettings/
*.log

# By default unity supports Blender asset imports, *.blend1 blender files do not need to be commited to version control.
*.blend1
*.blend1.meta

# MemoryCaptures can get excessive in size.
# They also could contain extremely sensitive data
/[Mm]emoryCaptures/

# Recordings can get excessive in size
/[Rr]ecordings/

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
/[Aa]ssets/Plugins/Editor/JetBrains*
# Jetbrains Rider personal-layer settings
*.DotSettings.user

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Mono auto generated files
mono_crash.*

# Builds
*.apk
*.aab
*.unitypackage
*.unitypackage.meta
*.app

# Crashlytics generated file
crashlytics-build.properties

# TestRunner generated files
InitTestScene*.unity*

# Addressables default ignores, before user customizations
/ServerData
/[Aa]ssets/StreamingAssets/aa*
/[Aa]ssets/AddressableAssetsData/link.xml*
/[Aa]ssets/Addressables_Temp*
# By default, Addressables content builds will generate addressables_content_state.bin
# files in platform-specific subfolders, for example:
# /Assets/AddressableAssetsData/OSX/addressables_content_state.bin
/[Aa]ssets/AddressableAssetsData/*/*.bin*

# Visual Scripting auto-generated files
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Flow/UnitOptions.db
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Flow/UnitOptions.db.meta
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Core/Property Providers
/[Aa]ssets/Unity.VisualScripting.Generated/VisualScripting.Core/Property Providers.meta

# Auto-generated scenes by play mode tests
/[Aa]ssets/[Ii]nit[Tt]est[Ss]cene*.unity*



================================================
FILE: UnrealEngine.gitignore
================================================
# Visual Studio 2015 user specific files
.vs/

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so
*.dylib
*.dll

# Fortran module files
*.mod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.exe
*.out
*.app
*.ipa

# These project files can be generated by the engine
*.xcodeproj
*.xcworkspace
*.sln
*.suo
*.opensdf
*.sdf
*.VC.db
*.VC.opendb
.vsconfig

# Precompiled Assets
SourceArt/**/*.png
SourceArt/**/*.tga

# Binary Files
Binaries/*
Plugins/**/Binaries/*

# Builds
Build/*

# Whitelist PakBlacklist-<BuildConfiguration>.txt files
!Build/*/
Build/*/**
!Build/*/PakBlacklist*.txt

# Don't ignore icon files in Build
!Build/**/*.ico

# Built data for maps
*_BuiltData.uasset

# Configuration files generated by the Editor
Saved/*

# Compiled source files for the engine to use
Intermediate/*
Plugins/**/Intermediate/*

# Cache files for the editor to use
DerivedDataCache/*



================================================
FILE: VBA.gitignore
================================================

# Office temporary files
~$*

# Access database lock files (laccdb, ldb)
*.[lL][aA][cC][cC][dD][bB]
*.[lL][dD][bB]

# The following sections constitute a list of Office file extensions that support VBA.
# If you want to exclude Office files from your repo, uncomment the corresponding file extensions.

# Excel (xls, xlsb, xlsm, xlt, xltm, xla, xlam)
#*.[xX][lL][sS]
#*.[xX][lL][sS][bB]
#*.[xX][lL][sS][mM]
#*.[xX][lL][tT]
#*.[xX][lL][tT][mM]
#*.[xX][lL][aA]
#*.[xX][lL][aA][mM]

# Word (doc, docm, dot, dotm)
#*.[dD][oO][cC]
#*.[dD][oO][cC][mM]
#*.[dD][oO][tT]
#*.[dD][oO][tT][mM]

# Access (accda, accdb, accde, mdb, mde)
#*.[aA][cC][cC][dD][aA]
#*.[aA][cC][cC][dD][bB]
#*.[aA][cC][cC][dD][eE]
#*.[mM][dD][bB]
#*.[mM][dD][eE]

# PowerPoint (ppt, pptm, pot, potm, pps, ppsm)
#*.[pP][pP][tT]
#*.[pP][pP][tT][mM]
#*.[pP][oO][tT]
#*.[pP][oO][tT][mM]
#*.[pP][pP][sS]
#*.[pP][pP][sS][mM]



================================================
FILE: VisualStudio.gitignore
================================================
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates
*.env

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/

[Dd]ebug/x64/
[Dd]ebugPublic/x64/
[Rr]elease/x64/
[Rr]eleases/x64/
bin/x64/
obj/x64/

[Dd]ebug/x86/
[Dd]ebugPublic/x86/
[Rr]elease/x86/
[Rr]eleases/x86/
bin/x86/
obj/x86/

[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
[Aa][Rr][Mm]64[Ee][Cc]/
bld/
[Oo]bj/
[Oo]ut/
[Ll]og/
[Ll]ogs/

# Build results on 'Bin' directories
**/[Bb]in/*
# Uncomment if you have tasks that rely on *.refresh files to move binaries
# (https://github.com/github/gitignore/pull/3736)
#!**/[Bb]in/*.refresh

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.trx

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Approval Tests result files
*.received.*

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.idb
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
# but not Directory.Build.rsp, as it configures directory-level build defaults
!Directory.Build.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio 6 technical files
*.ncb
*.aps

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
**/.paket/paket.exe
paket-files/

# FAKE - F# Make
**/.fake/

# CodeRush personal settings
**/.cr/personal

# Python Tools for Visual Studio (PTVS)
**/__pycache__/
*.pyc

# Cake - Uncomment if you are using it
#tools/**
#!tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog
MSBuild_Logs/

# AWS SAM Build and Temporary Artifacts folder
.aws-sam

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
**/.mfractor/

# Local History for Visual Studio
**/.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
**/.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp



================================================
FILE: VVVV.gitignore
================================================

# .v4p backup files
*~.xml

# Dynamic plugins .dll
bin/



================================================
FILE: Waf.gitignore
================================================
# For projects that use the Waf build system: https://waf.io/
# Dot-hidden on Unix-like systems
.waf-*-*/
.waf3-*-*/
# Hidden directory on Windows (no dot)
waf-*-*/
waf3-*-*/
# Lockfile
.lock-waf_*_build



================================================
FILE: WordPress.gitignore
================================================
# Wordpress - ignore core, configuration, examples, uploads and logs.
# https://github.com/github/gitignore/blob/main/WordPress.gitignore

# Core
#
# Note: if you want to stage/commit WP core files
# you can delete this whole section/until Configuration.
/wp-admin/
/wp-content/index.php
/wp-content/languages
/wp-content/plugins/index.php
/wp-content/themes/index.php
/wp-includes/
/index.php
/license.txt
/readme.html
/wp-*.php
/xmlrpc.php

# Configuration
wp-config.php

# Example themes
/wp-content/themes/twenty*/

# Example plugin
/wp-content/plugins/hello.php

# Uploads
/wp-content/uploads/

# Log files
*.log

# htaccess
/.htaccess

# All plugins
#
# Note: If you wish to whitelist plugins,
# uncomment the next line
#/wp-content/plugins

# All themes
#
# Note: If you wish to whitelist themes,
# uncomment the next line
#/wp-content/themes


================================================
FILE: Xojo.gitignore
================================================
# Xojo (formerly REALbasic and Real Studio)

Builds*
*.debug
*.debug.app
Debug*.exe
Debug*/Debug*.exe
Debug*/Debug*\ Libs
*.rbuistate
*.xojo_uistate
*.obsolete*



================================================
FILE: Yeoman.gitignore
================================================
node_modules/
bower_components/
*.log

build/
dist/



================================================
FILE: Yii.gitignore
================================================
assets/*
!assets/.gitignore
protected/runtime/*
!protected/runtime/.gitignore
protected/data/*.db
themes/classic/views/



================================================
FILE: ZendFramework.gitignore
================================================
# Composer files
composer.phar
vendor/

# Local configs
config/autoload/*.local.php

# Binary gettext files
*.mo

# Data
data/logs/
data/cache/
data/sessions/
data/tmp/
temp/

#Doctrine 2
data/DoctrineORMModule/Proxy/
data/DoctrineORMModule/cache/

# Legacy ZF1
demos/
extras/documentation



================================================
FILE: Zephir.gitignore
================================================
# Cache files, generates by Zephir
.temp/
.libs/

# Object files, generates by linker
*.lo
*.la
*.o
*.loT

# Files generated by configure and Zephir,
# not required for extension compilation.
ext/build/
ext/modules/
ext/Makefile*
ext/config*
ext/acinclude.m4
ext/aclocal.m4
ext/autom4te*
ext/install-sh
ext/ltmain.sh
ext/missing
ext/mkinstalldirs
ext/run-tests.php
ext/.deps
ext/libtool



================================================
FILE: Zig.gitignore
================================================
.zig-cache/
zig-out/
*.o



================================================
FILE: community/Alteryx.gitignore
================================================
# gitignore template for Alteryx Designer
# website: https://www.alteryx.com/
# website: https://help.alteryx.com/current/designer/alteryx-file-types

# Alteryx Data Files
*.yxdb
*.cydb
*.cyidx
*.rptx
*.vvf
*.aws

# Alteryx Special Files
*.yxwv
*.yxft
*.yxbe
*.bak
*.pcxml
*.log
*.bin
*.yxlang
CASS.ini

# Alteryx License Files
*.yxlc
*.slc
*.cylc
*.alc
*.gzlc

## gitignore reference sites
# https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring
# https://git-scm.com/docs/gitignore
# https://help.github.com/articles/ignoring-files/

## Useful knowledge from stackoverflow
# Even if you haven't tracked the files so far, git seems to be able to "know" about them even after you add them to .gitignore.
# WARNING: First commit your current changes, or you will lose them.
# Then run the following commands from the top folder of your git repo:
# git rm -r --cached .
# git add .
# git commit -m "fixed untracked files"

# author: Kacper Ksieski


================================================
FILE: community/AltiumDesigner.gitignore
================================================
# For PCBs designed using Altium Designer
# Website: https://www.altium.com/altium-designer/

# Directories containing cache data
History
__Previews

# Directories containing logs and generated outputs
Project\ Logs*
Project\ Outputs*

# Misc files generated by altium
debug.log
Status\ Report.txt
*.PcbDoc.htm
*.SchDocPreview
*.PcbDocPreview

# Lock files sometimes left behind
.~lock.*



================================================
FILE: community/AutoIt.gitignore
================================================
# Compiled Scripts
*.a3x

# Tidy Auto-Generated Backups
Backup/*

# Au3Stripper Auto-Generated Files
*_stripped.au3



================================================
FILE: community/AutomationStudio.gitignore
================================================
# gitignore template for B&R Automation Studio (AS) 4
# website: https://www.br-automation.com/en-us/products/software/automation-software/automation-studio/

# AS temporary directories
Binaries/
Diagnosis/
Temp/
TempObjects/

# AS transfer files
*artransfer.br
*arTrsfmode.nv

# 'ignored' directory
ignored/

# ARNC0ext
*arnc0ext.br

# AS File types
*.bak
*.isopen
*.orig
*.log
*.asar
*.csvlog*
*.set
!**/Physical/**/*.set

# RevInfo variables
*RevInfo.var



================================================
FILE: community/B4X.gitignore
================================================
**/Objects
**/AutoBackups
*.meta



================================================
FILE: community/Bazel.gitignore
================================================
# gitignore template for Bazel build system
# website: https://bazel.build/

# Ignore all bazel-* symlinks. There is no full list since this can change
# based on the name of the directory bazel is cloned into.
/bazel-*

# Directories for the Bazel IntelliJ plugin containing the generated
# IntelliJ project files and plugin configuration. Separate directories are
# for the IntelliJ, Android Studio and CLion versions of the plugin.
/.ijwb/
/.aswb/
/.clwb/



================================================
FILE: community/Beef.gitignore
================================================
build/
recovery/
BeefSpace_User.toml



================================================
FILE: community/Dotter.gitignore
================================================
# local files are for host-specific overrides
.dotter/local.toml

# ignore caches
.dotter/cache.toml
.dotter/cache



================================================
FILE: community/Exercism.gitignore
================================================
# gitignore template for Exercism project
# website: https://exercism.io/

# Ignore .exercism folder which contain sensitive data
.exercism



================================================
FILE: community/Gretl.gitignore
================================================
# gitignore template for Gretl
# website: http://gretl.sourceforge.net/

# Auto-generated log file is overwritten whenever you start a new session
session.inp

# Auto-generated temporary string code table
string_table.txt



================================================
FILE: community/Hexo.gitignore
================================================
# gitignore template for Hexo sites
# website: https://hexo.io/
# Recommended: Node.gitignore

# Ignore generated directory
public/

# Ignore temp files
tmp/
.tmp*

# additional files
db.json
.deploy*/



================================================
FILE: community/LensStudio.gitignore
================================================
# gitignore template for LensStudio
# website: https://lensstudio.snapchat.com/

# macOS/IDE #
.DS_Store
.idea

# js #
node_modules
yarn.lock

# Python #
__pycache__/
*.py[cod]
*$py.class
[Bb]ackup*



================================================
FILE: community/libogc.gitignore
================================================
# Ignore build directories
build/

# Ignore Wii-specific metadata files
meta.xml
icon.png


# Ignore editor or IDE-specific files
.vscode/
.idea/
*.sublime-project
*.sublime-workspace

# Ignore backup or temporary files
*~
*.bak
*.swp
*.tmp

# Ignore log files
*.log

# Ignore libraries and dependencies
lib/
deps/
obj/

# Ignore operating system-specific files
$RECYCLE.BIN/
.Trash-1000/
.Spotlight-V100/
.fseventsd/
.DS_Store

# Prerequisites
*.d

# Object files
*.o
*.ko
*.obj
*.elf
*.o
*.bin

# Linker output
*.ilk
*.map
*.exp

# Precompiled Headers
*.gch
*.pch

# Libraries
*.lib
*.a
*.la
*.lo

# Shared objects (inc. Windows DLLs)
*.dll
*.so
*.so.*
*.dylib

# Executables
*.exe
*.out
*.app
*.i*86
*.x86_64
*.hex
*.dol
*.elf

# Debug files
*.dSYM/
*.su
*.idb
*.pdb

# Kernel Module Compile Results
*.mod*
*.cmd
.tmp_versions/
modules.order
Module.symvers
Mkfile.old
dkms.conf



================================================
FILE: community/Logtalk.gitignore
================================================
# gitignore template for LogTalk, a programming language that builds upon Prolog
# website: https://logtalk.org/

# Logtalk temporary file directories
.lgt_tmp/
lgt_tmp/

# Logtalk default unit testing and doclet results and logs directories
logtalk_tester_logs/
logtalk_doclet_logs/

# backend Prolog compiler temporary files
.pl-history
*.out
*.xwam
*.qo
*.ql
*.itf
*.po



================================================
FILE: community/MetaTrader5.gitignore
================================================
# MetaTrader 5 and MQL5 gitignore template
# Project homepage: https://www.metatrader5.com/en

# Compiled MQL5 executables (binaries)
# These are generated from .mq5 source files and should not be committed.
*.ex5
*.ex4 # For MQL4 compatibility if you also manage MT4 projects in a similar structure

# Log files
# Terminal logs, strategy tester logs, and custom logs from Print() functions.
*.log
*.slog # Strategy Tester logs

# Strategy Tester specific files
# History data, optimization results, and temporary files used by the tester.
*.fxt  # FXT files (history data for testing)
*.hst  # History data files (can be large)
*.ini  # Initialization files (often generated by tester or EAs)
*.dat  # Data files (various purposes, often temporary)
*.csv  # CSV export files (e.g., from tester reports)
*.jrn  # Journal files (tester journal)

# Market Watch sets and profiles
# User-specific lists of symbols in Market Watch, and terminal profiles.
*.set  # Market Watch symbol sets
*.tpl  # Chart templates
*.chr  # Chart settings files (can be generated when saving templates or profiles)

# External libraries (DLLs)
# If you use custom DLLs, you might want to ignore them if they are built separately
# and not part of your MQL5 source code repository.
*.dll

# User-specific configuration and credentials
# Files containing sensitive information or local user settings.
.env   # Environment variables (e.g., for Python integration credentials)
*.cfg  # Configuration files (if not meant to be shared)
*.json # Be careful: if you have config JSONs you *do* want to commit, add specific exceptions.
       # Example: !config.json (to include config.json but ignore other *.json)

# Temporary files and backup files generated by MetaEditor
*.~*   # Temporary files (e.g., ~MyScript.mq5)
*.bak  # Backup files (e.g., MyScript.mq5.bak)
*.mqh.bak
*.mq5.bak

# MetaEditor project files
# Project files for MetaEditor workspaces.
.mqproj

# Python specific ignores (if you also keep Python scripts or Jupyter notebooks in this repository)
# These are relevant if your Git repo root is higher up (e.g., the terminal folder itself)
# or if you mix Python code within your MQL5 structure.
__pycache__/       # Python compiled bytecode cache
.ipynb_checkpoints/ # Jupyter Notebook checkpoints
*.pyc              # Python compiled files
*.pyd              # Python dynamic modules



================================================
FILE: community/Move.gitignore
================================================
# Generated by Move
# will have compiled files
build/

# Remove possibly saving credentials to the git repository
.aptos/



================================================
FILE: community/NasaSpecsIntact.gitignore
================================================
# gitignore template for Nasa SpecsIntact (SI)
# Website: https://specsintact.ksc.nasa.gov/
#
# Recommended:
# MicrosoftOffice.gitignore
#

# SpecsIntact (SI) Locking file; this would lock everyone out.
*.se$

# SI Reports; auto-generated. They do not belong in the repository
# as they will be re-created exactly when using a specific checkout point.
*.RPT
ADDRVER.*
BRKTVER.*
DUPEREF.*
REFVER.*
SECTVER.*
SUBMVER.*
TTLDIFFS.*

# SpecsIntact files that change a lot and don't actually affect SI
# PULL.TBL is an auto-generated file to help speed SI loading.
PULL.TBL
pulltbl.bck

# Tailoring information.
# Keep tailor.tag; it is a list of tailoring options in SI.

# JOB.OTL informs SI where a spec section came from.
# Keeping the old one isn't useful in git.
JOB.OTL.OLD

# OneNote TOC Files; SI Work Directories may be installed in a location co-located with OneNote
# notebooks, and if so, OneNote will litter the SI folder with these.
*.onetoc*

# Log files, typically tagfix or other auto generated logs that aren't useful
# outside of the user that made them and clutter up the index.
*.log



================================================
FILE: community/OpenSSL.gitignore
================================================
# OpenSSL-related files best not committed

## Certificate Authority
*.ca

## Certificate
*.crt

## Certificate Sign Request
*.csr

## Certificate
*.der

## Key database file
*.kdb

## OSCP request data
*.org

## PKCS #12
*.p12

## PEM-encoded certificate data
*.pem

## Random number seed
*.rnd

## SSLeay data
*.ssleay

## S/MIME message
*.smime



================================================
FILE: community/OpenTofu.gitignore
================================================
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tofu
override.tf.json
override.tofu.json
*_override.tf
*_override.tofu
*_override.tf.json
*_override.tofu.json

# Ignore transient lock info files created by tofu apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf
# !example_override.tofu

# Include tfplan files to ignore the plan output of command: tofu plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc



================================================
FILE: community/Puppet.gitignore
================================================
# gitignore template for Puppet modules
# website: https://forge.puppet.com/

# Built packages
pkg/*

# Should run on multiple platforms so don't check in
Gemfile.lock

# Tests
spec/fixtures/*
coverage/*

# Third-party
vendor/*
.bundle/*



================================================
FILE: community/Racket.gitignore
================================================
# gitignore template for the Racket language
# website: http://www.racket-lang.org/

# DrRacket autosave files
*.rkt~
*.rkt.bak
\#*.rkt#
\#*.rkt#*#

# Compiled racket bytecode
compiled/
*.zo

# Dependency tracking files
*.dep



================================================
FILE: community/Red.gitignore
================================================
# gitignore template for Red programming language
# website: http://www.red-lang.org/

# Red Compiled code
*.red

# Libraries
crush.dll
crush.dylib
crush.so

# Files generated during test
quick-test/quick-test.log
quick-test/runnable/
system/tests/source/units/auto-tests/
tests/source/units/auto-tests/



================================================
FILE: community/ROS2.gitignore
================================================
install/
log/
build/

# Ignore generated docs
*.dox
*.wikidoc

# eclipse stuff
.project
.cproject

# qcreator stuff
CMakeLists.txt.user

srv/_*.py
*.pcd
*.pyc
qtcreator-*
*.user

*~

# Emacs
.#*

# Colcon custom files
COLCON_IGNORE
AMENT_IGNORE



================================================
FILE: community/SPFx.gitignore
================================================
#SharePoint Framework (SPFx)
# Logs
logs
*.log
npm-debug.log*

# Dependency directories
node_modules

# Build generated files
dist
lib
solution
temp
*.sppkg

# Coverage directory used by tools like istanbul
coverage

# OSX
.DS_Store

# Visual Studio files
.ntvs_analysis.dat
.vs
bin
obj

# Resx Generated Code
*.resx.ts

# Styles Generated Code
*.scss.ts



================================================
FILE: community/Splunk.gitignore
================================================
# gitignore template for Splunk apps
# documentation: http://docs.splunk.com/Documentation/Splunk/6.2.3/admin/Defaultmetaconf

# Splunk local meta file
local.meta

# Splunk local folder
local



================================================
FILE: community/Strapi.gitignore
================================================
############################
# OS X
############################

.DS_Store
.AppleDouble
.LSOverride
Icon
.Spotlight-V100
.Trashes
._*


############################
# Linux
############################

*~


############################
# Windows
############################

Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msm
*.msp


############################
# Packages
############################

*.7z
*.csv
*.dat
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
*.com
*.class
*.dll
*.exe
*.o
*.seed
*.so
*.swo
*.swp
*.swn
*.swm
*.out
*.pid


############################
# Logs and databases
############################

.tmp
*.log
*.sql
*.sqlite


############################
# Misc.
############################

*#
.idea
nbproject
.vscode/


############################
# Node.js
############################

lib-cov
lcov.info
pids
logs
results
build
node_modules
.node_history
package-lock.json
**/package-lock.json
!docs/package-lock.json
*.heapsnapshot


############################
# Tests
############################

testApp
coverage
cypress/screenshots
cypress/videos


############################
# Documentation
############################

dist

############################
# Builds
############################

packages/strapi-generate-new/files/public/

############################
# Example app
############################

.dev
# *.cache

############################
# Visual Studio Code
############################

front-workspace.code-workspace



================================================
FILE: community/Terragrunt.gitignore
================================================
# Ignore the default terragrunt cache directory
# https://terragrunt.gruntwork.io/docs/features/caching/
.terragrunt-cache



================================================
FILE: community/Toit.gitignore
================================================
.packages
*_pb.toit



================================================
FILE: community/UiPath.gitignore
================================================
# gitignore template for RPA development using UiPath Studio
# website: https://www.uipath.com/product/studio
#
# Recommended: n/a

# Ignore folders that could cause issues if accidentally tracked
**/.local/**
**/.settings/**
**/.objects/**
**/.tmh/**
**/*.log



================================================
FILE: community/UTAU.gitignore
================================================
# Adobe Audition
*.pkf

# UTAU Engines
*.ctspec
*.d4c
*.dio
*.frc
*.frt
*.frq
*.harvest
*.lessaudio
*.llsm
*.mrq
*.pitchtier
*.platinum
*.pmk
*.sc.npz
*.star
*.uspec
*.vs4ufrq

# UTAU related tools
$read
*.setParam-Scache
*.lbp
*.lbp.caches/*

# OpenUtau
errors.txt

# Deepvocal
*.DVModel
*-log.txt
SKC
SKI
SKC_1
SKC_2
*.sksd

# VocalSharp
*.scep
*.vssf
*.vsdx
*.vsdxindex

# Binary Archive
*.7z
*.zip
*.rar
*.exe




================================================
FILE: community/V.gitignore
================================================
*.exe
*.o
*.so
*.tmp.c
*.exp
*.ilk
*.pdb
*.dll
*.lib
*.bak
*.out



================================================
FILE: community/Xilinx.gitignore
================================================
# gitignore template for Xilinx Vivado Design Suite
# website: https://www.xilinx.com/support/download.html

# [home]
*.jou
*.log
*.debug
*.str
*.zip
*.tmp
*.rst
*.os
*.js
*.pb
*.dcp
*.hwdef
*.vds
*.veo
*.wdf
*.vdi
*.dmp
*.rpx
*.rpt
*_stub.v
*_stub.vhdl
*_funcsim.v
*_funcsim.vhdl
.project

# [dir]
*.cache
.metadata
*.data
*.ipdefs
.Xil
*.sdk
*.hw
*.ip_user_files

### IP synth
*_synth_*

.jobs

### project synth
*/*.runs/synth*/*.xml
*/*.runs/synth*/*.txt
*/*.runs/synth*/*.sh
*/*.runs/synth*/*.tcl
*/*.runs/synth*/*.bat
*/*.runs/synth*/*.xdc
!*/*.runs/synth*/*utilization*.rpt

*.runs/synth*/*.xml
*.runs/synth*/*.txt
*.runs/synth*/*.sh
*.runs/synth*/*.tcl
*.runs/synth*/*.bat
*.runs/synth*/*.xdc
!*.runs/synth*/*utilization*.rpt

### project impl
*/*.runs/impl*/*.xml
*/*.runs/impl*/*.html
*/*.runs/impl*/*.txt
*/*.runs/impl*/*.sh
*/*.runs/impl*/*.tcl
*/*.runs/impl*/*.bat
!*/*.runs/impl*/*utilization*.rpt

*.runs/impl*/*.xml
*.runs/impl*/*.html
*.runs/impl*/*.txt
*.runs/impl*/*.sh
*.runs/impl*/*.tcl
*.runs/impl*/*.bat
!*.runs/impl*/*utilization*.rpt

### block design
*/*/bd/*/hdl
*/*/*/bd/*/hdl

*/*/bd/*/*.xdc
*/*/*/bd/*/*.xdc

*/*/bd/*/ip/*/*.xdc
*/*/*/bd/*/ip/*/*.xdc

*/*/bd/*/ip/*/*/
*/*/*/bd/*/ip/*/*/

*/*/bd/*/ip/*/*.vhd
*/*/*/bd/*/ip/*/*.vhd

*/*/bd/*/ip/*/*.xml
*/*/*/bd/*/ip/*/*.xml

*.c
*.h
*.vho
*.html
*/*/bd/*/ip/*/*.tcl
*/*/*/bd/*/ip/*/*.tcl
hw_handoff
ipshared



================================================
FILE: community/AWS/CDK.gitignore
================================================
# CDK asset staging directory.
# For more information about AWS-CDK, see  https://docs.aws.amazon.com/cdk/
.cdk.staging/
cdk.out/



================================================
FILE: community/AWS/SAM.gitignore
================================================
# gitignore template for AWS Serverless Application Model project
# website: https://docs.aws.amazon.com/serverless-application-model

# Ignore build folder
.aws-sam/



================================================
FILE: community/BoxLang/ColdBox.gitignore
================================================
# Servelet Ignores
WEB-INF

# Engines + Database + CBFS + Secrets
.tmp/**
.env
.engine/**
.cbfs/**

# Logs + Test Results
logs/**
tests/results/**

## Ignored Dependencies
/boxlang_modules/*
effective-pom.xml
/coldbox/**
/testbox/**
/modules/**
/lib/java/**

# NPM JS Assets (If applicable)
**/node_modules/*
npm-debug.log
yarn-error.log



================================================
FILE: community/CFML/ColdBox.gitignore
================================================
# Servelet Ignores
WEB-INF

# Engines + Database + CBFS + Secrets
.tmp/**
.env
.engine/**
.cbfs/**

# Logs + Test Results
logs/**
tests/results/**

## Ignored Dependencies
effective-pom.xml
/coldbox/**
/testbox/**
/modules/**
/lib/java/**

# NPM JS Assets (If applicable)
**/node_modules/*
npm-debug.log
yarn-error.log



================================================
FILE: community/DotNet/core.gitignore
================================================
*.swp
*.*~
project.lock.json
.DS_Store
*.pyc
nupkg/

# Visual Studio Code
.vscode

# Rider
.idea

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio 2015
.vs/




================================================
FILE: community/DotNet/InforCMS.gitignore
================================================
# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in



================================================
FILE: community/DotNet/Kentico.gitignore
================================================
# gitignore template for using Kentico CMS
# website: http://www.kentico.com/
#
# Recommended template: VisualStudio.gitignore

# Include some Kentico folders excluded by Visual Studio rules
!CMS/CMSAdminControls/*/
!CMS/CMSModules/System/*/
!CMS/App_Data/CIRepository/**

# Kentico temporary/environment files
CMS/App_Data/AzureCache
CMS/App_Data/AzureTemp
CMS/App_Data/CMSModules/DeviceProfile/logFiftyOne.txt
CMS/App_Data/CMSModules/DeviceProfiles/logFiftyOne.txt
CMS/App_Data/CMSModules/WebFarm/webfarm.sync
CMS/App_Data/CMSTemp
CMS/App_Data/Persistent
CMS/CMSSiteUtils/Export
CMS/CMSSiteUtils/Import

# Ignore all smart search indexes, but not the other system folder contents
CMS/App_Data/CMSModules/SmartSearch/**
!CMS/App_Data/CMSModules/SmartSearch/*/
!CMS/App_Data/CMSModules/SmartSearch/_StopWords/**
!CMS/App_Data/CMSModules/SmartSearch/_Synonyms/**

## Kentico Starter Sites
# Starter site resource Files
CMS/App_Data/DancingGoat

# Starter site web templates
CMS/App_Data/Templates/CommunitySite
CMS/App_Data/Templates/CorporateSite
CMS/App_Data/Templates/DancingGoat
CMS/App_Data/Templates/EcommerceSite
CMS/App_Data/Templates/IntranetPortal
CMS/App_Data/Templates/PersonalSite

# Starter site app themes
CMS/App_Themes/CommunitySite
CMS/App_Themes/CorporateSite
CMS/App_Themes/EcommerceSite
CMS/App_Themes/IntranetPortal*
CMS/App_Themes/PersonalSite

# Starter site ASPX templates
CMS/CMSTemplates/CorporateSite

# Starter site media libraries
CMS/CommunitySite
CMS/CorporateSite
CMS/DancingGoat
CMS/EcommerceSite
CMS/IntranetPortal
CMS/PersonalSite

## Project specific ignores
# Sensitive settings
AppSettings.config
ConnectionStrings.config

# Project media libraries (recommend shared file storage)
# e.g. CMS/{SiteCodeName}



================================================
FILE: community/DotNet/Umbraco.gitignore
================================================
## Ignore Umbraco files/folders generated for each instance
##
## Get latest from https://github.com/github/gitignore/blob/main/Umbraco.gitignore

# Note: VisualStudio gitignore rules may also be relevant

# Umbraco
# Ignore unimportant folders generated by Umbraco
**/App_Data/Logs/
**/App_Data/[Pp]review/
**/App_Data/TEMP/
**/App_Data/NuGetBackup/

# Ignore Umbraco content cache file
**/App_Data/umbraco.config

## this [Uu]mbraco/ folder should be created by cmd like `Install-Package UmbracoCms -Version 8.5.3`
## you can find your Umbraco version in your Web.config. (i.e. <add key="Umbraco.Core.ConfigurationStatus" value="8.5.3" />)
## Uncomment this line if you think it fits the way you work on your project.
## **/[Uu]mbraco/

## The [Mm]edia/ folder contains content. Content may vary by environment and should therefore not be added to source control.
## Uncomment this line if you think it fits the way you work on your project.
## **/[Mm]edia/

# Don't ignore Umbraco packages (VisualStudio.gitignore mistakes this for a NuGet packages folder)
# Make sure to include details from VisualStudio.gitignore BEFORE this
!**/App_Data/[Pp]ackages/*
!**/[Uu]mbraco/[Dd]eveloper/[Pp]ackages/*
!**/[Uu]mbraco/[Vv]iews/[Pp]ackages/*

# ImageProcessor DiskCache
**/App_Data/cache/

# Ignore the Models Builder models out of date flag
**/ood.flag

# NEW for version 9 .Net 5 (Core)
#ignore umbraco backoffice assest from wwwroot
**/wwwroot/umbraco/

# SQLite files
*.sqlite.db*

#ignore umbraco data/views/settings
**/umbraco/*

#include default location for modelsbuilder output
!**/umbraco/models

#include default location for packages
!**/umbraco/Data/packages



================================================
FILE: community/Elixir/Phoenix.gitignore
================================================
# gitignore template for Phoenix projects
# website: http://www.phoenixframework.org/
#
# Recommended template: Elixir.gitignore

# Temporary files
/tmp

# Static artifacts
/node_modules
/assets/node_modules

# Since we are building assets from web/static,
# we ignore priv/static. You may want to comment
# this depending on your deployment strategy.
/priv/static/

# Installer-related files
/installer/_build
/installer/tmp
/installer/doc
/installer/deps



================================================
FILE: community/embedded/AtmelStudio.gitignore
================================================
## Ignore Atmel Studio temporary files and build results
# https://www.microchip.com/mplab/avr-support/atmel-studio-7

# Atmel Studio is powered by an older version of Visual Studio,
# so most of the project and solution files are the same as VS files,
# only prefixed by an `at`.

#Build Directories
[Dd]ebug/
[Rr]elease/

#Build Results
*.o
*.d
*.eep
*.elf
*.hex
*.map
*.srec

#User Specific Files
*.atsuo



================================================
FILE: community/embedded/esp-idf.gitignore
================================================
# gitignore template for esp-idf, the official development framework for ESP32
# https://github.com/espressif/esp-idf

build/
sdkconfig
sdkconfig.old



================================================
FILE: community/embedded/IAR_EWARM.gitignore
================================================
# gitignore template for the IAR EWARM
# website: https://www.iar.com/knowledge/support/technical-notes/ide/which-files-should-be-version-controlled/

# Some tools will put the EWARM files
# under a subdirectory with the same name
# as the configuration.
# Example
# EWARM/Config1/Obj /List /Exe
# EWARM/Config2/Obj /List /Exe
EWARM/**/Obj
EWARM/**/List
EWARM/**/Exe

# Autogenerated project files
*.dep
*.ewt

# Autogenerated folder for debugger
EWARM/settings



================================================
FILE: community/embedded/uVision.gitignore
================================================
# git ignore file for Keil Ã‚ÂµVision Project

# Ã‚ÂµVision 5 and Ã‚ÂµVision 4 Project screen layout file
*.uvguix.*
*.uvgui.*

# Listing Files
*.i
*.lst
*.m51
*.m66
*.map

# Object Files
*.axf
*.b[0-2][0-9]
*.b3[0-1]
*.bak
*.build_log.htm
*.crf
*.d
*.dep
*.elf
*.htm
*.iex
*.lnp
*.o
*.obj
*.sbr

# Firmware Files
*.bin
*.h86
*.hex

# Build Files
.bat

# Debugger Files
.ini

# JLink Files
JLinkLog.txt

# Other Files



================================================
FILE: community/GNOME/GNOMEShellExtension.gitignore
================================================
# Ignored files for GNOME extension git repository

*.zip



================================================
FILE: community/Golang/Go.AllowList.gitignore
================================================
# Allowlisting gitignore template for GO projects prevents us
# from adding various unwanted local files, such as generated
# files, developer configurations or IDE-specific files etc.
#
# Recommended: Go.AllowList.gitignore

# Ignore everything
*

# But not these files...
!/.gitignore

!*.go
!go.sum
!go.mod

!README.md
!LICENSE

# !Makefile

# ...even if they are in subdirectories
!*/



================================================
FILE: community/Golang/Hugo.gitignore
================================================
# Generated files by hugo
/public/
/resources/_gen/
/assets/jsconfig.json
hugo_stats.json

# Executable may be added to repository
hugo.exe
hugo.darwin
hugo.linux

# Temporary lock file while building
/.hugo_build.lock



================================================
FILE: community/Java/JBoss4.gitignore
================================================
# gitignore for JBoss v4 projects

/server/all/data
/server/all/log
/server/all/tmp
/server/all/work
/server/default/data
/server/default/log
/server/default/tmp
/server/default/work
/server/minimal/data
/server/minimal/log
/server/minimal/tmp
/server/minimal/work

# Note:
# there may be other directories that contain *.xml.failed or *.war.failed files
/server/default/deploy/*.xml.failed
/server/default/deploy/*.war.failed



================================================
FILE: community/Java/JBoss6.gitignore
================================================
# gitignore for JBoss v6 projects
#
# Note: to ensure empty directories remain part of the repository, like
# `/server/minimal/lib`, you should add an empty `.gitignore` or `.gitkeep` file
# to the directory - otherwise you may have issues when starting the service.

/server/all/data
/server/all/log
/server/all/tmp
/server/all/work
/server/default/data
/server/default/log
/server/default/tmp
/server/default/work
/server/minimal/data
/server/minimal/log
/server/minimal/tmp
/server/minimal/work
/server/jbossweb-standalone/data
/server/jbossweb-standalone/log
/server/jbossweb-standalone/tmp
/server/jbossweb-standalone/work
/server/standard/data
/server/standard/log
/server/standard/tmp
/server/standard/work
/server/default/deploy/*.jar.failed
/server/default/deploy/*.jar.dodeploy
/server/default/deploy/*.xml.failed
/server/default/deploy/*.xml.dodeploy
/server/default/deploy/*.war.failed
/server/default/deploy/*.war.dodeploy




================================================
FILE: community/JavaScript/Cordova.gitignore
================================================
# gitignore template for the Cordova framework
# website: https://cordova.apache.org/
#
# Recommended template: Node.gitignore

# App platform binaries and built files
/platforms

# Optional to ignore plugin Git clones
#/plugins



================================================
FILE: community/JavaScript/Expo.gitignore
================================================
#Ã¢â‚¬Æ’.gitignore template for Expo
#Ã¢â‚¬Æ’website: https://expo.dev/
#Ã¢â‚¬Æ’docs: https://docs.expo.dev/workflow/expo-cli/
#
#Ã¢â‚¬Æ’Rationale:
#Ã¢â‚¬Æ’node_modules/ is always ignored
#Ã¢â‚¬Æ’.expo/, .expo-shared/ are ExpoÃ¢â‚¬â„¢s local state and project-settings cache (see docs)
#Ã¢â‚¬Æ’ Metro caches/logs are *.expo, *.tunnel, *.cache, *.tmp, *.log

# Node modules
node_modules/

# Expo local state and caches
.expo/             # runtime state (Metro bundler, dev-client data, tunnels)
.expo-shared/      # shared project settings (app.json edits, etc.)

# Metro bundler caches/logs
*.expo             # generic Expo temp files
*.tunnel           # Expo DevTools tunnels
*.cache            # Metro cache folder
*.tmp              # temp files created during bundling
*.log              # build or Metro logs

# Environment variables
.env
.env.local
.env.*.local

# Package manager logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*



================================================
FILE: community/JavaScript/Meteor.gitignore
================================================
# gitignore template for the Meteor framework
# website: https://www.meteor.com/
#
# Recommended template: Node.gitignore

# protect api keys in setting json
settings-production.json
settings.json

# protect your mup.json settings
mup.json
mup.js



================================================
FILE: community/JavaScript/NWjs.gitignore
================================================
# gitignore template for NW.js projects
# website: https://nwjs.io/

# Seen in standard and sdk versions
credits.html
locales/
libEGL.dll
libGLEv2.dll
node.dll
nw.dll
nw.exe
natives_blob.bin
nw_100_percent.pak
nw_200_percent.pak
nw_elf.dll
snapshot_blob.bin
resources.pak

# Seen only in standard
d3dcompiler_47.dll
ffmpeg.dll
icudtl.dat

# Seen only in sdk
pnacl/
chromedriver.exe
nacl_irt_x86_64.nexe
nwjc.exe
payload.exe



================================================
FILE: community/JavaScript/Vue.gitignore
================================================
# gitignore template for Vue.js projects
#
# Recommended template: Node.gitignore

# TODO: where does this rule come from?
docs/_book

# TODO: where does this rule come from?
test/



================================================
FILE: community/Linux/Snap.gitignore
================================================
# gitginore template for creating Snap packages
# website: https://snapcraft.io/

parts/
prime/
stage/
*.snap

# Snapcraft global state tracking data(automatically generated)
# https://forum.snapcraft.io/t/location-to-save-global-state/768
/snap/.snapcraft/

# Source archive packed by `snapcraft cleanbuild` before pushing to the LXD container
/*_source.tar.bz2



================================================
FILE: community/Obsidian/NotesAndCoreConfiguration.gitignore
================================================
# Excludes Obsidian workspace cache and plugins. All notes and core obsidian
# configuration files are tracked by Git.

# The current application UI state (DOM layout, recently-opened files, etc.) is
# stored in these files (separate for desktop and mobile) so you can resume
# your session seamlessly after a restart. If you want to track UI state, use
# the Workspaces core plugin instead of relying on these files.
.obsidian/workspace.json
.obsidian/workspace-mobile.json

# Obsidian plugins are stored under .obsidian/plugins/$plugin_name. They
# contain metadata (manifest.json), application code (main.js), stylesheets
# (styles.css), and user-configuration data (data.json).
# We want to exclude all plugin-related files, so we can exclude everything
# under this directory.
.obsidian/plugins/**/*



================================================
FILE: community/Obsidian/NotesAndExtendedConfiguration.gitignore
================================================
# Excludes Obsidian workspace cache and plugin code, but retains plugin
# configuration. All notes and user-controlled configuration files are tracked
# by Git.
#
# 				!!! WARNING !!!
#
# Community plugins may store sensitive secrets in their data.json files. By
# including these files, those secrets may be tracked in your Git repository.
#
# To ignore configurations for specific plugins, add a line like this after the
# contents of this file (order is important):
#     .obsidian/plugins/{{plugin_name}}/data.json
#
# Alternatively, ensure that you are treating your entire Git repository as
# sensitive data, since it may contain secrets, or may have contained them in
# past commits.  Understand your threat profile, and make the decision
# appropriate for yourself. If in doubt, err on the side of not including
# plugin configuration. Use one of the alternative gitignore files instead:
# * NotesOnly.gitignore
# * NotesAndCoreConfiguration.gitignore

# The current application UI state (DOM layout, recently-opened files, etc.) is
# stored in these files (separate for desktop and mobile) so you can resume
# your session seamlessly after a restart. If you want to track UI state, use
# the Workspaces core plugin instead of relying on these files.
.obsidian/workspace.json
.obsidian/workspace-mobile.json

# Obsidian plugins are stored under .obsidian/plugins/$plugin_name. They
# contain metadata (manifest.json), application code (main.js), stylesheets
# (styles.css), and user-configuration data (data.json).
# We only want to track data.json, so we:
# 1. exclude everything that the plugin folders contain,
# 2. unignore data.json in the plugin folders
.obsidian/plugins/*/**
!.obsidian/plugins/*/data.json



================================================
FILE: community/Obsidian/NotesOnly.gitignore
================================================
# Excludes all Obsidian-related configuration. All notes are tracked by Git.

# All Obsidian configuration and runtime state is stored here
.obsidian/**/*



================================================
FILE: community/PHP/Bitrix.gitignore
================================================
# gitignore template for 1C-Bitrix, a PHP-based CMS
# website: https://www.1c-bitrix.ru

#Exclude all of core files
/bitrix/*

#But not the templates and non bitrix components
!/bitrix/templates
!/bitrix/components
/bitrix/components/bitrix

#Exclude bitrix gadgets
!/bitrix/gadgets
/bitrix/gadgets/bitrix

#User can use that directory to store some stuff, but it's not really recommended, just use /local instead of this
!/bitrix/php_interface/

#Exclude database configs
/bitrix/php_interface/dbconn.php

#Exclude default file storage directory
/upload/



================================================
FILE: community/PHP/CodeSniffer.gitignore
================================================
# gitignore for the PHP Codesniffer framework
# website: https://github.com/squizlabs/PHP_CodeSniffer
#
# Recommended template: PHP.gitignore

/wpcs/*



================================================
FILE: community/PHP/Drupal7.gitignore
================================================
# gitignore template for Drupal 7 projects
#
# It is recommended that you use `Drupal.gitignore` as this is the latest version

# Ignore configuration files that may contain sensitive information.
sites/*/*settings*.php
sites/example.sites.php

# Ignore paths that contain generated content.
files/
sites/*/files
sites/*/private
sites/*/translations

# Ignore default text files
robots.txt
/CHANGELOG.txt
/COPYRIGHT.txt
/INSTALL*.txt
/LICENSE.txt
/MAINTAINERS.txt
/UPGRADE.txt
/README.txt
sites/README.txt
sites/all/libraries/README.txt
sites/all/modules/README.txt
sites/all/themes/README.txt

# Ignore everything but the "sites" folder ( for non core developer )
.htaccess
web.config
authorize.php
cron.php
index.php
install.php
update.php
xmlrpc.php
/includes
/misc
/modules
/profiles
/scripts
/themes



================================================
FILE: community/PHP/Jigsaw.gitignore
================================================
# gitignore template for Jigsaw Static Site Generator
#
# website - https://jigsaw.tighten.co

# Ignore build folder
build_*



================================================
FILE: community/PHP/Magento1.gitignore
================================================
# gitignore template for Magento v1 projects
#
# It is recommended that you use `Magento.gitignore` as this is the latest version

/PATCH_*.sh

/app/etc/local.xml

/media/*
!/media/.htaccess

!/media/customer
/media/customer/*
!/media/customer/.htaccess

!/media/dhl
/media/dhl/*
!/media/dhl/logo.jpg

!/media/downloadable
/media/downloadable/*
!/media/downloadable/.htaccess

!/media/xmlconnect
/media/xmlconnect/*

!/media/xmlconnect/custom
/media/xmlconnect/custom/*
!/media/xmlconnect/custom/ok.gif

!/media/xmlconnect/original
/media/xmlconnect/original/*
!/media/xmlconnect/original/ok.gif

!/media/xmlconnect/system
/media/xmlconnect/system/*
!/media/xmlconnect/system/ok.gif

/var/*
!/var/.htaccess

!/var/package
/var/package/*
!/var/package/*.xml




================================================
FILE: community/PHP/Magento2.gitignore
================================================
/sitemap
/sitemap.xml
/pub/sitemap
/pub/sitemap.xml
/app/config_sandbox
/app/etc/config.php
/app/etc/env.php
/app/code/Magento/TestModule*
/lib/internal/flex/uploader/.actionScriptProperties
/lib/internal/flex/uploader/.flexProperties
/lib/internal/flex/uploader/.project
/lib/internal/flex/uploader/.settings
/lib/internal/flex/varien/.actionScriptProperties
/lib/internal/flex/varien/.flexLibProperties
/lib/internal/flex/varien/.project
/lib/internal/flex/varien/.settings
/.grunt
/.php_cs.cache
/grunt-config.json
/dev/tools/grunt/configs/local-themes.js

/pub/media/*.*
!/pub/media/.htaccess
/pub/media/attribute/*
!/pub/media/attribute/.htaccess
/pub/media/analytics/*
/pub/media/catalog/*
!/pub/media/catalog/.htaccess
/pub/media/customer/*
!/pub/media/customer/.htaccess
/pub/media/downloadable/*
!/pub/media/downloadable/.htaccess
/pub/media/favicon/*
/pub/media/import/*
!/pub/media/import/.htaccess
/pub/media/logo/*
/pub/media/theme/*
/pub/media/theme_customization/*
!/pub/media/theme_customization/.htaccess
/pub/media/wysiwyg/*
!/pub/media/wysiwyg/.htaccess
/pub/media/tmp/*
!/pub/media/tmp/.htaccess
/pub/media/captcha/*
!/pub/media/captcha/.htaccess
/pub/static/*
!/pub/static/.htaccess

/var/*
!/var/.htaccess
/vendor/*
!/vendor/.htaccess
/generated/*
!/generated/.htaccess



================================================
FILE: community/PHP/Pimcore.gitignore
================================================
# gitignore template for Pimcore CMS

# pimcore source files
/pimcore

# asset files
/website/var/assets/*

# backups
/website/var/backup/*

# file cache
/website/var/cache/*

# generated PHP classes, keep definition files (.psf)
/website/var/classes/Object*
!/website/var/classes/objectbricks

# various configuration files
/website/var/config/system.xml
/website/var/config/cache.xml
/website/var/config/robots.txt
/website/var/config/Geo*
/website/var/config/object/*
/website/var/config/portal/*
/website/var/config/sqlreport/*

# sent e-mail log files
/website/var/email/*

# log files
/website/var/log/*.log

# serialized recyclebin files
/website/var/recyclebin/*

# search plugin
/website/var/search/*

# various temp files
/website/var/system/*
/website/var/tmp/*

# serialized version files
/website/var/versions/asset/*
/website/var/versions/document/*
/website/var/versions/object/*

# user profile images
/website/var/user-image/*

# keep .dummy files
!.dummy



================================================
FILE: community/PHP/ThinkPHP.gitignore
================================================
# gitignore template for ThinkPHP v3.2.3
# website: http://www.thinkphp.cn/

# Logs and Cache files
/Application/Runtime/

# Common configure file
/Application/Common/Conf/config.php


================================================
FILE: community/Python/JupyterNotebooks.gitignore
================================================
# gitignore template for Jupyter Notebooks
# website: http://jupyter.org/

.ipynb_checkpoints
*/.ipynb_checkpoints/*

# IPython
profile_default/
ipython_config.py

# Jupyter lab virtual documents
# https://jupyterlab-lsp.readthedocs.io/en/2.x/Configuring.html#virtual_documents_dir
.virtual_documents/

# Remove previous ipynb_checkpoints
#   git rm -r .ipynb_checkpoints/



================================================
FILE: community/Python/Nikola.gitignore
================================================
# gitignore template for Nikola static site generator
# website: https://getnikola.com/

.doit.db
*.py[cod]
cache/
output/



================================================
FILE: Global/README.md
================================================
## Globally Useful gitignores

This directory contains globally useful gitignores,
e.g. OS-specific and editor specific.

For more on global gitignores:
<https://help.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer>

And a good blog post about 'em:
<http://augustl.com/blog/2009/global_gitignores>



================================================
FILE: Global/AL.gitignore
================================================
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/
*.app
.snapshots/*



================================================
FILE: Global/Anjuta.gitignore
================================================
# Local configuration folder and symbol database
/.anjuta/
/.anjuta_sym_db.db



================================================
FILE: Global/Ansible.gitignore
================================================
*.retry
.ansible/



================================================
FILE: Global/Archives.gitignore
================================================
# It's better to unpack these files and commit the raw source because
# git has its own built in compression methods.
*.7z
*.jar
*.rar
*.zip
*.gz
*.gzip
*.tgz
*.bzip
*.bzip2
*.bz2
*.xz
*.lzma
*.cab
*.xar
*.zst
*.tzst

# Packing-only formats
*.iso
*.tar

# Package management formats
*.dmg
*.xpi
*.gem
*.egg
*.deb
*.rpm
*.msi
*.msm
*.msp
*.txz



================================================
FILE: Global/Backup.gitignore
================================================
*.bak
*.gho
*.ori
*.orig
*.tmp



================================================
FILE: Global/Bazaar.gitignore
================================================
.bzr/
.bzrignore



================================================
FILE: Global/BricxCC.gitignore
================================================
# Bricx Command Center IDE
# http://bricxcc.sourceforge.net
*.bak
*.sym



================================================
FILE: Global/Calabash.gitignore
================================================
# Calabash / Cucumber
rerun/
reports/
screenshots/
screenshot*.png
test-servers/

# bundler
.bundle
vendor



================================================
FILE: Global/Cloud9.gitignore
================================================
# Cloud9 IDE - http://c9.io
.c9revisions
.c9



================================================
FILE: Global/CodeKit.gitignore
================================================
# General CodeKit files to ignore
config.codekit
config.codekit3
/min



================================================
FILE: Global/Cursor.gitignore
================================================
.cursorignore
.cursorindexingignore



================================================
FILE: Global/CVS.gitignore
================================================
/CVS/*
**/CVS/*
.cvsignore
*/.cvsignore



================================================
FILE: Global/DartEditor.gitignore
================================================
.project
.buildlog



================================================
FILE: Global/Diff.gitignore
================================================
*.patch
*.diff



================================================
FILE: Global/Dreamweaver.gitignore
================================================
# DW Dreamweaver added files
_notes
_compareTemp
configs/
dwsync.xml
dw_php_codehinting.config
*.mno



================================================
FILE: Global/Dropbox.gitignore
================================================
# Dropbox settings and caches
.dropbox
.dropbox.attr
.dropbox.cache



================================================
FILE: Global/Eclipse.gitignore
================================================
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_tests/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project



================================================
FILE: Global/EiffelStudio.gitignore
================================================
# The compilation directory
EIFGENs



================================================
FILE: Global/Emacs.gitignore
================================================
# -*- mode: gitignore; -*-
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Org-mode
.org-id-locations
*_archive

# flymake-mode
*_flymake.*

# eshell files
/eshell/history
/eshell/lastdir

# elpa packages
/elpa/

# reftex files
*.rel

# AUCTeX auto folder
/auto/

# cask packages
.cask/
dist/

# Flycheck
flycheck_*.el

# server auth directory
/server/

# projectiles files
.projectile

# directory configuration
.dir-locals.el

# network security
/network-security.data

# undo-tree
*.~undo-tree~



================================================
FILE: Global/Ensime.gitignore
================================================
# Ensime specific
.ensime
.ensime_cache/
.ensime_lucene/



================================================
FILE: Global/Espresso.gitignore
================================================
*.esproj



================================================
FILE: Global/FlexBuilder.gitignore
================================================
bin/
bin-debug/
bin-release/



================================================
FILE: Global/GPG.gitignore
================================================
secring.*




================================================
FILE: Global/Images.gitignore
================================================
# JPEG
*.jpg
*.jpeg
*.jpe
*.jif
*.jfif
*.jfi

# JPEG 2000
*.jp2
*.j2k
*.jpf
*.jpx
*.jpm
*.mj2

# JPEG XR
*.jxr
*.hdp
*.wdp

# Graphics Interchange Format
*.gif

# RAW
*.raw

# Web P
*.webp

# Portable Network Graphics
*.png

# Animated Portable Network Graphics
*.apng

# Multiple-image Network Graphics
*.mng

# Tagged Image File Format
*.tiff
*.tif

# Scalable Vector Graphics
*.svg
*.svgz

# Portable Document Format
*.pdf

# X BitMap
*.xbm

# BMP
*.bmp
*.dib

# ICO
*.ico

# 3D Images
*.3dm
*.max



================================================
FILE: Global/JDeveloper.gitignore
================================================
# default application storage directory used by the IDE Performance Cache feature
.data/

# used for ADF styles caching
temp/

# default output directories
classes/
deploy/
javadoc/

# lock file, a part of Oracle Credential Store Framework
cwallet.sso.lck


================================================
FILE: Global/JEnv.gitignore
================================================
# JEnv local Java version configuration file
.java-version

# Used by previous versions of JEnv
.jenv-version



================================================
FILE: Global/JetBrains.gitignore
================================================
# Covers JetBrains IDEs: IntelliJ, GoLand, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# AWS User-specific
.idea/**/aws.xml

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# SonarLint plugin
.idea/sonarlint/
.idea/sonarlint.xml # see https://community.sonarsource.com/t/is-the-file-idea-idea-idea-sonarlint-xml-intended-to-be-under-source-control/121119

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based HTTP Client
.idea/httpRequests
http-client.private.env.json

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

# Apifox Helper cache
.idea/.cache/.Apifox_Helper
.idea/ApifoxUploaderProjectSetting.xml



================================================
FILE: Global/Kate.gitignore
================================================
# Swap Files #
.*.kate-swp
.swp.*



================================================
FILE: Global/KDevelop4.gitignore
================================================
*.kdev4
.kdev4/



================================================
FILE: Global/Lazarus.gitignore
================================================
# Lazarus compiler-generated binaries (safe to delete)
*.exe
*.dll
*.so
*.dylib
*.lrs
*.res
*.compiled
*.dbg
*.ppu
*.o
*.or
*.a

# Lazarus autogenerated files (duplicated info)
*.rst
*.rsj
*.lrt

# Lazarus local files (user-specific info)
*.lps

# Lazarus backups and unit output folders.
# These can be changed by user in Lazarus/project options.
backup/
*.bak
lib/

# Application bundle for Mac OS
*.app/



================================================
FILE: Global/Lefthook.gitignore
================================================
# https://lefthook.dev/configuration/#config-file-name
/.lefthook-local.json
/.lefthook-local.toml
/.lefthook-local.yaml
/.lefthook-local.yml
/lefthook-local.json
/lefthook-local.toml
/lefthook-local.yaml
/lefthook-local.yml
/.config/lefthook-local.json
/.config/lefthook-local.toml
/.config/lefthook-local.yaml
/.config/lefthook-local.yml

# https://lefthook.dev/configuration/source_dir_local.html
/.lefthook-local/



================================================
FILE: Global/LibreOffice.gitignore
================================================
# LibreOffice locks
.~lock.*#



================================================
FILE: Global/Linux.gitignore
================================================
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# Metadata left by Dolphin file manager, which comes with KDE Plasma
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

# Log files created by default by the nohup command
nohup.out



================================================
FILE: Global/LyX.gitignore
================================================
# Ignore LyX backup and autosave files
# http://www.lyx.org/
*.lyx~
*.lyx#



================================================
FILE: Global/macOS.gitignore
================================================
# General
.DS_Store
__MACOSX/
.AppleDouble
.LSOverride
Icon[
]

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk



================================================
FILE: Global/MATLAB.gitignore
================================================
# Autosave files
*.asv
*.m~
*.autosave
*.slx.r*
*.mdl.r*

# Derived content-obscured files
*.p

# Compiled MEX files
*.mex*

# Packaged app and toolbox files
*.mlappinstall
*.mltbx

# Deployable archives
*.ctf

# Generated helpsearch folders
helpsearch*/

# Code generation folders
slprj/
sccprj/
codegen/

# Cache files
*.slxc

# Cloud based storage dotfile
.MATLABDriveTag



================================================
FILE: Global/Mercurial.gitignore
================================================
.hg/
.hgignore
.hgsigs
.hgsub
.hgsubstate
.hgtags



================================================
FILE: Global/Metals.gitignore
================================================
# Metals (Scala Language Server)
# Reference: https://scalameta.org/metals/docs/editors/vscode#files-and-directories-to-include-in-your-gitignore
.metals/
.bloop/
.ammonite/
metals.sbt



================================================
FILE: Global/MicrosoftOffice.gitignore
================================================
*.tmp

# Word temporary
~$*.doc*
~$*.dot*

# Word Auto Backup File
Backup of *.doc*

# Excel temporary
~$*.xls*

# Excel Backup File
*.xlk

# PowerPoint temporary
~$*.ppt*

# Visio autosave temporary files
*.~vsd*



================================================
FILE: Global/mise.gitignore
================================================
# https://mise.jdx.dev/configuration.html
# https://mise.jdx.dev/configuration/environments.html
.mise.*.local.toml
.mise.local.toml
mise.*.local.toml
mise.local.toml
.mise/*.local.toml
mise/*.local.toml

# https://mise.jdx.dev/configuration.html#tool-versions
#.tool-versions



================================================
FILE: Global/Momentics.gitignore
================================================
# Built files
x86/
arm/
arm-p/
translations/*.qm

# IDE settings
.settings/



================================================
FILE: Global/MonoDevelop.gitignore
================================================
#User Specific
*.userprefs
*.usertasks

#Mono Project Files
*.pidb
*.resources
test-results/



================================================
FILE: Global/NetBeans.gitignore
================================================
**/nbproject/private/
**/nbproject/Makefile-*.mk
**/nbproject/Package-*.bash
build/
nbbuild/
dist/
nbdist/
.nb-gradle/



================================================
FILE: Global/Ninja.gitignore
================================================
.ninja_deps
.ninja_log



================================================
FILE: Global/NotepadPP.gitignore
================================================
# Notepad++ backups #
*.bak



================================================
FILE: Global/Octave.gitignore
================================================
MATLAB.gitignore


================================================
FILE: Global/Otto.gitignore
================================================
.otto/



================================================
FILE: Global/Patch.gitignore
================================================
*.orig
*.rej



================================================
FILE: Global/PlatformIO.gitignore
================================================
.pio
.pioenvs
.piolibdeps
.vscode/.browse.c_cpp.db*
.vscode/c_cpp_properties.json
.vscode/launch.json



================================================
FILE: Global/PSoCCreator.gitignore
================================================
# Project Settings
*.cywrk.*
*.cyprj.*

# Generated Assets and Resources
Debug/
Release/
Export/
*/codegentemp
*/Generated_Source
*_datasheet.pdf
*_timing.html
*.cycdx
*.cyfit
*.rpt
*.svd
*.log
*.zip



================================================
FILE: Global/PuTTY.gitignore
================================================
# Private key
*.ppk



================================================
FILE: Global/Redcar.gitignore
================================================
.redcar



================================================
FILE: Global/Redis.gitignore
================================================
# Ignore redis binary dump (dump.rdb) files

*.rdb



================================================
FILE: Global/SBT.gitignore
================================================
# Simple Build Tool
# http://www.scala-sbt.org/release/docs/Getting-Started/Directories.html#configuring-version-control

dist/*
target/
lib_managed/
src_managed/
project/boot/
project/plugins/project/
.history
.cache
.lib/
.bsp/



================================================
FILE: Global/SlickEdit.gitignore
================================================
# SlickEdit workspace and project files are ignored by default because
# typically they are considered to be developer-specific and not part of a
# project.
*.vpw
*.vpj

# SlickEdit workspace history and tag files always contain user-specific
# data so they should not be stored in a repository.
*.vpwhistu
*.vpwhist
*.vtg



================================================
FILE: Global/Stata.gitignore
================================================
# .gitignore file for git projects containing Stata files
# Commercial statistical software: http://www.stata.com

# Stata dataset and output files
*.dta
*.gph
*.log
*.smcl
*.stpr
*.stsem
~*.stswp

# Graphic export files from Stata
# Stata command graph export: http://www.stata.com/manuals14/g-2graphexport.pdf
#
# You may add graphic export files to your .gitignore. However you should be
# aware that this will exclude all image files from this main directory
# and subdirectories.
# *.ps
# *.eps
# *.wmf
# *.emf
# *.pdf
# *.png
# *.tif



================================================
FILE: Global/SublimeText.gitignore
================================================
# Cache files for Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache

# Workspace files are user-specific
*.sublime-workspace

# Project files should be checked into the repository, unless a significant
# proportion of contributors will probably not be using Sublime Text
# *.sublime-project

# SFTP configuration file
sftp-config.json
sftp-config-alt*.json

# Package control specific files
Package Control.last-run
Package Control.ca-list
Package Control.ca-bundle
Package Control.system-ca-bundle
Package Control.cache/
Package Control.ca-certs/
Package Control.merged-ca-bundle
Package Control.user-ca-bundle
oscrypto-ca-bundle.crt
bh_unicode_properties.cache

# Sublime-github package stores a github token in this file
# https://packagecontrol.io/packages/sublime-github
GitHub.sublime-settings



================================================
FILE: Global/SVN.gitignore
================================================
.svn/



================================================
FILE: Global/Syncthing.gitignore
================================================
# Syncthing caches
.stversions



================================================
FILE: Global/SynopsysVCS.gitignore
================================================
# Waveform formats
*.vcd
*.vpd
*.evcd
*.fsdb

# Default name of the simulation executable.  A different name can be
# specified with this switch (the associated daidir database name is
# also taken from here):  -o <path>/<filename>
simv

# Generated for Verilog and VHDL top configs
simv.daidir/
simv.db.dir/

# Infrastructure necessary to co-simulate SystemC models with
# Verilog/VHDL models.  An alternate directory may be specified with this
# switch:  -Mdir=<directory_path>
csrc/

# Log file - the following switch allows to specify the file that will be
# used to write all messages from simulation:  -l <filename>
*.log

# Coverage results (generated with urg) and database location.  The
# following switch can also be used:  urg -dir <coverage_directory>.vdb
simv.vdb/
urgReport/

# DVE and UCLI related files.
DVEfiles/
ucli.key

# When the design is elaborated for DirectC, the following file is created
# with declarations for C/C++ functions.
vc_hdrs.h



================================================
FILE: Global/Tags.gitignore
================================================
# Ignore tags created by etags, ctags, gtags (GNU global) and cscope
TAGS
.TAGS
!TAGS/
tags
.tags
!tags/
gtags.files
GTAGS
GRTAGS
GPATH
GSYMS
cscope.files
cscope.out
cscope.in.out
cscope.po.out




================================================
FILE: Global/TextMate.gitignore
================================================
*.tmproj
*.tmproject
tmtags



================================================
FILE: Global/TortoiseGit.gitignore
================================================
# Project-level settings
/.tgitconfig



================================================
FILE: Global/Vagrant.gitignore
================================================
# General
.vagrant/

# Log files (if you are creating logs in debug mode, uncomment this)
# *.log



================================================
FILE: Global/Vim.gitignore
================================================
# Swap
[._]*.s[a-v][a-z]
# comment out the next line if you don't need vector files
!*.svg
[._]*.sw[a-p]
[._]s[a-rt-v][a-z]
[._]ss[a-gi-z]
[._]sw[a-p]

# Session
Session.vim
Sessionx.vim

# Temporary
.netrwhist
*~
# Auto-generated tag files
tags
# Persistent undo
[._]*.un~



================================================
FILE: Global/VirtualEnv.gitignore
================================================
# Virtualenv
# https://realpython.com/python-virtual-environments-a-primer/#the-virtualenv-project
.Python
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
.venv
pip-selfcheck.json



================================================
FILE: Global/Virtuoso.gitignore
================================================
# Gitignore for Cadence Virtuoso
################################################################

# Log files
*.log
panic*.log.*

# OpenAccess database lock files
*.cdslck*

# Run directories for layout vs. schematic and design rule check
lvsRunDir/*
drcRunDir/*

# Abstract generation tool
abstract.log*
abstract.record*




================================================
FILE: Global/VisualStudioCode.gitignore
================================================
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
!*.code-workspace

# Built Visual Studio Code Extensions
*.vsix



================================================
FILE: Global/WebMethods.gitignore
================================================
**/IntegrationServer/datastore/
**/IntegrationServer/db/
**/IntegrationServer/DocumentStore/
**/IntegrationServer/lib/
**/IntegrationServer/logs/
**/IntegrationServer/replicate/
**/IntegrationServer/sdk/
**/IntegrationServer/support/
**/IntegrationServer/update/
**/IntegrationServer/userFtpRoot/
**/IntegrationServer/web/
**/IntegrationServer/WmRepository4/
**/IntegrationServer/XAStore/
**/IntegrationServer/packages/Wm*/



================================================
FILE: Global/Windows.gitignore
================================================
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk



================================================
FILE: Global/Xcode.gitignore
================================================
## User settings
xcuserdata/



================================================
FILE: Global/XilinxISE.gitignore
================================================
# intermediate build files
*.bgn
*.bit
*.bld
*.cmd_log
*.drc
*.ll
*.lso
*.msd
*.msk
*.ncd
*.ngc
*.ngd
*.ngr
*.pad
*.par
*.pcf
*.prj
*.ptwx
*.rbb
*.rbd
*.stx
*.syr
*.twr
*.twx
*.unroutes
*.ut
*.xpi
*.xst
*_bitgen.xwbt
*_envsettings.html
*_map.map
*_map.mrp
*_map.ngm
*_map.xrpt
*_ngdbuild.xrpt
*_pad.csv
*_pad.txt
*_par.xrpt
*_summary.html
*_summary.xml
*_usage.xml
*_xst.xrpt

# iMPACT generated files
_impactbatch.log
impact.xsl
impact_impact.xwbt
ise_impact.cmd
webtalk_impact.xml

# Core Generator generated files
xaw2verilog.log

# project-wide generated files
*.gise
par_usage_statistics.html
usage_statistics_webtalk.html
webtalk.log
webtalk_pn.xml

# generated folders
iseconfig/
xlnx_auto_0_xdb/
xst/
_ngo/
_xmsgs/



================================================
FILE: .github/CODEOWNERS
================================================
# Order is important. The LAST matching pattern has the MOST precedence.
# gitignore style patterns are used, not globs.
# https://docs.github.com/articles/about-codeowners
# https://git-scm.com/docs/gitignore

# Catch All - Defer to the gitignore maintainers
* @github/gitignore-maintainers



================================================
FILE: .github/PULL_REQUEST_TEMPLATE.md
================================================
### Reasons for making this change

_TODO_
<!---
Please provide some background for this change.
--->

### Links to documentation supporting these rule changes

_TODO_

<!---
Link to the project docs, any existing .gitignore files that project may have in it's own repo, etc
--->

### If this is a new template

Link to application or projectÃ¢â‚¬â„¢s homepage: TODO

### Merge and Approval Steps
- [ ] Confirm that you've read the [contribution guidelines](https://github.com/github/gitignore/tree/main?tab=readme-ov-file#contributing-guidelines) and ensured your PR aligns
- [ ] Ensure CI is passing
- [ ] Get a review and Approval from one of the maintainers



================================================
FILE: .github/workflows/stale.yml
================================================
name: Stale

# **What it does**: Close pull requests after no updates for 180 days.
# **Why we have it**: This repository gets a lot of PRs, and the maintainers team is small.
#                     This helps reduce the open PRs to ones that are most desired by the community.
# **Who does it impact**: Contributors and maintainers of github/gitignore.

on:
  schedule:
    - cron: '20 16 * * *' # Run every day at 16:20 UTC / 8:20 PST

permissions:
  actions: write
  contents: write # only for delete-branch option
  issues: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0
        with:
          stale-pr-message: 'This PR is stale because there have been no updates in 90 days. It will close after 180 days of inactivity. Leave a comment if you want to keep it open :smile:'
          close-pr-message: 'This PR has been closed because it was inactive for 180 days. If you want to continue working on it, please open a new PR.'
          days-before-stale: 90
          days-before-close: 180
          stale-pr-label: 'stale'
          exempt-pr-labels: 'keep'
          close-issue-reason: not_planned
          ascending: true # Sort PRs by last updated date in ascending order
          operations-per-run: 300





================================================
FILE: gitingest_outputs/gitignore_raw_20250905_192308.txt
================================================
Directory structure:
â””â”€â”€ github-gitignore/
    â”œâ”€â”€ README.md
    â”œâ”€â”€ CONTRIBUTING.md
    â”œâ”€â”€ LICENSE
    â”œâ”€â”€ Global/
    â”‚   â””â”€â”€ README.md
    â””â”€â”€ .github/
        â”œâ”€â”€ PULL_REQUEST_TEMPLATE.md
        â””â”€â”€ workflows/
            â””â”€â”€ stale.yml

================================================
FILE: README.md
================================================
# A collection of `.gitignore` templates

This is GitHubÃ¢â‚¬â„¢s collection of [`.gitignore`][man] file templates.
We use this list to populate the `.gitignore` template choosers available
in the GitHub.com interface when creating new repositories and files.

For more information about how `.gitignore` files work, and how to use them,
the following resources are a great place to start:

- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.
- The [Ignoring Files article][help] on the GitHub Help site.
- The [gitignore(5)][man] manual page.

[man]: https://git-scm.com/docs/gitignore
[help]: https://help.github.com/articles/ignoring-files
[chapter]: https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring
[progit]: https://git-scm.com/book

## Folder structure

We support a collection of templates, organized in this way:

- The root folder contains templates in common use, to help people get started
  with popular programming languages and technologies. These define a meaningful
  set of rules to help get started, and ensure you are not committing
  unimportant files into your repository.
- [`Global`](./Global) contains templates for various editors, tools and
  operating systems that can be used in different situations. It is recommended
  that you either [add these to your global template](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer)
  or merge these rules into your project-specific templates if you want to use
  them permanently.
- [`community`](./community) contains specialized templates for other popular
  languages, tools and project, which don't currently belong in the mainstream
  templates. These should be added to your project-specific templates when you
  decide to adopt the framework or tool.

## What makes a good template?

A template should contain a set of rules to help Git repositories work with a
specific programming language, framework, tool or environment.

If it's not possible to curate a small set of useful rules for this situation,
then the template is not a good fit for this collection.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework), it could live under the `community`
directory. See [versioned templates](#versioned-templates) for more details.

If you have a small set of rules, or want to support a technology that is not
widely in use, and still believe this will be helpful to others, please read the
section about [specialized templates](#specialized-templates) for more details.

Include details when opening pull request if the template is important and visible. We
may not accept it immediately, but we can promote it to the root at a later date
based on interest.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the _most common and helpful_ templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.

## Contributing guidelines

WeÃ¢â‚¬â„¢d love for you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to _everyone_
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change is specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify _one template_ per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

## Versioned templates

Some templates can change greatly between versions, and if you wish to contribute
to this repository we need to follow this specific flow:

- the template at the root should be the current supported version
- the template at the root should not have a version in the filename (i.e.
  "evergreen")
- previous versions of templates should live under `community/`
- previous versions of the template should embed the version in the filename,
  for readability

This helps ensure users get the latest version (because they'll use whatever is
at the root) but helps maintainers support older versions still in the wild.

## Specialized templates

If you have a template that you would like to contribute, but it isn't quite
mainstream, please consider adding this to the `community` directory under a
folder that best suits where it belongs.

The rules in your specialized template should be specific to the framework or
tool, and any additional templates should be mentioned in a comment in the
header of the template.

For example, this template might live at `community/DotNet/InforCRM.gitignore`:

```gitignore
# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in
```

## Contributing workflow

HereÃ¢â‚¬â„¢s how we suggest you go about proposing a change to this project:

1. [Fork this project][fork] to your account.
2. [Create a branch][branch] for the change you intend to make.
3. Make your changes to your fork.
4. [Send a pull request][pr] from your forkÃ¢â‚¬â„¢s branch to our `main` branch.

Using the web-based interface to make changes is fine too, and will help you
by automatically forking the project and prompting to send a pull request too.

[fork]: https://help.github.com/articles/fork-a-repo/
[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository
[pr]: https://help.github.com/articles/using-pull-requests/

## License

[CC0-1.0](./LICENSE).



================================================
FILE: CONTRIBUTING.md
================================================
# Contributing guidelines

WeÃ¢â‚¬â„¢d love you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to *everyone*
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify *one template* per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework) then it's brittle and probably no more
helpful than a simple `ls`. If it's not possible to curate a small set of
useful rules, then the template might not be a good fit for this collection.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the *most common and helpful* templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.



================================================
FILE: LICENSE
================================================
CC0 1.0 Universal

Statement of Purpose

The laws of most jurisdictions throughout the world automatically confer
exclusive Copyright and Related Rights (defined below) upon the creator and
subsequent owner(s) (each and all, an "owner") of an original work of
authorship and/or a database (each, a "Work").

Certain owners wish to permanently relinquish those rights to a Work for the
purpose of contributing to a commons of creative, cultural and scientific
works ("Commons") that the public can reliably and without fear of later
claims of infringement build upon, modify, incorporate in other works, reuse
and redistribute as freely as possible in any form whatsoever and for any
purposes, including without limitation commercial purposes. These owners may
contribute to the Commons to promote the ideal of a free culture and the
further production of creative, cultural and scientific works, or to gain
reputation or greater distribution for their Work in part through the use and
efforts of others.

For these and/or other purposes and motivations, and without any expectation
of additional consideration or compensation, the person associating CC0 with a
Work (the "Affirmer"), to the extent that he or she is an owner of Copyright
and Related Rights in the Work, voluntarily elects to apply CC0 to the Work
and publicly distribute the Work under its terms, with knowledge of his or her
Copyright and Related Rights in the Work and the meaning and intended legal
effect of CC0 on those rights.

1. Copyright and Related Rights. A Work made available under CC0 may be
protected by copyright and related or neighboring rights ("Copyright and
Related Rights"). Copyright and Related Rights include, but are not limited
to, the following:

  i. the right to reproduce, adapt, distribute, perform, display, communicate,
  and translate a Work;

  ii. moral rights retained by the original author(s) and/or performer(s);

  iii. publicity and privacy rights pertaining to a person's image or likeness
  depicted in a Work;

  iv. rights protecting against unfair competition in regards to a Work,
  subject to the limitations in paragraph 4(a), below;

  v. rights protecting the extraction, dissemination, use and reuse of data in
  a Work;

  vi. database rights (such as those arising under Directive 96/9/EC of the
  European Parliament and of the Council of 11 March 1996 on the legal
  protection of databases, and under any national implementation thereof,
  including any amended or successor version of such directive); and

  vii. other similar, equivalent or corresponding rights throughout the world
  based on applicable law or treaty, and any national implementations thereof.

2. Waiver. To the greatest extent permitted by, but not in contravention of,
applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and
unconditionally waives, abandons, and surrenders all of Affirmer's Copyright
and Related Rights and associated claims and causes of action, whether now
known or unknown (including existing as well as future claims and causes of
action), in the Work (i) in all territories worldwide, (ii) for the maximum
duration provided by applicable law or treaty (including future time
extensions), (iii) in any current or future medium and for any number of
copies, and (iv) for any purpose whatsoever, including without limitation
commercial, advertising or promotional purposes (the "Waiver"). Affirmer makes
the Waiver for the benefit of each member of the public at large and to the
detriment of Affirmer's heirs and successors, fully intending that such Waiver
shall not be subject to revocation, rescission, cancellation, termination, or
any other legal or equitable action to disrupt the quiet enjoyment of the Work
by the public as contemplated by Affirmer's express Statement of Purpose.

3. Public License Fallback. Should any part of the Waiver for any reason be
judged legally invalid or ineffective under applicable law, then the Waiver
shall be preserved to the maximum extent permitted taking into account
Affirmer's express Statement of Purpose. In addition, to the extent the Waiver
is so judged Affirmer hereby grants to each affected person a royalty-free,
non transferable, non sublicensable, non exclusive, irrevocable and
unconditional license to exercise Affirmer's Copyright and Related Rights in
the Work (i) in all territories worldwide, (ii) for the maximum duration
provided by applicable law or treaty (including future time extensions), (iii)
in any current or future medium and for any number of copies, and (iv) for any
purpose whatsoever, including without limitation commercial, advertising or
promotional purposes (the "License"). The License shall be deemed effective as
of the date CC0 was applied by Affirmer to the Work. Should any part of the
License for any reason be judged legally invalid or ineffective under
applicable law, such partial invalidity or ineffectiveness shall not
invalidate the remainder of the License, and in such case Affirmer hereby
affirms that he or she will not (i) exercise any of his or her remaining
Copyright and Related Rights in the Work or (ii) assert any associated claims
and causes of action with respect to the Work, in either case contrary to
Affirmer's express Statement of Purpose.

4. Limitations and Disclaimers.

  a. No trademark or patent rights held by Affirmer are waived, abandoned,
  surrendered, licensed or otherwise affected by this document.

  b. Affirmer offers the Work as-is and makes no representations or warranties
  of any kind concerning the Work, express, implied, statutory or otherwise,
  including without limitation warranties of title, merchantability, fitness
  for a particular purpose, non infringement, or the absence of latent or
  other defects, accuracy, or the present or absence of errors, whether or not
  discoverable, all to the greatest extent permissible under applicable law.

  c. Affirmer disclaims responsibility for clearing rights of other persons
  that may apply to the Work or any use thereof, including without limitation
  any person's Copyright and Related Rights in the Work. Further, Affirmer
  disclaims responsibility for obtaining any necessary consents, permissions
  or other rights required for any use of the Work.

  d. Affirmer understands and acknowledges that Creative Commons is not a
  party to this document and has no duty or obligation with respect to this
  CC0 or use of the Work.

For more information, please see
<http://creativecommons.org/publicdomain/zero/1.0/>



================================================
FILE: Global/README.md
================================================
## Globally Useful gitignores

This directory contains globally useful gitignores,
e.g. OS-specific and editor specific.

For more on global gitignores:
<https://help.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer>

And a good blog post about 'em:
<http://augustl.com/blog/2009/global_gitignores>



================================================
FILE: .github/PULL_REQUEST_TEMPLATE.md
================================================
### Reasons for making this change

_TODO_
<!---
Please provide some background for this change.
--->

### Links to documentation supporting these rule changes

_TODO_

<!---
Link to the project docs, any existing .gitignore files that project may have in it's own repo, etc
--->

### If this is a new template

Link to application or projectÃ¢â‚¬â„¢s homepage: TODO

### Merge and Approval Steps
- [ ] Confirm that you've read the [contribution guidelines](https://github.com/github/gitignore/tree/main?tab=readme-ov-file#contributing-guidelines) and ensured your PR aligns
- [ ] Ensure CI is passing
- [ ] Get a review and Approval from one of the maintainers



================================================
FILE: .github/workflows/stale.yml
================================================
name: Stale

# **What it does**: Close pull requests after no updates for 180 days.
# **Why we have it**: This repository gets a lot of PRs, and the maintainers team is small.
#                     This helps reduce the open PRs to ones that are most desired by the community.
# **Who does it impact**: Contributors and maintainers of github/gitignore.

on:
  schedule:
    - cron: '20 16 * * *' # Run every day at 16:20 UTC / 8:20 PST

permissions:
  actions: write
  contents: write # only for delete-branch option
  issues: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0
        with:
          stale-pr-message: 'This PR is stale because there have been no updates in 90 days. It will close after 180 days of inactivity. Leave a comment if you want to keep it open :smile:'
          close-pr-message: 'This PR has been closed because it was inactive for 180 days. If you want to continue working on it, please open a new PR.'
          days-before-stale: 90
          days-before-close: 180
          stale-pr-label: 'stale'
          exempt-pr-labels: 'keep'
          close-issue-reason: not_planned
          ascending: true # Sort PRs by last updated date in ascending order
          operations-per-run: 300





================================================
FILE: gitingest_outputs/gitignore_structured_20250905_192308.json
================================================
{
  "repo_url": "https://github.com/github/gitignore",
  "processed_at": "2025-09-05T19:23:08.487040",
  "total_files": 6,
  "total_size": 18294,
  "language_stats": {
    "Markdown": 4,
    "YAML": 1
  },
  "file_hierarchy": {
    "github-gitignore": {},
    "README.md": "README.md",
    "CONTRIBUTING.md": "CONTRIBUTING.md",
    "LICENSE": "LICENSE",
    "Global": {},
    ".github": {},
    "PULL_REQUEST_TEMPLATE.md": "PULL_REQUEST_TEMPLATE.md",
    "workflows": {},
    "stale.yml": "stale.yml"
  },
  "files": {
    "README.md": {
      "content": "# A collection of `.gitignore` templates\n\nThis is GitHubÃ¢â‚¬â„¢s collection of [`.gitignore`][man] file templates.\nWe use this list to populate the `.gitignore` template choosers available\nin the GitHub.com interface when creating new repositories and files.\n\nFor more information about how `.gitignore` files work, and how to use them,\nthe following resources are a great place to start:\n\n- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.\n- The [Ignoring Files article][help] on the GitHub Help site.\n- The [gitignore(5)][man] manual page.\n\n[man]: https://git-scm.com/docs/gitignore\n[help]: https://help.github.com/articles/ignoring-files\n[chapter]: https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring\n[progit]: https://git-scm.com/book\n\n## Folder structure\n\nWe support a collection of templates, organized in this way:\n\n- The root folder contains templates in common use, to help people get started\n  with popular programming languages and technologies. These define a meaningful\n  set of rules to help get started, and ensure you are not committing\n  unimportant files into your repository.\n- [`Global`](./Global) contains templates for various editors, tools and\n  operating systems that can be used in different situations. It is recommended\n  that you either [add these to your global template](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer)\n  or merge these rules into your project-specific templates if you want to use\n  them permanently.\n- [`community`](./community) contains specialized templates for other popular\n  languages, tools and project, which don't currently belong in the mainstream\n  templates. These should be added to your project-specific templates when you\n  decide to adopt the framework or tool.\n\n## What makes a good template?\n\nA template should contain a set of rules to help Git repositories work with a\nspecific programming language, framework, tool or environment.\n\nIf it's not possible to curate a small set of useful rules for this situation,\nthen the template is not a good fit for this collection.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework), it could live under the `community`\ndirectory. See [versioned templates](#versioned-templates) for more details.\n\nIf you have a small set of rules, or want to support a technology that is not\nwidely in use, and still believe this will be helpful to others, please read the\nsection about [specialized templates](#specialized-templates) for more details.\n\nInclude details when opening pull request if the template is important and visible. We\nmay not accept it immediately, but we can promote it to the root at a later date\nbased on interest.\n\nPlease also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.\nOur aim is to curate a collection of the _most common and helpful_ templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.\n\n## Contributing guidelines\n\nWeÃ¢â‚¬â„¢d love for you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s\n  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to _everyone_\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change is specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify _one template_ per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,\nthe more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.\n\n## Versioned templates\n\nSome templates can change greatly between versions, and if you wish to contribute\nto this repository we need to follow this specific flow:\n\n- the template at the root should be the current supported version\n- the template at the root should not have a version in the filename (i.e.\n  \"evergreen\")\n- previous versions of templates should live under `community/`\n- previous versions of the template should embed the version in the filename,\n  for readability\n\nThis helps ensure users get the latest version (because they'll use whatever is\nat the root) but helps maintainers support older versions still in the wild.\n\n## Specialized templates\n\nIf you have a template that you would like to contribute, but it isn't quite\nmainstream, please consider adding this to the `community` directory under a\nfolder that best suits where it belongs.\n\nThe rules in your specialized template should be specific to the framework or\ntool, and any additional templates should be mentioned in a comment in the\nheader of the template.\n\nFor example, this template might live at `community/DotNet/InforCRM.gitignore`:\n\n```gitignore\n# gitignore template for InforCRM (formerly SalesLogix)\n# website: https://www.infor.com/product-summary/cx/infor-crm/\n#\n# Recommended: VisualStudio.gitignore\n\n# Ignore model files that are auto-generated\nModelIndex.xml\nExportedFiles.xml\n\n# Ignore deployment files\n[Mm]odel/[Dd]eployment\n\n# Force include portal SupportFiles\n!Model/Portal/*/SupportFiles/[Bb]in/\n!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in\n```\n\n## Contributing workflow\n\nHereÃ¢â‚¬â„¢s how we suggest you go about proposing a change to this project:\n\n1. [Fork this project][fork] to your account.\n2. [Create a branch][branch] for the change you intend to make.\n3. Make your changes to your fork.\n4. [Send a pull request][pr] from your forkÃ¢â‚¬â„¢s branch to our `main` branch.\n\nUsing the web-based interface to make changes is fine too, and will help you\nby automatically forking the project and prompting to send a pull request too.\n\n[fork]: https://help.github.com/articles/fork-a-repo/\n[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository\n[pr]: https://help.github.com/articles/using-pull-requests/\n\n## License\n\n[CC0-1.0](./LICENSE).",
      "language": "Markdown",
      "line_count": 155,
      "size_bytes": 7115,
      "file_type": "documentation"
    },
    "CONTRIBUTING.md": {
      "content": "# Contributing guidelines\n\nWeÃ¢â‚¬â„¢d love you to help us improve this project. To help us keep this collection\nhigh quality, we request that contributions adhere to the following guidelines.\n\n- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s\n  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use\n  the language, framework, editor, app, or project your change applies to.\n\n- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.\n  Current, canonical documentation mentioning the files being ignored is best.\n  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can\n  to explain what the files being ignored are for.\n\n- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please\n  take a sentence or two to tell us why your change or addition should happen.\n  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to *everyone*\n  who works with the applicable technology, rather than just you or your team.\n\n- **Please consider the scope of your change**. If your change specific to a\n  certain language or framework, then make sure the change is made to the\n  template for that language or framework, rather than to the template for an\n  editor, tool, or operating system.\n\n- **Please only modify *one template* per pull request**. This helps keep pull\n  requests and feedback focused on a specific project or technology.\n\nIn general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,\nthe more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.\n\nIf a template is mostly a list of files installed by a particular version of\nsome software (e.g. a PHP framework) then it's brittle and probably no more\nhelpful than a simple `ls`. If it's not possible to curate a small set of\nuseful rules, then the template might not be a good fit for this collection.\n\nPlease also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.\nOur aim is to curate a collection of the *most common and helpful* templates,\nnot to make sure we cover every project possible. If we choose not to\ninclude your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.",
      "language": "Markdown",
      "line_count": 39,
      "size_bytes": 2274,
      "file_type": "documentation"
    },
    "LICENSE": {
      "content": "CC0 1.0 Universal\n\nStatement of Purpose\n\nThe laws of most jurisdictions throughout the world automatically confer\nexclusive Copyright and Related Rights (defined below) upon the creator and\nsubsequent owner(s) (each and all, an \"owner\") of an original work of\nauthorship and/or a database (each, a \"Work\").\n\nCertain owners wish to permanently relinquish those rights to a Work for the\npurpose of contributing to a commons of creative, cultural and scientific\nworks (\"Commons\") that the public can reliably and without fear of later\nclaims of infringement build upon, modify, incorporate in other works, reuse\nand redistribute as freely as possible in any form whatsoever and for any\npurposes, including without limitation commercial purposes. These owners may\ncontribute to the Commons to promote the ideal of a free culture and the\nfurther production of creative, cultural and scientific works, or to gain\nreputation or greater distribution for their Work in part through the use and\nefforts of others.\n\nFor these and/or other purposes and motivations, and without any expectation\nof additional consideration or compensation, the person associating CC0 with a\nWork (the \"Affirmer\"), to the extent that he or she is an owner of Copyright\nand Related Rights in the Work, voluntarily elects to apply CC0 to the Work\nand publicly distribute the Work under its terms, with knowledge of his or her\nCopyright and Related Rights in the Work and the meaning and intended legal\neffect of CC0 on those rights.\n\n1. Copyright and Related Rights. A Work made available under CC0 may be\nprotected by copyright and related or neighboring rights (\"Copyright and\nRelated Rights\"). Copyright and Related Rights include, but are not limited\nto, the following:\n\n  i. the right to reproduce, adapt, distribute, perform, display, communicate,\n  and translate a Work;\n\n  ii. moral rights retained by the original author(s) and/or performer(s);\n\n  iii. publicity and privacy rights pertaining to a person's image or likeness\n  depicted in a Work;\n\n  iv. rights protecting against unfair competition in regards to a Work,\n  subject to the limitations in paragraph 4(a), below;\n\n  v. rights protecting the extraction, dissemination, use and reuse of data in\n  a Work;\n\n  vi. database rights (such as those arising under Directive 96/9/EC of the\n  European Parliament and of the Council of 11 March 1996 on the legal\n  protection of databases, and under any national implementation thereof,\n  including any amended or successor version of such directive); and\n\n  vii. other similar, equivalent or corresponding rights throughout the world\n  based on applicable law or treaty, and any national implementations thereof.\n\n2. Waiver. To the greatest extent permitted by, but not in contravention of,\napplicable law, Affirmer hereby overtly, fully, permanently, irrevocably and\nunconditionally waives, abandons, and surrenders all of Affirmer's Copyright\nand Related Rights and associated claims and causes of action, whether now\nknown or unknown (including existing as well as future claims and causes of\naction), in the Work (i) in all territories worldwide, (ii) for the maximum\nduration provided by applicable law or treaty (including future time\nextensions), (iii) in any current or future medium and for any number of\ncopies, and (iv) for any purpose whatsoever, including without limitation\ncommercial, advertising or promotional purposes (the \"Waiver\"). Affirmer makes\nthe Waiver for the benefit of each member of the public at large and to the\ndetriment of Affirmer's heirs and successors, fully intending that such Waiver\nshall not be subject to revocation, rescission, cancellation, termination, or\nany other legal or equitable action to disrupt the quiet enjoyment of the Work\nby the public as contemplated by Affirmer's express Statement of Purpose.\n\n3. Public License Fallback. Should any part of the Waiver for any reason be\njudged legally invalid or ineffective under applicable law, then the Waiver\nshall be preserved to the maximum extent permitted taking into account\nAffirmer's express Statement of Purpose. In addition, to the extent the Waiver\nis so judged Affirmer hereby grants to each affected person a royalty-free,\nnon transferable, non sublicensable, non exclusive, irrevocable and\nunconditional license to exercise Affirmer's Copyright and Related Rights in\nthe Work (i) in all territories worldwide, (ii) for the maximum duration\nprovided by applicable law or treaty (including future time extensions), (iii)\nin any current or future medium and for any number of copies, and (iv) for any\npurpose whatsoever, including without limitation commercial, advertising or\npromotional purposes (the \"License\"). The License shall be deemed effective as\nof the date CC0 was applied by Affirmer to the Work. Should any part of the\nLicense for any reason be judged legally invalid or ineffective under\napplicable law, such partial invalidity or ineffectiveness shall not\ninvalidate the remainder of the License, and in such case Affirmer hereby\naffirms that he or she will not (i) exercise any of his or her remaining\nCopyright and Related Rights in the Work or (ii) assert any associated claims\nand causes of action with respect to the Work, in either case contrary to\nAffirmer's express Statement of Purpose.\n\n4. Limitations and Disclaimers.\n\n  a. No trademark or patent rights held by Affirmer are waived, abandoned,\n  surrendered, licensed or otherwise affected by this document.\n\n  b. Affirmer offers the Work as-is and makes no representations or warranties\n  of any kind concerning the Work, express, implied, statutory or otherwise,\n  including without limitation warranties of title, merchantability, fitness\n  for a particular purpose, non infringement, or the absence of latent or\n  other defects, accuracy, or the present or absence of errors, whether or not\n  discoverable, all to the greatest extent permissible under applicable law.\n\n  c. Affirmer disclaims responsibility for clearing rights of other persons\n  that may apply to the Work or any use thereof, including without limitation\n  any person's Copyright and Related Rights in the Work. Further, Affirmer\n  disclaims responsibility for obtaining any necessary consents, permissions\n  or other rights required for any use of the Work.\n\n  d. Affirmer understands and acknowledges that Creative Commons is not a\n  party to this document and has no duty or obligation with respect to this\n  CC0 or use of the Work.\n\nFor more information, please see\n<http://creativecommons.org/publicdomain/zero/1.0/>",
      "language": "unknown",
      "line_count": 116,
      "size_bytes": 6554,
      "file_type": "other"
    },
    "Global/README.md": {
      "content": "## Globally Useful gitignores\n\nThis directory contains globally useful gitignores,\ne.g. OS-specific and editor specific.\n\nFor more on global gitignores:\n<https://help.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer>\n\nAnd a good blog post about 'em:\n<http://augustl.com/blog/2009/global_gitignores>",
      "language": "Markdown",
      "line_count": 10,
      "size_bytes": 359,
      "file_type": "documentation"
    },
    ".github/PULL_REQUEST_TEMPLATE.md": {
      "content": "### Reasons for making this change\n\n_TODO_\n<!---\nPlease provide some background for this change.\n--->\n\n### Links to documentation supporting these rule changes\n\n_TODO_\n\n<!---\nLink to the project docs, any existing .gitignore files that project may have in it's own repo, etc\n--->\n\n### If this is a new template\n\nLink to application or projectÃ¢â‚¬â„¢s homepage: TODO\n\n### Merge and Approval Steps\n- [ ] Confirm that you've read the [contribution guidelines](https://github.com/github/gitignore/tree/main?tab=readme-ov-file#contributing-guidelines) and ensured your PR aligns\n- [ ] Ensure CI is passing\n- [ ] Get a review and Approval from one of the maintainers",
      "language": "Markdown",
      "line_count": 23,
      "size_bytes": 661,
      "file_type": "documentation"
    },
    ".github/workflows/stale.yml": {
      "content": "name: Stale\n\n# **What it does**: Close pull requests after no updates for 180 days.\n# **Why we have it**: This repository gets a lot of PRs, and the maintainers team is small.\n#                     This helps reduce the open PRs to ones that are most desired by the community.\n# **Who does it impact**: Contributors and maintainers of github/gitignore.\n\non:\n  schedule:\n    - cron: '20 16 * * *' # Run every day at 16:20 UTC / 8:20 PST\n\npermissions:\n  actions: write\n  contents: write # only for delete-branch option\n  issues: write\n  pull-requests: write\n\njobs:\n  stale:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0\n        with:\n          stale-pr-message: 'This PR is stale because there have been no updates in 90 days. It will close after 180 days of inactivity. Leave a comment if you want to keep it open :smile:'\n          close-pr-message: 'This PR has been closed because it was inactive for 180 days. If you want to continue working on it, please open a new PR.'\n          days-before-stale: 90\n          days-before-close: 180\n          stale-pr-label: 'stale'\n          exempt-pr-labels: 'keep'\n          close-issue-reason: not_planned\n          ascending: true # Sort PRs by last updated date in ascending order\n          operations-per-run: 300",
      "language": "YAML",
      "line_count": 32,
      "size_bytes": 1331,
      "file_type": "configuration"
    }
  }
}


================================================
FILE: gitingest_outputs/Hello-World_raw_20250905_192258.txt
================================================
Directory structure:
â””â”€â”€ octocat-hello-world/
    â””â”€â”€ README

================================================
FILE: README
================================================
Hello World!





================================================
FILE: gitingest_outputs/Hello-World_structured_20250905_192258.json
================================================
{
  "repo_url": "https://github.com/octocat/Hello-World",
  "processed_at": "2025-09-05T19:22:58.411789",
  "total_files": 1,
  "total_size": 12,
  "language_stats": {},
  "file_hierarchy": {
    "octocat-hello-world": {},
    "README": "README"
  },
  "files": {
    "README": {
      "content": "Hello World!",
      "language": "unknown",
      "line_count": 1,
      "size_bytes": 12,
      "file_type": "other"
    }
  }
}


================================================
FILE: gitingest_outputs/octocat_Hello-World_20250905_193031.txt
================================================
Directory structure:
â””â”€â”€ octocat-hello-world/
    â””â”€â”€ README

================================================
FILE: README
================================================
Hello World!





================================================
FILE: gitingest_outputs/Samay1011_Project_ecommerce_React_20250906_104832.txt
================================================
Directory structure:
â””â”€â”€ samay1011-project_ecommerce_react/
    â”œâ”€â”€ Backend/
    â”‚   â”œâ”€â”€ package.json
    â”‚   â”œâ”€â”€ server.js
    â”‚   â”œâ”€â”€ public/
    â”‚   â”‚   â”œâ”€â”€ index.css
    â”‚   â”‚   â”œâ”€â”€ productDetail.css
    â”‚   â”‚   â””â”€â”€ ProductForm.css
    â”‚   â””â”€â”€ src/
    â”‚       â”œâ”€â”€ app.js
    â”‚       â”œâ”€â”€ db/
    â”‚       â”‚   â””â”€â”€ db.js
    â”‚       â”œâ”€â”€ models/
    â”‚       â”‚   â”œâ”€â”€ cart.model.js
    â”‚       â”‚   â”œâ”€â”€ product.model.js
    â”‚       â”‚   â””â”€â”€ user.model.js
    â”‚       â””â”€â”€ routes/
    â”‚           â”œâ”€â”€ cart.router.js
    â”‚           â”œâ”€â”€ index.router.js
    â”‚           â”œâ”€â”€ login.router.js
    â”‚           â”œâ”€â”€ product.router.js
    â”‚           â””â”€â”€ user.router.js
    â””â”€â”€ Frontend/
        â”œâ”€â”€ README.md
        â”œâ”€â”€ eslint.config.js
        â”œâ”€â”€ index.html
        â”œâ”€â”€ package.json
        â”œâ”€â”€ vite.config.js
        â””â”€â”€ src/
            â”œâ”€â”€ App.css
            â”œâ”€â”€ App.jsx
            â”œâ”€â”€ index.css
            â”œâ”€â”€ main.jsx
            â”œâ”€â”€ components/
            â”‚   â”œâ”€â”€ Footer.css
            â”‚   â”œâ”€â”€ Footer.jsx
            â”‚   â”œâ”€â”€ Navbar.css
            â”‚   â””â”€â”€ Navbar.jsx
            â””â”€â”€ Pages/
                â”œâ”€â”€ AddProducts.css
                â”œâ”€â”€ AddProducts.jsx
                â”œâ”€â”€ Cart.css
                â”œâ”€â”€ Cart.jsx
                â”œâ”€â”€ CartContext.jsx
                â”œâ”€â”€ Home.css
                â”œâ”€â”€ Home.jsx
                â”œâ”€â”€ ImageUploader.jsx
                â”œâ”€â”€ Login.css
                â”œâ”€â”€ Login.jsx
                â”œâ”€â”€ ProductDetail.css
                â”œâ”€â”€ ProductDetail.jsx
                â”œâ”€â”€ UserHome.css
                â”œâ”€â”€ UserHome.jsx
                â”œâ”€â”€ UserProduct.css
                â””â”€â”€ UserProduct.jsx

================================================
FILE: Backend/package.json
================================================
{
  "name": "e-commerce",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "description": "",
  "dependencies": {
    "bcrypt": "^6.0.0",
    "cors": "^2.8.5",
    "dotenv": "^17.2.1",
    "ejs": "^3.1.10",
    "express": "^5.1.0",
    "imagekit": "^6.0.0",
    "mongoose": "^8.16.4",
    "morgan": "^1.10.1",
    "multer": "^2.0.2",
    "nodemon": "^3.1.10"
  }
}



================================================
FILE: Backend/server.js
================================================
const app = require("./src/app")
const connect = require("./src/db/db")

const PORT = process.env.PORT || 3000

app.listen(PORT, ()=>{
    console.log("server running on port no : ",PORT);
    connect()
})


================================================
FILE: Backend/public/index.css
================================================
[Empty file]


================================================
FILE: Backend/public/productDetail.css
================================================
[Empty file]


================================================
FILE: Backend/public/ProductForm.css
================================================
[Empty file]


================================================
FILE: Backend/src/app.js
================================================
const express = require("express")
const productRouter = require("./routes/product.router")
const indexRouter = require("./routes/index.router")
const userRouter = require("./routes/user.router")

const cartRouter = require("./routes/cart.router")
const loginRouter = require("./routes/login.router")
require("dotenv").config()
const app = express()
const path = require("path")
const morgon = require("morgan")
const cors = require("cors")

app.use(morgon("dev"))


app.use(cors())

app.use(express.json())
app.use(express.urlencoded({extended : true}))

console.log(process.env.MONGODB_URI);

app.use("/", indexRouter) 
app.use("/users", userRouter)
app.use("/products",productRouter)
app.use("/cart", cartRouter)
app.use("/login",loginRouter)


module.exports = app


================================================
FILE: Backend/src/db/db.js
================================================
const mongoose = require("mongoose")

const connect = ()=>{
    // mongoose.connect("mongodb://localhost:27017/VIPS")
    mongoose.connect(process.env.MONGODB_URI)
    .then(()=>{
        console.log("database connected");
    })
    .catch((err)=>{
        console.log(err);
    })
}

module.exports = connect


================================================
FILE: Backend/src/models/cart.model.js
================================================
const mongoose = require("mongoose");

const cartSchema = new mongoose.Schema({
  productId: {
    type: mongoose.Schema.Types.ObjectId,
    required: true,
    ref: "product", 
  }
});

const cartModel = mongoose.model("Cart", cartSchema);

module.exports = cartModel;


================================================
FILE: Backend/src/models/product.model.js
================================================
const mongoose = require("mongoose")


const productSchema = new mongoose.Schema({
    title : {
        type : String
    },
    description : {
        type : String
    },
    category : {
        type : String
    },
    price : {
        type : String
    },
    image : {
        type : String
    }
})

const productModel = mongoose.model("product",productSchema)

module.exports = productModel


================================================
FILE: Backend/src/models/user.model.js
================================================
const mongoose = require("mongoose")


const userSchema = new mongoose.Schema({
    username : {
        type : String,
        required : true
    },
    email :  {
        type : String,
        required : true,
        unique : true
    },

    password : {
        type : String ,
        required : true
    }
})



const userModel = mongoose.model("User", userSchema)

module.exports = userModel


================================================
FILE: Backend/src/routes/cart.router.js
================================================
const express = require("express");
const cartModel = require("../models/cart.model");
const router = express.Router();



// GET /cart with product details
router.get("/", async (req, res) => {
    try {
        const cartItems = await cartModel.find().populate("productId"); // Populate the product details
        res.status(200).json(cartItems);
  } catch (error) {
      res.status(500).json({ error: "Failed to fetch cart items" });
  }
});

// POST /cart/add
router.post("/add/:productId", async (req, res) => {
  try {
    const { productId } = req.params;

    if (!productId) {
      return res.status(400).json({ error: "productId is required" });
    }

    const cartItem = new cartModel({ productId });
    await cartItem.save();

    res.status(201).json({ message: "Product added to cart", cartItem });
  } catch (error) {
    res.status(500).json({ error: "Internal server error" });
  }
});


router.delete("/reduce/:productId", async (req, res) => {
  try {
    const { productId } = req.params;

    const deletedItem = await cartModel.findOneAndDelete({ productId });
    if (!deletedItem) {
      return res.status(404).json({ error: "Product not found in cart" });
    }

    res.status(200).json({ message: "One item removed", deletedItem });
  } catch (error) {
    res.status(500).json({ error: "Internal server error" });
  }
});


router.delete("/delete/:productId", async (req, res) => {
  try {
    const { productId } = req.params;

    const result = await cartModel.deleteMany({ productId });
    res.status(200).json({ message: "All items of this product removed", deletedCount: result.deletedCount });
  } catch (error) {
    res.status(500).json({ error: "Internal server error" });
  }
});






module.exports = router;


================================================
FILE: Backend/src/routes/index.router.js
================================================
const express = require("express")
const productModel = require("../models/product.model")

const router = express.Router()



router.get("/", async(req, res)=>{
   const products = await productModel.find()

    res.status(200).json({message : "data found" , products})
})



module.exports = router


================================================
FILE: Backend/src/routes/login.router.js
================================================
const express = require("express")
const loginModel = require("../models/login.model")

const router = express.Router()



router.get("/", async(req, res)=>{
   res.render()
})



module.exports = router


================================================
FILE: Backend/src/routes/product.router.js
================================================

const express = require("express");
const productModel = require("../models/product.model");
const ImageKit = require("imagekit");
const multer = require("multer");
const storage = multer.memoryStorage();
const upload = multer({ storage: storage });
const router = express.Router();



router.get("/", (req, res) => {
 
});



router.post("/add", upload.single("image"), async (req, res) => {

  const imagekit = new ImageKit({
    publicKey: process.env.PUBLIC_KEY  ,
    privateKey :process.env.PRIVATE_KEY,
    urlEndpoint: process.env.URLENDPOINT ,
  });


  const result = await imagekit.upload({
    file : req.file.buffer,
    fileName : req.file.originalname,
    isPrivateFile : false,
    isPublished : true
  })

  const imageUrl = result.url

 
  const { title, description, category, price } = req.body;
  

      const product = new productModel(
          {
              title : title,
              description : description,
              category : category,
              price : price,
              image : imageUrl
           }
  )

      await product.save()

  res.json({message : "data aaya"})
});

router.get("/:id",async (req, res)=>{
    const productId = req.params.id

    const product = await productModel.findById(productId)

    console.log(product);


    res.status(200).json({message : "data mil gya " , product})
    
})

router.get("/update/:id", async(req, res)=>{

    const productId = req.params.id

    const product = await productModel.findById(productId)


    res.render("updateForm",{product : product})
})


router.post("/update/:id",upload.single("image") ,async(req, res)=>{

    const productId = req.params.id

    console.log(req.body);
    
  const { title, description, category, price } = req.body;

  
  // const imagekit = new ImageKit({
  //   publicKey: "public_M0PAK4NmC1d2995cVHB6hjiBgaE=",
  //   privateKey : "private_KT7FkfaTOTLNy6lVG+V7iKE2ba4=",
  //   urlEndpoint: "https://ik.imagekit.io/ls436o8px",
  // });


  // const result = await imagekit.upload({
  //   file : req.file.buffer,
  //   fileName : req.file.originalname,
  //   isPrivateFile : false,
  //   isPublished : true
  // })

  // const imageUrl = result.url

    await productModel.findByIdAndUpdate(productId,{
    title : title,
    description : description,
    category : category,
    price : price,
    image : imageUrl
  })

  res.redirect(`/products/${productId}`)
    
})


router.get("/delete/:id" , async (req,res)=>{
    const productId = req.params.id

    await productModel.findByIdAndDelete(productId)

    res.redirect("/")
})



module.exports = router;



================================================
FILE: Backend/src/routes/user.router.js
================================================
const express = require("express")
const bcrypt = require("bcrypt")
const userModel = require("../models/user.model")

const router = express.Router()

router.post("/register",async (req, res)=>{

    const {username , email , password} = req.body

    try {
      
        if(!username){
            return res.status(400).json({message : "username is required"})
        }
        if(!email){
            return res.status(400).json({message : "email is required"})
        }
        if(!password){
            return res.status(400).json({message : "password is required"})
        }
       

        const hashedPass = await bcrypt.hash(password ,10)

        const user = new userModel({
            username : username,
            email : email ,
            password : hashedPass
        })


        await user.save()
        
        res.send("register successfully....")

    } catch (error) {
        console.log(error);
        res.status(500).json({message : "internal server error", error : error.message})
    }

})


router.post("/login", async (req, res)=>{
    const {email , password} = req.body

    try {


        if(!email){
            return res.status(400).json({message : "email is required"})
        }
        if(!password){
            return res.status(400).json({message : "password is required"})
        }

        const user = await userModel.findOne({email : email})

        if(!user){
            return res.status(400).json({message : "user not exists"})
        }

        const isTrue = await bcrypt.compare(password ,user.password )


        if(!isTrue){
            return res.status(400).json({message : "email or password desnot match"})
        }

        res.status(200).json({message : "login successfully..."})

    } catch (error) {
        console.log(error); 
        res.status(500).json({message : "internal server error", error : error.message})
    
    }
})


module.exports = router


================================================
FILE: Frontend/README.md
================================================
# React + Vite

This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.

Currently, two official plugins are available:

- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react) uses [Babel](https://babeljs.io/) for Fast Refresh
- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh

## Expanding the ESLint configuration

If you are developing a production application, we recommend using TypeScript with type-aware lint rules enabled. Check out the [TS template](https://github.com/vitejs/vite/tree/main/packages/create-vite/template-react-ts) for information on how to integrate TypeScript and [`typescript-eslint`](https://typescript-eslint.io) in your project.



================================================
FILE: Frontend/eslint.config.js
================================================
import js from '@eslint/js'
import globals from 'globals'
import reactHooks from 'eslint-plugin-react-hooks'
import reactRefresh from 'eslint-plugin-react-refresh'
import { defineConfig, globalIgnores } from 'eslint/config'

export default defineConfig([
  globalIgnores(['dist']),
  {
    files: ['**/*.{js,jsx}'],
    extends: [
      js.configs.recommended,
      reactHooks.configs['recommended-latest'],
      reactRefresh.configs.vite,
    ],
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
      parserOptions: {
        ecmaVersion: 'latest',
        ecmaFeatures: { jsx: true },
        sourceType: 'module',
      },
    },
    rules: {
      'no-unused-vars': ['error', { varsIgnorePattern: '^[A-Z_]' }],
    },
  },
])



================================================
FILE: Frontend/index.html
================================================
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Vite + React</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>



================================================
FILE: Frontend/package.json
================================================
{
  "name": "ecommerce-react",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "axios": "^1.11.0",
    "imagekitio-react": "^4.3.0",
    "react": "^19.1.0",
    "react-dom": "^19.1.0",
    "react-router-dom": "^7.7.1",
    "remixicon": "^4.6.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.30.1",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@vitejs/plugin-react": "^4.6.0",
    "eslint": "^9.30.1",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "globals": "^16.3.0",
    "vite": "^7.0.4"
  }
}



================================================
FILE: Frontend/vite.config.js
================================================
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react()],
})



================================================
FILE: Frontend/src/App.css
================================================
[Empty file]


================================================
FILE: Frontend/src/App.jsx
================================================
import React from 'react'
import Navbar from './components/Navbar'
import 'remixicon/fonts/remixicon.css'
import AddProducts from "./Pages/AddProducts"
// import { Routes , Route } from 'react-router-dom'
import Home from './Pages/Home'
import ProductDetail from './Pages/ProductDetail'
import UserHome from './Pages/UserHome'
import Cart from './Pages/Cart'
// import Login from './Pages/Login'
import Login from './Pages/Login'
import UserProduct from './Pages/UserProduct'
import { BrowserRouter as Router, Routes, Route } from "react-router-dom";
import { CartProvider } from "./Pages/CartContext";
import Footer from './components/Footer'


const App = () => {
  return (
    <div>
      {/* <CartProvider> */}
      {/* <Router> */}
        <Routes>
          <Route path='/' element={<UserHome/>}/>
          <Route path="/products/detail/:productId" element={<UserProduct/>} />
          <Route path="/cart" element={<Cart />} />
          <Route  path='/admin/' element={<Home/>}/>
          <Route  path='/admin/products/add' element={<AddProducts/>}/>
          <Route  path='/admin/products/detail/:productId'  element={<ProductDetail/>}/>
          <Route  path='/login'  element={<Login/>}/>
          </Routes>
      {/* </Router> */}
    {/* </CartProvider> */}

      {/* <Routes>
        <Route  path='/admin/' element={<Home/>}/>
        <Route  path='/admin/products/add' element={<AddProducts/>}/>
        <Route  path='/admin/products/detail/:productId'  element={<ProductDetail/>}/>
      </Routes>  */}

        <Footer />
    </div>


  )
}

export default App


================================================
FILE: Frontend/src/index.css
================================================
* {
  margin: 0%;
  padding: 0%;
  box-sizing: border-box;
}


html , body {
  height: 100%;
  width: 100%;
}


================================================
FILE: Frontend/src/main.jsx
================================================
import { StrictMode } from "react";
import { createRoot } from "react-dom/client";
import { BrowserRouter } from "react-router-dom";
import "./index.css";
import App from "./App.jsx";

createRoot(document.getElementById("root")).render(

    <BrowserRouter>
      <App />
    </BrowserRouter>
);


================================================
FILE: Frontend/src/components/Footer.css
================================================
.footer {
  position: fixed;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 5%;
  background-color: rgb(219, 219, 219);
  text-align: center;
  padding: 10px 0;
  font-size: 0.6rem;
  color: black;
  border-top: 1px solid #ccc;
  z-index: 100;
}



================================================
FILE: Frontend/src/components/Footer.jsx
================================================
import React from 'react';
import './Footer.css';

const Footer = () => {
  return (
    <footer className="footer">
      Ã‚Â© Copyright - Samay Talwar
    </footer>
  );
};

export default Footer;



================================================
FILE: Frontend/src/components/Navbar.css
================================================
/* nav {
    height: 50px;
    width: 100%;
    background-color: rgb(201, 240, 247);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px 10px;
}

nav .search input {

    width: 500px;
    padding: 5px;
    border-radius: 5px;
    border: none;
}

.right{
    position: relative; */
    /* right : 200px;  */
    /* top : 10px */
/* } */


nav {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 60px;
  background-color: rgb(201, 240, 247);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 16px;
  box-sizing: border-box;
  z-index: 9999;
  overflow: hidden;
}

nav .left {
  flex: 0 0 auto;
  white-space: nowrap;
}

nav .left h2 {
  margin: 0;
  font-size: 1.5rem;
}

nav .search {
  flex: 1 1 auto;
  display: flex;
  justify-content: center;
  min-width: 0;
}

nav .search input {
  width: 100%;
  max-width: 500px;
  padding: 8px 12px;
  border-radius: 5px;
  border: 1px solid #ccc;
  font-size: 1rem;
  box-sizing: border-box;
}

/* KEY FIX: Right section does NOT wrap or overflow */
nav .right {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  gap: 1rem;
  white-space: nowrap;
  min-width: fit-content;
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
}



================================================
FILE: Frontend/src/components/Navbar.jsx
================================================
import React from 'react'
import "./Navbar.css"
import { Link } from 'react-router-dom'


const Navbar = () => {
  return (
    <nav>
        <div className="left">
             <Link to="/admin"><h2>Shopy</h2></Link>
        </div>
        <div className='search'>
            <input type="text" />
        </div>
        <div className="right">
          <Link to="/admin/products/add">Add new Product</Link>
        </div>
    </nav>
  )
}

export default Navbar


================================================
FILE: Frontend/src/Pages/AddProducts.css
================================================
html, body{
    margin: 0%;
    padding: 0%;
    box-sizing: border-box;
}

.head{
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgb(204, 204, 231);
    height: 50px;
    border: 2px solid black;
}

.formContainer {
   display: flex;
    flex-direction: column;
    align-items: center;
}

form{
   padding: 40px;
    border: 2px solid black;
    width: 350px;
    height: 550px;
    border-radius: 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    margin: 40px 0px ;
}
.formGroup {
  margin-bottom: 18px;
}

label {
  display: block;
  margin-bottom: 6px;
  font-weight: 500;
  color: #333;
}

input[type="text"],
input[type="number"],
input[type="file"] {
  width: 100%;
  padding: 8px 10px;
  border: 1px solid #ccc;
  border-radius: 6px;
  font-size: 1rem;
  margin-bottom: 4px;
}

button[type="submit"] {
  background: #007bff;
  color: #fff;
  border: none;
  padding: 10px 22px;
  border-radius: 6px;
  font-size: 1rem;
  cursor: pointer;
  transition: background 0.2s;
}

button[type="submit"]:hover {
  background: #0056b3;
}



================================================
FILE: Frontend/src/Pages/AddProducts.jsx
================================================
import React, { useState } from 'react';
import axios from 'axios';
import './AddProducts.css';
import { useNavigate } from 'react-router-dom';
import ImageUploader from './ImageUploader';


const AddProducts = () => {

    const navigate = useNavigate()
    const [title, settitle] = useState('');
    const [image, setimage] = useState('');
    const [description, setdescription] = useState('');
    const [category, setcategory] = useState('');
    const [price, setprice] = useState('');

    const handleSubmit = (e) => {
        e.preventDefault();
        let formData = new FormData(e.target);
        axios.post("https://project-ecommerce-react-backend-rm5q.onrender.com/admin/products/add", formData)
            .then((res) => {
                console.log(res);
                navigate("/")
            })
            .catch((err) => {
                console.log(err);
            });
    };

    return (
        <div>
            <div className="head"><h1>Add New Products</h1></div>
            <div className='formContainer'>
            <form onSubmit={handleSubmit}>
                <div className="formGroup">
                    <label htmlFor="title">Title</label>
                    <input
                        type="text"
                        placeholder="Enter product title"
                        value={title}
                        onChange={(e) => settitle(e.target.value)}
                        name="title"
                        id="title"
                    />
                </div>
                
                {/* <ImageUploader/> */}
                <br />

                <div className="formGroup">
                    <label htmlFor="image">Image</label>
                    <input
                        type="file"
                        name="image"
                        id="image"
                        accept="image/*"
                        onChange={(e) => setimage(e.target.files[0])}
                    />
                </div>

                <div className="formGroup">
                    <label htmlFor="description">Description</label>
                    <input
                        type="text"
                        placeholder="Enter product description"
                        name="description"
                        id="description"
                        value={description}
                        onChange={(e) => setdescription(e.target.value)}
                    />
                </div>

                <div className="formGroup">
                    <label htmlFor="category">Category</label>
                    <input
                        type="text"
                        placeholder="Enter product category"
                        name="category"
                        id="category"
                        value={category}
                        onChange={(e) => setcategory(e.target.value)}
                    />
                </div>

                <div className="formGroup">
                    <label htmlFor="price">Price</label>
                    <input
                        type="number"
                        placeholder="Enter product price"
                        name="price"
                        id="price"
                        value={price}
                        onChange={(e) => setprice(e.target.value)}
                    />
                </div>

                <button type="submit">Submit</button>
            </form>
        </div>
        </div>
        
    );
};

export default AddProducts;


================================================
FILE: Frontend/src/Pages/Cart.css
================================================
.head{
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: rgb(204, 204, 231);
    height: 50px;
    border: 2px solid black;
}

.no{
    display: flex;
    text-align: center;
    font-size: 40px;
    justify-content: center;
    padding-top: 100px;
}


================================================
FILE: Frontend/src/Pages/Cart.jsx
================================================
import React, { useEffect, useState } from 'react';
import axios from 'axios';
import "./Cart.css"

const Cart = () => {
  const [cart, setCart] = useState([]);

  useEffect(() => {
    fetchCart();
  }, []);

  const fetchCart = () => {
    axios.get('https://project-ecommerce-react-backend-rm5q.onrender.com/cart')
      .then((response) => {
        const grouped = groupByProduct(response.data);
        setCart(grouped);
      })
      .catch((error) => console.error('Error fetching cart:', error));
  };

  const groupByProduct = (items) => {
    const map = new Map();

    for (const item of items) {
      const id = item.productId._id;
      if (map.has(id)) {
        map.get(id).quantity += 1;
      } else {
        map.set(id, { ...item.productId, quantity: 1 });
      }
    }

    return Array.from(map.values());
  };

  const reduceQuantity = (productId) => {
    axios.delete(`https://project-ecommerce-react-backend-rm5q.onrender.com/cart/reduce/${productId}`)
      .then(() => fetchCart())
      .catch((err) => console.error('Error reducing quantity:', err));
  };

  const deleteProduct = (productId) => {
    axios.delete(`https://project-ecommerce-react-backend-rm5q.onrender.com/cart/delete/${productId}`)
      .then(() => fetchCart())
      .catch((err) => console.error('Error deleting product:', err));
  };

  return (
    <div>
      <div className='head'>
        <h2>Your Cart</h2>
      </div>

      {cart.length === 0 ? (
        <div className="no"><p>No items in cart</p></div>
      ) : (
        <div style={styles.cardContainer}>
          {cart.map((item) => (
            <div key={item._id} style={styles.card}>
              <img
                src={item.image}
                alt={item.title}
                style={styles.image}
              />
              <h3>{item.title}</h3>
              <p>Ã¢â€šÂ¹{item.price}</p>
              <p><strong>Quantity:</strong> {item.quantity}</p>

              <div style={{ marginTop: '10px' }}>
                <button onClick={() => reduceQuantity(item._id)} style={styles.btn}>Ã¢Ë†â€™</button>
                <button onClick={() => deleteProduct(item._id)} style={{ ...styles.btn, backgroundColor: '#e74c3c' }}>Delete</button>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

const styles = {
  cardContainer: {
    display: 'grid',
    gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))',
    gap: '20px',
    padding: '20px',
  },
  card: {
    border: '1px solid #ccc',
    borderRadius: '10px',
    padding: '16px',
    textAlign: 'center',
    boxShadow: '0 2px 8px rgba(0,0,0,0.1)',
  },
  image: {
    width: '100%',
    height: '150px',
    objectFit: 'cover',
    marginBottom: '10px',
  },
  btn: {
    margin: '5px',
    padding: '6px 12px',
    border: 'none',
    borderRadius: '5px',
    backgroundColor: '#3498db',
    color: '#fff',
    cursor: 'pointer',
  },
};

export default Cart;



================================================
FILE: Frontend/src/Pages/CartContext.jsx
================================================
import { createContext, useState, useContext } from "react";

// Create context
const CartContext = createContext();

// Provide context
export const CartProvider = ({ children }) => {
  const [cart, setCart] = useState([]);

  const addToCart = (product) => {
    setCart((prevCart) => [...prevCart, product]);
  };

  return (
    <CartContext.Provider value={{ cart, addToCart }}>
      {children}
    </CartContext.Provider>
  );
};

// Custom hook
export const useCart = () => useContext(CartContext);



================================================
FILE: Frontend/src/Pages/Home.css
================================================
/* html, body{
    margin: 0%;
    padding: 0%;
    box-sizing: border-box;
    background-color:rgb(248, 248, 248);;
}

a{
    color: black;
    text-decoration: none;
} */

/* .container {
    margin-top: 50px; */
    /* display: flex;
    align-items: center;
    justify-content: center; */
    /* display: grid;
    grid-template-columns: repeat(4,1fr); */
    /* gap: 20px; */
    /* padding-left: 40px;
    background-color: rgb(247, 247, 247);
} */

/* .container .card {
    border : 2px solid black;
    height: 375px;
    width: 255px;
    border-radius: 20px ;
    padding: 15px;
    background-color: #fff;
} */

/* .card .top {
    width: 100%;
    height: 50%;

}

.card .top img {
    width: 100%;
    height: 100%;
} */

/* h4{
  position: relative;
  bottom: -23px
} */

html, body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  background-color: rgb(248, 248, 248);
  font-size: 16px;
  /* font-family: sans-serif; */
}

a {
  color: black;
  text-decoration: none;
}

.container {
    margin-top: 80px;
  /* margin-top: 5vh; */
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;
  padding: 0 5vw 5vh;
  background-color: rgb(247, 247, 247);
  justify-items: center;
}

.card {
  width: 100%;
  max-width: 260px;
  background-color: #fff;
  border: 2px solid #000;
  border-radius: 1rem;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  transition: transform 0.2s ease;
}

.card:hover {
  transform: scale(1.02);
}

.card .top {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 180px;
  overflow: hidden;
}

.card .top img {
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

.card .bottom {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  /* gap: 0.5rem; */
}

/* Allow long titles to wrap */
.card .bottom h1 {
  font-size: 1.3rem;
  margin: 0;
  line-height: 1.4;
  word-wrap: break-word;
}

/* Price always visible and wrapped */
.card .bottom h4 {
  font-size: 1rem;
  padding-bottom: 15px ;
  margin: 0;
  color: #333;
  font-weight: 500;
}




================================================
FILE: Frontend/src/Pages/Home.jsx
================================================
import axios from "axios";
import React, { useEffect, useState } from "react";
import "./Home.css";
import { Link } from "react-router-dom";
import Navbar from "../components/Navbar";


const Home = () => {
  const [productData, setProductData] = useState([]);

  useEffect(() => {
    getData();
  }, []);

  const getData = async () => {
    await axios
      .get("https://project-ecommerce-react-backend-rm5q.onrender.com/")
      .then((res) => {
        console.log(res.data.products);
        setProductData(res.data.products);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  return (
   <div>
      <Navbar/>
     <div className="container">

      {productData.map((elem, index) => {
        return <div className="card" key={index}>
          <div className="top">
            <img
              src={elem.image}
              alt=""
              width="200px"
            />
          </div>
          <div className="bottom">
            <Link to={`/admin/products/detail/${elem._id}`}><h1>{elem.title}</h1></Link>
            <h4>Price : {elem.price}</h4>
          </div>
        </div>;
      })}
    </div>
   </div>
  );
};

export default Home;


================================================
FILE: Frontend/src/Pages/ImageUploader.jsx
================================================
// ImageUploader.jsx
import React from "react";
import { IKContext, IKUpload } from "imagekitio-react";

const ImageUploader = () => {
  const onUploadSuccess = (res) => {
    console.log("Upload Success:", res);
    alert("Upload Success: " + res.url);
  };

  const onUploadError = (err) => {
    console.error("Upload Error:", err);
    alert("Upload Failed: " + err.message);
  };

  return (

    <IKContext
      publicKey= {process.env.PUBLIC_KEY}
    //   process.env.PRIVATE_KEY
      urlEndpoint= {process.env.URLENDPOINT}
      authenticationEndpoint="http://www.yourserver.com/auth" // <-- your backend auth API
    >
      <label htmlFor="">Upload an Image</label>
      <IKUpload
        fileName="user-upload.jpg"
        useUniqueFileName={true}
        isPrivateFile={false}
        onSuccess={onUploadSuccess}
        onError={onUploadError}
      />
    </IKContext>
  );
};

export default ImageUploader;



================================================
FILE: Frontend/src/Pages/Login.css
================================================

.login-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  background: linear-gradient(135deg, #d3efff, #f0faff);
}

.login-form {
  background-color: #ffffff;
  padding: 2rem 2.5rem;
  border-radius: 10px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  gap: 1.2rem;
  min-width: 300px;
  max-width: 400px;
}

.login-form h2 {
  margin: 0;
  text-align: center;
  color: #333;
}

.login-form input {
  padding: 0.75rem;
  border-radius: 6px;
  border: 1px solid #ccc;
  font-size: 1rem;
}

.login-form button {
  padding: 0.75rem;
  background-color: #00bcd4;
  border: none;
  color: white;
  border-radius: 6px;
  font-size: 1rem;
  cursor: pointer;
  transition: background 0.3s ease;
}

.login-form button:hover {
  background-color: #0097a7;
}

.login-form pre {
  font-size: 0.8rem;
  color: #666;
  background-color: #f7f7f7;
  padding: 0.5rem;
  border-radius: 5px;
}

.login-form .error {
  color: red;
  font-size: 0.9rem;
  text-align: center;
}



================================================
FILE: Frontend/src/Pages/Login.jsx
================================================

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import './Login.css';

const Login = () => {
  const navigate = useNavigate();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const allowedEmail = 'Sam10Admin@gmail.com';
  const allowedPassword = 'admin123';

  const handleSubmit = (e) => {
    e.preventDefault();
    if (email === allowedEmail && password === allowedPassword) {
      navigate('/admin');
    } else {
      setError('Invalid email or password');
    }
  };

  return (
    <div className="login-container">
      <form onSubmit={handleSubmit} className="login-form">
        <pre className="hint">
        For evaluation puropse : <br />
        Email: Sam10Admin@gmail.com <br />
        Password: admin123 <br />
        Only this email is allowed for Admin <br />
        </pre>
        <h2>Admin Login</h2>
        {error && <p className="error">{error}</p>}
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          required
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
          required
        />
        <button type="submit">Login</button>
      </form>
    </div>
  );
};

export default Login;



================================================
FILE: Frontend/src/Pages/ProductDetail.css
================================================
/* .product-container {
    height: 100%;
    width: 100%;
    background-color: rgb(226, 128, 128);
    display: flex;
    justify-content: center;
    align-items: center;
}

.main {
    height: 80%;
    width: 80%;
    border: 2px solid black;
    display: flex;
}

.left {
    width: 50%;
    height: 100%;

}

.left img {
    height: 100%;
    width: 100%;
}
.right {
    height: 100%;
    width: 50%;
} */




/* html, body{
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    height: 100%;
    width: 100%;
}

.home {
    width: 100%;
    height: 600px;
    display: flex;
    align-items: center ;
    justify-content: center;
    background-color: #d7d7d7;
}

.pr{
    display: flex;
    align-items: center ;
    justify-content: center;
    border: 2px black solid;
    border-radius: 30px;
    background-color: #fff;
    width: 90%;
    height: 550px;
    padding: 0px 30px 0px 10px;
    gap: 20px;
}
 */


 html, body {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    height: 100%;
    width: 100%;
    font-size: 16px; /* Base font size for rem scaling */
}

.home {
    width: 100%;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #d7d7d7;
    padding: 5vh 5vw;
}

.pr {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    border: 0.125rem solid black;
    border-radius: 2rem;
    background-color: #fff;
    width: 100%;
    max-width: 90vw;
    padding: 2rem;
    gap: 2rem;
    flex-wrap: wrap;
}

/* Image section */
.pr img {
    width: 100%;
    max-width: 30vw;
    height: auto;
    border-radius: 1rem;
}

/* Text section */
.pr > div:last-child {
    flex: 1;
    min-width: 250px;
    font-size: 1rem;
}

h1 {
    font-size: 2rem;
}

h2 {
    font-size: 1.5rem;
}

p {
    font-size: 1rem;
    line-height: 1.5;
}



================================================
FILE: Frontend/src/Pages/ProductDetail.jsx
================================================
import React, { useEffect } from 'react'
import { useParams } from 'react-router-dom'
import "./ProductDetail.css"
import axios from 'axios'
import{ useState } from 'react';

const ProductDetail = () => {

   const {productId} = useParams()
   const [productData, setProductData] = useState([]);
    
    useEffect(() => {
        getProductDetail()

    }, [productId])
    

    const getProductDetail = async()=>{

       await axios.get("https://project-ecommerce-react-backend-rm5q.onrender.com/products/"+productId)
        .then((res)=>{
            console.log(res);
            setProductData(res.data.product);
            
        })
        .catch((err)=>{
            console.log(err);
        })

    }

  return (
    <div className='home'>
     
      <div className="pr">
        <div><img src={productData.image} alt="Product" height="450px" /></div>
            <div>
                <div>
                  <h1>{productData.title}</h1><br />
                  <h2>Price: Ã¢â€šÂ¹{productData.price}</h2><br />
                  <b>Description:</b>
                  <p>{productData.description}</p><br />
                  <p><b>Category:</b> {productData.category}</p><br />

                </div>
                
               {/* <div className="buttons">
                <button><a href="/products/update">Update</a></button>
                <button><a href="/products/delete">Delete</a></button>
               </div> */}

            </div>

      </div>
    </div>
  )
}

export default ProductDetail


================================================
FILE: Frontend/src/Pages/UserHome.css
================================================
/* html, body{
    margin: 0%;
    padding: 0%;
    box-sizing: border-box;
    background-color:rgb(248, 248, 248);;
}

a{
    color: black;
    text-decoration: none;
} */
/* 
.container {
    margin-top: 50px;
    /* display: flex;
    align-items: center;
    justify-content: center; */
    /* display: grid; */
    /* grid-template-columns: repeat(4,1fr); */
    /* gap: 20px; */
    /* padding-left: 40px; */
    /* background-color: rgb(247, 247, 247); */
/* } */

/* .container .card {
    border : 2px solid black;
    height: 375px;
    width: 255px;
    border-radius: 20px ;
    padding: 15px;
    background-color: #fff;
} */ 

/* .card .top {
    width: 100%;
    height: 50%;

}

.card .top img {
    width: 100%;
    height: 100%;
} */

/* h4{
  position: relative;
  bottom: -23px
}

nav {
    height: 50px;
    width: 100%;
    background-color: rgb(161, 219, 239);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 5px 10px;
}

nav .search input {

    width: 500px;
    padding: 5px;
    border-radius: 5px;
    border: none; */
/* }

.right{
    position: relative;
    right : -260px; 
     top : 10px
} */

html, body {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    background-color: rgb(248, 248, 248);
    font-size: 16px;
}

a {
    color: black;
    text-decoration: none;
}


nav {
  position: fixed;
  gap: 0.5rem;
  top: 0;
  left: 0;
  width: 100%;
  height: 60px;
  background-color: rgb(201, 240, 247);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 10px 16px;
  box-sizing: border-box;
  z-index: 9999;
  overflow: hidden;
}

nav .left {
  flex: 0 0 auto;
  white-space: nowrap;
}

nav .left h2 {
  margin: 0;
  font-size: 1.5rem;
}

nav .search {
  flex: 1 1 auto;
  display: flex;
  justify-content: center;
  min-width: 0;
}

nav .search input {
  width: 100%;
  max-width: 500px;
  padding: 8px 12px;
  border-radius: 5px;
  border: 1px solid #ccc;
  font-size: 1rem;
  box-sizing: border-box;
}

/* KEY FIX: Right section does NOT wrap or overflow */
nav .right {
  flex: 0 0 auto;
  display: flex;
  align-items: center;
  gap: 1rem;
  white-space: nowrap;
  min-width: fit-content;
  max-width: 200px;
  overflow: hidden;
  text-overflow: ellipsis;
}


/* Product Grid */
.container {
    margin-top: 80px;
    /* margin-top: 5vh; */
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 2rem;
    padding: 0 5vw;
    background-color: rgb(247, 247, 247);
    justify-items: center;
}

/* Individual Card */
.container .card {
    border: 0.125rem solid black;
    width: 90%;
    max-width: 255px;
    height: auto;
    border-radius: 1.25rem;
    padding: 1rem;
    background-color: #fff;
    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.05);
    transition: transform 0.2s;
}

.container .card:hover {
    transform: scale(1.02);
}

.container .card img {
    width: 100%;
    height: auto;
    object-fit: contain;
    border-radius: 0.5rem;
}

h4 {
    position: relative;
    bottom: -1.5rem;
    font-size: 1rem;
}



================================================
FILE: Frontend/src/Pages/UserHome.jsx
================================================
import axios from "axios";
import React, { useEffect, useState } from "react";
import "./UserHome.css";
import { Link } from "react-router-dom";
import Navbar from "../components/Navbar";


const Home = () => {
  const [productData, setProductData] = useState([]);

  useEffect(() => {
    getData();
  }, []);

  const getData = async () => {
    await axios
      .get("https://project-ecommerce-react-backend-rm5q.onrender.com")
      .then((res) => {
        console.log(res.data.products);
        setProductData(res.data.products);
      })
      .catch((err) => {
        console.log(err);
      });
  };

  return (
   <div>
    <nav>
            <div className="left">
                 <Link ><h2>Shopy</h2></Link>
            </div>
            <div className='search'>
                <input type="text" />
            </div>
            <div className="right">
              {/* <Link to="/admin/products/add">Add new Product</Link> */}
              <Link to="/Cart"><i class="ri-shopping-cart-fill"></i></Link>
              <Link to="/login" className="ad"><h2>Admin</h2></Link>
            </div>
        </nav>      

     <div className="container">

      {productData.map((elem, index) => {
        return <div className="card" key={index}>
          <div className="top">
            <img
              src={elem.image}
              alt=""
              width="200px"
            />
          </div>
          <div className="bottom">
            <Link to={`/products/detail/${elem._id}`}><h1>{elem.title}</h1></Link>
            <h4>Price : {elem.price}</h4>
          </div>
        </div>;
      })}
    </div>
   </div>
  );
};

export default Home;


================================================
FILE: Frontend/src/Pages/UserProduct.css
================================================
/* .product-container {
    height: 100%;
    width: 100%;
    background-color: rgb(226, 128, 128);
    display: flex;
    justify-content: center;
    align-items: center;
}

.main {
    height: 80%;
    width: 80%;
    border: 2px solid black;
    display: flex;
}

.left {
    width: 50%;
    height: 100%;

}

.left img {
    height: 100%;
    width: 100%;
}
.right {
    height: 100%;
    width: 50%;
} */
/* 
html, body{
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
    height: 100%;
    width: 100%;
}

.home {
    width: 100%;
    height: 600px;
    display: flex;
    align-items: center ;
    justify-content: center;
    background-color: #d7d7d7;
}

.pr{
    display: flex;
    align-items: center ;
    justify-content: center;
    border: 2px black solid;
    border-radius: 30px;
    background-color: #fff;
    width: 90%;
    height: 550px;
    padding: 0px 30px 0px 10px;
    gap: 20px;
} */

/* .buttons{
    gap: 25px;
    height: 10px ;
    width : 30px;
} */


html, body {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    height: 100%;
    width: 100%;
    font-size: 16px;
}

.home {
    width: 100%;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: #d7d7d7;
    padding: 5vh 5vw;
}

.pr {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    justify-content: center;
    border: 0.125rem solid black;
    border-radius: 2rem;
    background-color: #fff;
    width: 100%;
    max-width: 90vw;
    padding: 2rem;
    gap: 2rem;
}

/* Image section */
.pr img {
    width: 100%;
    max-width: 30vw;
    height: auto;
    border-radius: 1rem;
    object-fit: contain;
}

/* Text section */
.pr > div:last-child {
    flex: 1;
    min-width: 250px;
}

/* Buttons */
.buttons {
    display: flex;
    gap: 1.5rem;
    margin-top: 1rem;
}

.buttons button {
    padding: 0.6rem 1.2rem;
    font-size: 1rem;
    border: none;
    border-radius: 0.5rem;
    background-color: #000;
    color: #fff;
    cursor: pointer;
    transition: background-color 0.3s;
}

.buttons button:hover {
    background-color: #333;
}



================================================
FILE: Frontend/src/Pages/UserProduct.jsx
================================================
import React, { useEffect } from 'react'
import { useParams } from 'react-router-dom'
import "./UserProduct.css"
import axios from 'axios'
import{ useState } from 'react';
import { Link } from 'react-router-dom';

// const [cart, setCart] = useState([]); // local cart state

// const addToCart = () => {
//   setCart(prevCart => [...prevCart, productData]);
//   alert("Product added to cart!");
// };
// import { Link } from "react-router-dom";
// const { addToCart } = useCart();



const ProductDetail = () => {

   const {productId} = useParams()
   const [productData, setProductData] = useState([]);
    
    useEffect(() => {
        getProductDetail()

    }, [productId])

    const handleAddToCart = () => {
    axios.post(`https://project-ecommerce-react-backend-rm5q.onrender.com/cart/add/${productId}`)
      .then(response => alert('Product added to cart!'))
      .catch(error => console.error('Error adding to cart:', error));
  };

    const getProductDetail = async()=>{

       await axios.get("https://project-ecommerce-react-backend-rm5q.onrender.com/products/"+productId)
        .then((res)=>{
            console.log(res);
            setProductData(res.data.product);
            
        })
        .catch((err)=>{
            console.log(err);
        })

    }

  return (
    <div className='home'>
     
      <div className="pr">
        <div><img src={productData.image} alt="Product" height="450px" /></div>
            <div>
                <div>
                  <h1>{productData.title}</h1><br />
                  <h2>Price: Ã¢â€šÂ¹{productData.price}</h2><br />
                  <b>Description:</b>
                  <p>{productData.description}</p><br />
                  <p><b>Category:</b> {productData.category}</p><br />

                </div>
                
               <div className="buttons">
                <button>Buy</button>
                <button onClick={handleAddToCart}>Add to cart</button>
                {/* <button onClick={() => addToCart(productData)}>Add to Cart</button> */}
                {/* <button onClick={addToCart()}>Add to cart</button> */}
               </div>

            </div>

      </div>
    </div>
  )
}

export default ProductDetail




================================================
FILE: gitingest_outputs/urvashixo_land_registry_20250906_162438.txt
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8d in position 1126: character maps to <undefined>


================================================
FILE: gitingest_outputs/urvashixo_land_registry_20250906_164238.txt
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8d in position 1126: character maps to <undefined>


================================================
FILE: gitingest_outputs/gitignore_files_20250905_192308/README.md.txt
================================================
# File: README.md
# Language: Markdown
# Lines: 155
# Size: 7115 bytes
# Type: documentation
# ==================================================

# A collection of `.gitignore` templates

This is GitHubÃ¢â‚¬â„¢s collection of [`.gitignore`][man] file templates.
We use this list to populate the `.gitignore` template choosers available
in the GitHub.com interface when creating new repositories and files.

For more information about how `.gitignore` files work, and how to use them,
the following resources are a great place to start:

- The [Ignoring Files chapter][chapter] of the [Pro Git][progit] book.
- The [Ignoring Files article][help] on the GitHub Help site.
- The [gitignore(5)][man] manual page.

[man]: https://git-scm.com/docs/gitignore
[help]: https://help.github.com/articles/ignoring-files
[chapter]: https://git-scm.com/book/en/v2/Git-Basics-Recording-Changes-to-the-Repository#_ignoring
[progit]: https://git-scm.com/book

## Folder structure

We support a collection of templates, organized in this way:

- The root folder contains templates in common use, to help people get started
  with popular programming languages and technologies. These define a meaningful
  set of rules to help get started, and ensure you are not committing
  unimportant files into your repository.
- [`Global`](./Global) contains templates for various editors, tools and
  operating systems that can be used in different situations. It is recommended
  that you either [add these to your global template](https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer)
  or merge these rules into your project-specific templates if you want to use
  them permanently.
- [`community`](./community) contains specialized templates for other popular
  languages, tools and project, which don't currently belong in the mainstream
  templates. These should be added to your project-specific templates when you
  decide to adopt the framework or tool.

## What makes a good template?

A template should contain a set of rules to help Git repositories work with a
specific programming language, framework, tool or environment.

If it's not possible to curate a small set of useful rules for this situation,
then the template is not a good fit for this collection.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework), it could live under the `community`
directory. See [versioned templates](#versioned-templates) for more details.

If you have a small set of rules, or want to support a technology that is not
widely in use, and still believe this will be helpful to others, please read the
section about [specialized templates](#specialized-templates) for more details.

Include details when opening pull request if the template is important and visible. We
may not accept it immediately, but we can promote it to the root at a later date
based on interest.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the _most common and helpful_ templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.

## Contributing guidelines

WeÃ¢â‚¬â„¢d love for you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to _everyone_
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change is specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify _one template_ per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

## Versioned templates

Some templates can change greatly between versions, and if you wish to contribute
to this repository we need to follow this specific flow:

- the template at the root should be the current supported version
- the template at the root should not have a version in the filename (i.e.
  "evergreen")
- previous versions of templates should live under `community/`
- previous versions of the template should embed the version in the filename,
  for readability

This helps ensure users get the latest version (because they'll use whatever is
at the root) but helps maintainers support older versions still in the wild.

## Specialized templates

If you have a template that you would like to contribute, but it isn't quite
mainstream, please consider adding this to the `community` directory under a
folder that best suits where it belongs.

The rules in your specialized template should be specific to the framework or
tool, and any additional templates should be mentioned in a comment in the
header of the template.

For example, this template might live at `community/DotNet/InforCRM.gitignore`:

```gitignore
# gitignore template for InforCRM (formerly SalesLogix)
# website: https://www.infor.com/product-summary/cx/infor-crm/
#
# Recommended: VisualStudio.gitignore

# Ignore model files that are auto-generated
ModelIndex.xml
ExportedFiles.xml

# Ignore deployment files
[Mm]odel/[Dd]eployment

# Force include portal SupportFiles
!Model/Portal/*/SupportFiles/[Bb]in/
!Model/Portal/PortalTemplates/*/SupportFiles/[Bb]in
```

## Contributing workflow

HereÃ¢â‚¬â„¢s how we suggest you go about proposing a change to this project:

1. [Fork this project][fork] to your account.
2. [Create a branch][branch] for the change you intend to make.
3. Make your changes to your fork.
4. [Send a pull request][pr] from your forkÃ¢â‚¬â„¢s branch to our `main` branch.

Using the web-based interface to make changes is fine too, and will help you
by automatically forking the project and prompting to send a pull request too.

[fork]: https://help.github.com/articles/fork-a-repo/
[branch]: https://help.github.com/articles/creating-and-deleting-branches-within-your-repository
[pr]: https://help.github.com/articles/using-pull-requests/

## License

[CC0-1.0](./LICENSE).


================================================
FILE: gitingest_outputs/gitignore_files_20250905_192308/CONTRIBUTING.md.txt
================================================
# File: CONTRIBUTING.md
# Language: Markdown
# Lines: 39
# Size: 2274 bytes
# Type: documentation
# ==================================================

# Contributing guidelines

WeÃ¢â‚¬â„¢d love you to help us improve this project. To help us keep this collection
high quality, we request that contributions adhere to the following guidelines.

- **Provide a link to the application or projectÃ¢â‚¬â„¢s homepage**. Unless itÃ¢â‚¬â„¢s
  extremely popular, thereÃ¢â‚¬â„¢s a chance the maintainers donÃ¢â‚¬â„¢t know about or use
  the language, framework, editor, app, or project your change applies to.

- **Provide links to documentation** supporting the change youÃ¢â‚¬â„¢re making.
  Current, canonical documentation mentioning the files being ignored is best.
  If documentation isnÃ¢â‚¬â„¢t available to support your change, do the best you can
  to explain what the files being ignored are for.

- **Explain why youÃ¢â‚¬â„¢re making a change**. Even if it seems self-evident, please
  take a sentence or two to tell us why your change or addition should happen.
  ItÃ¢â‚¬â„¢s especially helpful to articulate why this change applies to *everyone*
  who works with the applicable technology, rather than just you or your team.

- **Please consider the scope of your change**. If your change specific to a
  certain language or framework, then make sure the change is made to the
  template for that language or framework, rather than to the template for an
  editor, tool, or operating system.

- **Please only modify *one template* per pull request**. This helps keep pull
  requests and feedback focused on a specific project or technology.

In general, the more you can do to help us understand the change youÃ¢â‚¬â„¢re making,
the more likely weÃ¢â‚¬â„¢ll be to accept your contribution quickly.

If a template is mostly a list of files installed by a particular version of
some software (e.g. a PHP framework) then it's brittle and probably no more
helpful than a simple `ls`. If it's not possible to curate a small set of
useful rules, then the template might not be a good fit for this collection.

Please also understand that we canÃ¢â‚¬â„¢t list every tool that ever existed.
Our aim is to curate a collection of the *most common and helpful* templates,
not to make sure we cover every project possible. If we choose not to
include your language, tool, or project, itÃ¢â‚¬â„¢s not because itÃ¢â‚¬â„¢s not awesome.


================================================
FILE: gitingest_outputs/gitignore_files_20250905_192308/Global_README.md.txt
================================================
# File: Global/README.md
# Language: Markdown
# Lines: 10
# Size: 359 bytes
# Type: documentation
# ==================================================

## Globally Useful gitignores

This directory contains globally useful gitignores,
e.g. OS-specific and editor specific.

For more on global gitignores:
<https://help.github.com/en/github/using-git/ignoring-files#configuring-ignored-files-for-all-repositories-on-your-computer>

And a good blog post about 'em:
<http://augustl.com/blog/2009/global_gitignores>


================================================
FILE: gitingest_outputs/gitignore_files_20250905_192308/LICENSE.txt
================================================
# File: LICENSE
# Language: unknown
# Lines: 116
# Size: 6554 bytes
# Type: other
# ==================================================

CC0 1.0 Universal

Statement of Purpose

The laws of most jurisdictions throughout the world automatically confer
exclusive Copyright and Related Rights (defined below) upon the creator and
subsequent owner(s) (each and all, an "owner") of an original work of
authorship and/or a database (each, a "Work").

Certain owners wish to permanently relinquish those rights to a Work for the
purpose of contributing to a commons of creative, cultural and scientific
works ("Commons") that the public can reliably and without fear of later
claims of infringement build upon, modify, incorporate in other works, reuse
and redistribute as freely as possible in any form whatsoever and for any
purposes, including without limitation commercial purposes. These owners may
contribute to the Commons to promote the ideal of a free culture and the
further production of creative, cultural and scientific works, or to gain
reputation or greater distribution for their Work in part through the use and
efforts of others.

For these and/or other purposes and motivations, and without any expectation
of additional consideration or compensation, the person associating CC0 with a
Work (the "Affirmer"), to the extent that he or she is an owner of Copyright
and Related Rights in the Work, voluntarily elects to apply CC0 to the Work
and publicly distribute the Work under its terms, with knowledge of his or her
Copyright and Related Rights in the Work and the meaning and intended legal
effect of CC0 on those rights.

1. Copyright and Related Rights. A Work made available under CC0 may be
protected by copyright and related or neighboring rights ("Copyright and
Related Rights"). Copyright and Related Rights include, but are not limited
to, the following:

  i. the right to reproduce, adapt, distribute, perform, display, communicate,
  and translate a Work;

  ii. moral rights retained by the original author(s) and/or performer(s);

  iii. publicity and privacy rights pertaining to a person's image or likeness
  depicted in a Work;

  iv. rights protecting against unfair competition in regards to a Work,
  subject to the limitations in paragraph 4(a), below;

  v. rights protecting the extraction, dissemination, use and reuse of data in
  a Work;

  vi. database rights (such as those arising under Directive 96/9/EC of the
  European Parliament and of the Council of 11 March 1996 on the legal
  protection of databases, and under any national implementation thereof,
  including any amended or successor version of such directive); and

  vii. other similar, equivalent or corresponding rights throughout the world
  based on applicable law or treaty, and any national implementations thereof.

2. Waiver. To the greatest extent permitted by, but not in contravention of,
applicable law, Affirmer hereby overtly, fully, permanently, irrevocably and
unconditionally waives, abandons, and surrenders all of Affirmer's Copyright
and Related Rights and associated claims and causes of action, whether now
known or unknown (including existing as well as future claims and causes of
action), in the Work (i) in all territories worldwide, (ii) for the maximum
duration provided by applicable law or treaty (including future time
extensions), (iii) in any current or future medium and for any number of
copies, and (iv) for any purpose whatsoever, including without limitation
commercial, advertising or promotional purposes (the "Waiver"). Affirmer makes
the Waiver for the benefit of each member of the public at large and to the
detriment of Affirmer's heirs and successors, fully intending that such Waiver
shall not be subject to revocation, rescission, cancellation, termination, or
any other legal or equitable action to disrupt the quiet enjoyment of the Work
by the public as contemplated by Affirmer's express Statement of Purpose.

3. Public License Fallback. Should any part of the Waiver for any reason be
judged legally invalid or ineffective under applicable law, then the Waiver
shall be preserved to the maximum extent permitted taking into account
Affirmer's express Statement of Purpose. In addition, to the extent the Waiver
is so judged Affirmer hereby grants to each affected person a royalty-free,
non transferable, non sublicensable, non exclusive, irrevocable and
unconditional license to exercise Affirmer's Copyright and Related Rights in
the Work (i) in all territories worldwide, (ii) for the maximum duration
provided by applicable law or treaty (including future time extensions), (iii)
in any current or future medium and for any number of copies, and (iv) for any
purpose whatsoever, including without limitation commercial, advertising or
promotional purposes (the "License"). The License shall be deemed effective as
of the date CC0 was applied by Affirmer to the Work. Should any part of the
License for any reason be judged legally invalid or ineffective under
applicable law, such partial invalidity or ineffectiveness shall not
invalidate the remainder of the License, and in such case Affirmer hereby
affirms that he or she will not (i) exercise any of his or her remaining
Copyright and Related Rights in the Work or (ii) assert any associated claims
and causes of action with respect to the Work, in either case contrary to
Affirmer's express Statement of Purpose.

4. Limitations and Disclaimers.

  a. No trademark or patent rights held by Affirmer are waived, abandoned,
  surrendered, licensed or otherwise affected by this document.

  b. Affirmer offers the Work as-is and makes no representations or warranties
  of any kind concerning the Work, express, implied, statutory or otherwise,
  including without limitation warranties of title, merchantability, fitness
  for a particular purpose, non infringement, or the absence of latent or
  other defects, accuracy, or the present or absence of errors, whether or not
  discoverable, all to the greatest extent permissible under applicable law.

  c. Affirmer disclaims responsibility for clearing rights of other persons
  that may apply to the Work or any use thereof, including without limitation
  any person's Copyright and Related Rights in the Work. Further, Affirmer
  disclaims responsibility for obtaining any necessary consents, permissions
  or other rights required for any use of the Work.

  d. Affirmer understands and acknowledges that Creative Commons is not a
  party to this document and has no duty or obligation with respect to this
  CC0 or use of the Work.

For more information, please see
<http://creativecommons.org/publicdomain/zero/1.0/>


================================================
FILE: gitingest_outputs/gitignore_files_20250905_192308/.github_PULL_REQUEST_TEMPLATE.md.txt
================================================
# File: .github/PULL_REQUEST_TEMPLATE.md
# Language: Markdown
# Lines: 23
# Size: 661 bytes
# Type: documentation
# ==================================================

### Reasons for making this change

_TODO_
<!---
Please provide some background for this change.
--->

### Links to documentation supporting these rule changes

_TODO_

<!---
Link to the project docs, any existing .gitignore files that project may have in it's own repo, etc
--->

### If this is a new template

Link to application or projectÃ¢â‚¬â„¢s homepage: TODO

### Merge and Approval Steps
- [ ] Confirm that you've read the [contribution guidelines](https://github.com/github/gitignore/tree/main?tab=readme-ov-file#contributing-guidelines) and ensured your PR aligns
- [ ] Ensure CI is passing
- [ ] Get a review and Approval from one of the maintainers


================================================
FILE: gitingest_outputs/gitignore_files_20250905_192308/.github_workflows_stale.yml.txt
================================================
# File: .github/workflows/stale.yml
# Language: YAML
# Lines: 32
# Size: 1331 bytes
# Type: configuration
# ==================================================

name: Stale

# **What it does**: Close pull requests after no updates for 180 days.
# **Why we have it**: This repository gets a lot of PRs, and the maintainers team is small.
#                     This helps reduce the open PRs to ones that are most desired by the community.
# **Who does it impact**: Contributors and maintainers of github/gitignore.

on:
  schedule:
    - cron: '20 16 * * *' # Run every day at 16:20 UTC / 8:20 PST

permissions:
  actions: write
  contents: write # only for delete-branch option
  issues: write
  pull-requests: write

jobs:
  stale:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0
        with:
          stale-pr-message: 'This PR is stale because there have been no updates in 90 days. It will close after 180 days of inactivity. Leave a comment if you want to keep it open :smile:'
          close-pr-message: 'This PR has been closed because it was inactive for 180 days. If you want to continue working on it, please open a new PR.'
          days-before-stale: 90
          days-before-close: 180
          stale-pr-label: 'stale'
          exempt-pr-labels: 'keep'
          close-issue-reason: not_planned
          ascending: true # Sort PRs by last updated date in ascending order
          operations-per-run: 300


================================================
FILE: gitingest_outputs/Hello-World_files_20250905_192258/README.txt
================================================
# File: README
# Language: unknown
# Lines: 1
# Size: 12 bytes
# Type: other
# ==================================================

Hello World!


================================================
FILE: hazmap_rag_storage/chunks_metadata.json
================================================
[
  {
    "chunk_id": "312ddba97a54",
    "file_path": "eas.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 20,
    "metadata": {
      "total_lines": 20,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "18298fc1f77b",
    "file_path": "LocationContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 13,
    "end_line": 13,
    "metadata": {
      "function_name": "useLocation",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "767115b3f1a6",
    "file_path": "LocationContext.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 2,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "215fc9769838",
    "file_path": "supabaseClient.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "@supabase/supabase-js",
          "items": [
            "createClient"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@react-native-async-storage/async-storage",
          "items": [
            "AsyncStorage"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "727bb63f98e6",
    "file_path": "supabaseClient.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "6b098e922f1d",
    "file_path": "tsconfig.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7324db055ad9",
    "file_path": ".npmrc",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "40f98f6bf297",
    "file_path": ".prettierrc",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "total_lines": 6,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c315c5a10e4b",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "NotFoundScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "e12457aeaebf",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "handleGoHome",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "814e11d6dbf2",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "Stack",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native",
          "items": [
            "StyleSheet",
            "Text",
            "View",
            "TouchableOpacity"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "9bc38684bbf2",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 39,
    "metadata": {
      "total_lines": 39,
      "complexity_score": 2,
      "entry_points": [
        "default_export"
      ],
      "function_count": 2,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4a18992c80c2",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "RootLayoutContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "56ca29d9cb2a",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "initBackgroundTasks",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "603d98b8e27e",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 48,
    "end_line": 48,
    "metadata": {
      "function_name": "RootLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "a5d1b32a210e",
    "file_path": "app/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 8,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Stack"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-status-bar",
          "items": [
            "StatusBar"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../hooks/useFrameworkReady",
          "items": [
            "useFrameworkReady"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../LocationContext",
          "items": [
            "LocationProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../contexts/AuthContext",
          "items": [
            "AuthProvider",
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../components/LoadingScreen",
          "items": [
            "LoadingScreen"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../services/backgroundTasks",
          "items": [
            "startBackgroundFetch"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "1ed82df8a297",
    "file_path": "app/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "dd0fdb41f6de",
    "file_path": "app/index.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Redirect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../components/LoadingScreen",
          "items": [
            "LoadingScreen"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "401fd974d653",
    "file_path": "app/index.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 18,
    "metadata": {
      "total_lines": 18,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "fa857c8eebc9",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "AuthLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "aeceda9da57e",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Stack"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "56a6fd9e2335",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 10,
    "metadata": {
      "total_lines": 10,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "eda1d0563b4b",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "LoginScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b5e0d66f466a",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 24,
    "end_line": 24,
    "metadata": {
      "function_name": "handleLogin",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5bce8d3658",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame",
            "Eye",
            "EyeOff"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2a55a766836f",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "SignUpScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "26a4be08d992",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleSignUp",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bc23219fe518",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 51,
    "end_line": 51,
    "metadata": {
      "function_name": "updateFormData",
      "parameters": [
        "field",
        "value"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "7188827a5b5e",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame",
            "Eye",
            "EyeOff"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "f3995e9297a2",
    "file_path": "app/(tabs)/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 13,
    "end_line": 13,
    "metadata": {
      "function_name": "TabLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "13be60e846a7",
    "file_path": "app/(tabs)/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Tabs"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "expo-router",
          "items": [
            "useRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "1544cb6b8061",
    "file_path": "app/(tabs)/air-quality.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "6e81ff14212e",
    "file_path": "app/(tabs)/evacuation.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ade6b64a03a",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 138,
    "end_line": 138,
    "metadata": {
      "function_name": "MapScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8bbedf3b3d8e",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 178,
    "end_line": 178,
    "metadata": {
      "function_name": "getParsedPrediction",
      "parameters": [
        "pred"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "306fdd46b4f5",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 191,
    "end_line": 191,
    "metadata": {
      "function_name": "fetchPollutants",
      "parameters": [
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "83232ab6fe3a",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 224,
    "end_line": 224,
    "metadata": {
      "function_name": "fetchWildfireRisk",
      "parameters": [
        "lat",
        "lng",
        "env"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2e02727f2cb2",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 271,
    "end_line": 271,
    "metadata": {
      "function_name": "updateWildfireRisk",
      "parameters": [
        "lat",
        "lng",
        "env"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bd1a7aa373a8",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 276,
    "end_line": 276,
    "metadata": {
      "function_name": "fetchEnvData",
      "parameters": [
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ae2979b88a97",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 395,
    "end_line": 395,
    "metadata": {
      "function_name": "loadWildfireData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "4d822c261a4e",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 436,
    "end_line": 436,
    "metadata": {
      "function_name": "getSeverityColor",
      "parameters": [
        "severity"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "94adf7a96bcc",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 446,
    "end_line": 446,
    "metadata": {
      "function_name": "toggleLayer",
      "parameters": [
        "layer"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "98f07d93d3fb",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 451,
    "end_line": 451,
    "metadata": {
      "function_name": "fetchSuggestions",
      "parameters": [
        "text"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "a3c22f590276",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 471,
    "end_line": 471,
    "metadata": {
      "function_name": "fetchPlaceDetails",
      "parameters": [
        "placeId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "471ed44419c4",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "imports": [
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "TriangleAlert as AlertTriangle",
            "Flame",
            "Shield",
            "Navigation",
            "RefreshCw",
            "Eye",
            "EyeOff",
            "X",
            "Crosshair"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native-maps",
          "items": [
            "MapView"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native-google-places-autocomplete",
          "items": [
            "GooglePlacesAutocomplete"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../LocationContext",
          "items": [
            "useLocation"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "lottie-react-native",
          "items": [
            "LottieView"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b15a6604624c",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 28,
    "end_line": 28,
    "metadata": {
      "function_name": "ProfileScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "898a144c6c83",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 55,
    "end_line": 55,
    "metadata": {
      "function_name": "getCurrentLocation",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "dbd1820c6019",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 71,
    "end_line": 71,
    "metadata": {
      "function_name": "getLocationName",
      "parameters": [
        "latitude",
        "longitude"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ebe512e12f2a",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 101,
    "end_line": 101,
    "metadata": {
      "function_name": "checkBackgroundFetchStatus",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bda8f4fbf68e",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 110,
    "end_line": 110,
    "metadata": {
      "function_name": "toggleNotification",
      "parameters": [
        "key"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "6f258af80b9c",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 117,
    "end_line": 117,
    "metadata": {
      "function_name": "toggleBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "5de4cc88fd99",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 134,
    "end_line": 134,
    "metadata": {
      "function_name": "handleLogout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9bd2b4fbe017",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 164,
    "end_line": 164,
    "metadata": {
      "function_name": "handleEmergencyContact",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "058ce9186cad",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 181,
    "end_line": 181,
    "metadata": {
      "function_name": "testWildfirePrediction",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "84db07343256",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 8,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Bell",
            "MapPin",
            "Shield",
            "LogOut",
            "TriangleAlert as AlertTriangle",
            "Smartphone",
            "Clock"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../services/backgroundTasks",
          "items": [
            "startBackgroundFetch",
            "stopBackgroundFetch",
            "getBackgroundFetchStatus"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "expo-background-fetch",
          "items": [
            "BackgroundFetch"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-notifications",
          "items": [
            "Notifications"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../LocationContext",
          "items": [
            "useLocation"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "99e37739f889",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 32,
    "end_line": 32,
    "metadata": {
      "function_name": "UpdatesScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ccf34dafe1f2",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 43,
    "end_line": 43,
    "metadata": {
      "function_name": "loadUpdates",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9ae53d90a903",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 115,
    "end_line": 115,
    "metadata": {
      "function_name": "getRoleColor",
      "parameters": [
        "role"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "76491eaa323b",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 124,
    "end_line": 124,
    "metadata": {
      "function_name": "getCategoryColor",
      "parameters": [
        "category"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "11e3d4ee58d8",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 139,
    "end_line": 139,
    "metadata": {
      "function_name": "timeAgo",
      "parameters": [
        "timestamp"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "21a2713c80d2",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 152,
    "end_line": 152,
    "metadata": {
      "function_name": "renderPreventionContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "cd2716a9321e",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 261,
    "end_line": 261,
    "metadata": {
      "function_name": "renderUpdatesContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2ff72b0e05e8",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "lucide-react-native",
          "items": [
            "MessageSquare",
            "MapPin",
            "TriangleAlert as AlertTriangle",
            "CircleCheck as CheckCircle",
            "User",
            "Flame",
            "Shield",
            "Info"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "a0d07c2d0897",
    "file_path": "assets/lottie/birds.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "982d460ac4b3",
    "file_path": "assets/lottie/smoke.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bbf779cae3b5",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "LoadingScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "9658e874cc9c",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native",
          "items": [
            "View",
            "Text",
            "ActivityIndicator",
            "StyleSheet"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "6528c5264626",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 47,
    "metadata": {
      "total_lines": 47,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "db233bd2a1d2",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "useAuthContext",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "03bed49268c8",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 32,
    "end_line": 32,
    "metadata": {
      "function_name": "getInitialSession",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "da60016f3392",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 65,
    "end_line": 65,
    "metadata": {
      "function_name": "signIn",
      "parameters": [
        "email",
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "c687165ed16c",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 78,
    "end_line": 78,
    "metadata": {
      "function_name": "signUp",
      "parameters": [
        "email",
        "password",
        "userData?"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "85dee60632fa",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 94,
    "end_line": 94,
    "metadata": {
      "function_name": "signOut",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb32d4766698",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "@supabase/supabase-js",
          "items": [
            "Session",
            "User"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "3f0cf074215f",
    "file_path": "HazEnd - Flask Backend/backend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 23,
    "metadata": {
      "total_lines": 23,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "772e62648b13",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 22,
    "end_line": 59,
    "metadata": {
      "function_name": "get_wildfire_risk_prediction",
      "parameters": [
        "data",
        "openrouter_api_key"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0f994e8d9d26",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 63,
    "end_line": 64,
    "metadata": {
      "function_name": "home",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2625e7ee5b10",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 68,
    "end_line": 69,
    "metadata": {
      "function_name": "about",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8b4dbd6ada2e",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 72,
    "end_line": 160,
    "metadata": {
      "function_name": "gee_data",
      "parameters": [],
      "calls": [
        "float",
        "float",
        "get_wildfire_risk_prediction",
        "jsonify",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "timedelta"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3a02695fbd2b",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "imports": [
        {
          "module": "flask",
          "items": [
            "Flask",
            "render_template",
            "request",
            "jsonify"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "ee",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "datetime",
          "items": [
            "date",
            "timedelta"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "requests",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "json",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "os",
          "items": [],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "5c1ee8b678a0",
    "file_path": "HazEnd - Flask Backend/backend/dev-requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "total_lines": 2,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0d0490164c45",
    "file_path": "HazEnd - Flask Backend/backend/pyproject.toml",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "31dc80fd12b6",
    "file_path": "HazEnd - Flask Backend/backend/requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "44c01fdebb9e",
    "file_path": "HazEnd - Flask Backend/backend/static/site.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 27,
    "metadata": {
      "total_lines": 27,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "fe64fef950a1",
    "file_path": "HazEnd - Flask Backend/backend/templates/about.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9590f6bfb4e9",
    "file_path": "HazEnd - Flask Backend/backend/templates/base.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 21,
    "metadata": {
      "total_lines": 21,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3a480ac3ce83",
    "file_path": "HazEnd - Flask Backend/backend/templates/home.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "17110ac13b47",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 6,
    "end_line": 8,
    "metadata": {
      "function_name": "client",
      "parameters": [],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "01e1d03521ae",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 11,
    "end_line": 13,
    "metadata": {
      "function_name": "test_home",
      "parameters": [
        "client"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f3cd43aa286b",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 16,
    "end_line": 18,
    "metadata": {
      "function_name": "test_about",
      "parameters": [
        "client"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "12b72335b236",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "pytest",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "app",
          "items": [
            "app"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b21fdf531b82",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "file",
    "language": "python",
    "start_line": 1,
    "end_line": 18,
    "metadata": {
      "total_lines": 18,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e5a76aeeb136",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "useAuth",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "01a35b047da1",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "getInitialSession",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "d3249165c436",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 43,
    "end_line": 43,
    "metadata": {
      "function_name": "signIn",
      "parameters": [
        "email",
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "e11107201196",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 56,
    "end_line": 56,
    "metadata": {
      "function_name": "signUp",
      "parameters": [
        "email",
        "password",
        "userData?"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "23f1d3c273d2",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 72,
    "end_line": 72,
    "metadata": {
      "function_name": "signOut",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9619664454ef",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "useState",
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@supabase/supabase-js",
          "items": [
            "Session",
            "User"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "11c11958c8b4",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 9,
    "end_line": 9,
    "metadata": {
      "function_name": "useFrameworkReady",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "d9e22a8b8575",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b47c1293598a",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 2,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7e87c15ea40c",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 203,
    "end_line": 203,
    "metadata": {
      "function_name": "sendWildfireAlert",
      "parameters": [
        "prediction",
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab4b4c98a52a",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 252,
    "end_line": 252,
    "metadata": {
      "function_name": "startBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "0a4f5c555350",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 268,
    "end_line": 268,
    "metadata": {
      "function_name": "stopBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "a60c01422c16",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 278,
    "end_line": 278,
    "metadata": {
      "function_name": "getBackgroundFetchStatus",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "705583e4929d",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "expo-background-fetch",
          "items": [
            "BackgroundFetch"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-task-manager",
          "items": [
            "TaskManager"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-notifications",
          "items": [
            "Notifications"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "ab5c40bc97a6",
    "file_path": "types/env.d.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "cb2cb413cf4f",
    "file_path": ".bolt/config.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "total_lines": 3,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  }
]


================================================
FILE: hazmap_rag_storage/project_structure.json
================================================
{
  "README.md": {
    "language": "unknown",
    "total_lines": 212,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app.json": {
    "language": "unknown",
    "total_lines": 79,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "BACKGROUND_TASKS_README.md": {
    "language": "unknown",
    "total_lines": 95,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "eas.json": {
    "language": "unknown",
    "total_lines": 20,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "LocationContext.tsx": {
    "language": "typescript",
    "total_lines": 22,
    "complexity_score": 2,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "package.json": {
    "language": "unknown",
    "total_lines": 64,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "supabaseClient.ts": {
    "language": "typescript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "tsconfig.json": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".npmrc": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".prettierrc": {
    "language": "unknown",
    "total_lines": 6,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/+not-found.tsx": {
    "language": "typescript",
    "total_lines": 39,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/_layout.tsx": {
    "language": "typescript",
    "total_lines": 56,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/index.tsx": {
    "language": "typescript",
    "total_lines": 18,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/_layout.tsx": {
    "language": "typescript",
    "total_lines": 10,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/login.tsx": {
    "language": "typescript",
    "total_lines": 223,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/signup.tsx": {
    "language": "typescript",
    "total_lines": 245,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/_layout.tsx": {
    "language": "typescript",
    "total_lines": 94,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/air-quality.tsx": {
    "language": "typescript",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/(tabs)/evacuation.tsx": {
    "language": "typescript",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/(tabs)/index.tsx": {
    "language": "typescript",
    "total_lines": 1091,
    "complexity_score": 14,
    "function_count": 11,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/profile.tsx": {
    "language": "typescript",
    "total_lines": 480,
    "complexity_score": 10,
    "function_count": 9,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/updates.tsx": {
    "language": "typescript",
    "total_lines": 667,
    "complexity_score": 8,
    "function_count": 7,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "assets/lottie/birds.json": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "assets/lottie/smoke.json": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "components/LoadingScreen.tsx": {
    "language": "typescript",
    "total_lines": 47,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "contexts/AuthContext.tsx": {
    "language": "typescript",
    "total_lines": 119,
    "complexity_score": 6,
    "function_count": 5,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/README.md": {
    "language": "unknown",
    "total_lines": 23,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/app.py": {
    "language": "python",
    "total_lines": 163,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "__main__"
    ]
  },
  "HazEnd - Flask Backend/backend/dev-requirements.txt": {
    "language": "unknown",
    "total_lines": 2,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/pyproject.toml": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/requirements.txt": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/static/site.css": {
    "language": "unknown",
    "total_lines": 27,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/about.html": {
    "language": "unknown",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/base.html": {
    "language": "unknown",
    "total_lines": 21,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/home.html": {
    "language": "unknown",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/tests/test_app.py": {
    "language": "python",
    "total_lines": 18,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "hooks/useAuth.ts": {
    "language": "typescript",
    "total_lines": 91,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": []
  },
  "hooks/useFrameworkReady.ts": {
    "language": "typescript",
    "total_lines": 13,
    "complexity_score": 2,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "services/backgroundTasks.ts": {
    "language": "typescript",
    "total_lines": 286,
    "complexity_score": 6,
    "function_count": 4,
    "class_count": 0,
    "entry_points": []
  },
  "types/env.d.ts": {
    "language": "typescript",
    "total_lines": 11,
    "complexity_score": 1,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".bolt/config.json": {
    "language": "unknown",
    "total_lines": 3,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  }
}


================================================
FILE: rag_test_storage/chunks_metadata.json
================================================
[
  {
    "chunk_id": "f7d423073c3e",
    "file_path": "calculator.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 4,
    "end_line": 5,
    "metadata": {
      "function_name": "__init__",
      "parameters": [
        "self"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8a5c999f2546",
    "file_path": "calculator.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 7,
    "end_line": 11,
    "metadata": {
      "function_name": "add",
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "44c111f118ae",
    "file_path": "calculator.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 13,
    "end_line": 17,
    "metadata": {
      "function_name": "multiply",
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "68407ad66b15",
    "file_path": "calculator.py",
    "chunk_type": "class",
    "language": "python",
    "start_line": 1,
    "end_line": 17,
    "metadata": {
      "class_name": "Calculator",
      "methods": [
        "__init__",
        "add",
        "multiply"
      ],
      "inherits_from": [],
      "implements": [],
      "is_abstract": false
    }
  },
  {
    "chunk_id": "37ff732df467",
    "file_path": "calculator.py",
    "chunk_type": "method",
    "language": "python",
    "start_line": 4,
    "end_line": 5,
    "metadata": {
      "class_name": "Calculator",
      "method_name": "__init__",
      "parameters": [
        "self"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "visibility": "public"
    }
  },
  {
    "chunk_id": "a4270be4c691",
    "file_path": "calculator.py",
    "chunk_type": "method",
    "language": "python",
    "start_line": 7,
    "end_line": 11,
    "metadata": {
      "class_name": "Calculator",
      "method_name": "add",
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "visibility": "public"
    }
  },
  {
    "chunk_id": "a6c69c8563f9",
    "file_path": "calculator.py",
    "chunk_type": "method",
    "language": "python",
    "start_line": 13,
    "end_line": 17,
    "metadata": {
      "class_name": "Calculator",
      "method_name": "multiply",
      "parameters": [
        "self",
        "a",
        "b"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "visibility": "public"
    }
  },
  {
    "chunk_id": "6047d047bcef",
    "file_path": "calculator.py",
    "chunk_type": "file",
    "language": "python",
    "start_line": 1,
    "end_line": 17,
    "metadata": {
      "total_lines": 17,
      "complexity_score": 5,
      "entry_points": [],
      "function_count": 3,
      "class_count": 1
    }
  },
  {
    "chunk_id": "592039ba89d1",
    "file_path": "main.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 3,
    "end_line": 10,
    "metadata": {
      "function_name": "main",
      "parameters": [],
      "calls": [
        "Calculator",
        "print",
        "print"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "e9199c1dfb4b",
    "file_path": "main.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "calculator",
          "items": [
            "Calculator"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "2bc7ba5ce3b7",
    "file_path": "main.py",
    "chunk_type": "file",
    "language": "python",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 1,
      "entry_points": [
        "__main__"
      ],
      "function_count": 1,
      "class_count": 0
    }
  }
]


================================================
FILE: rag_test_storage/project_structure.json
================================================
{
  "calculator.py": {
    "language": "python",
    "total_lines": 17,
    "complexity_score": 5,
    "function_count": 3,
    "class_count": 1,
    "entry_points": []
  },
  "main.py": {
    "language": "python",
    "total_lines": 13,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "__main__"
    ]
  }
}


================================================
FILE: services/__init__.py
================================================
# Services package for AI Project Analyzer

from .gitingest_processor import GitingestProcessor, AuthConfig, ProcessingConfig
from .config import GitingestConfig, load_gitingest_config, get_github_token, setup_gitingest_environment

__all__ = [
    'GitingestProcessor',
    'AuthConfig', 
    'ProcessingConfig',
    'GitingestConfig',
    'load_gitingest_config',
    'get_github_token',
    'setup_gitingest_environment'
]


================================================
FILE: services/code_analyzer.py
================================================
"""
Multi-Language Code Analyzer

This module provides comprehensive code analysis capabilities for 10+ programming languages.
It uses Tree-sitter for accurate parsing and extracts code structure, relationships, and metadata.
"""

import re
import ast
import json
from pathlib import Path
from typing import Dict, List, Optional, Any, Tuple
from dataclasses import dataclass, asdict
from enum import Enum
import logging

logger = logging.getLogger(__name__)


class ProgrammingLanguage(Enum):
    """Supported programming languages"""
    PYTHON = "python"
    JAVASCRIPT = "javascript"
    TYPESCRIPT = "typescript"
    RUST = "rust"
    GO = "go"
    JAVA = "java"
    CPP = "cpp"
    C = "c"
    CSHARP = "csharp"
    PHP = "php"
    RUBY = "ruby"
    SWIFT = "swift"
    KOTLIN = "kotlin"
    SCALA = "scala"
    DART = "dart"
    LUA = "lua"
    UNKNOWN = "unknown"


@dataclass
class CodeFunction:
    """Represents a function in the code"""
    name: str
    start_line: int
    end_line: int
    parameters: List[str]
    return_type: Optional[str]
    docstring: Optional[str]
    calls: List[str]  # Functions this function calls
    complexity: str  # low, medium, high
    is_async: bool = False
    is_static: bool = False
    visibility: str = "public"  # public, private, protected


@dataclass
class CodeClass:
    """Represents a class in the code"""
    name: str
    start_line: int
    end_line: int
    methods: List[CodeFunction]
    properties: List[str]
    inherits_from: List[str]
    implements: List[str]
    docstring: Optional[str]
    is_abstract: bool = False


@dataclass
class CodeImport:
    """Represents an import statement"""
    module: str
    items: List[str]  # Specific items imported
    alias: Optional[str]
    is_relative: bool = False
    line_number: int = 0


@dataclass
class CodeStructure:
    """Complete code structure for a file"""
    file_path: str
    language: ProgrammingLanguage
    functions: List[CodeFunction]
    classes: List[CodeClass]
    imports: List[CodeImport]
    exports: List[str]  # For languages that support exports
    variables: List[str]  # Global/module-level variables
    interfaces: List[Dict[str, Any]]  # For TypeScript/Java interfaces
    types: List[Dict[str, Any]]  # Custom types
    total_lines: int
    complexity_score: float
    entry_points: List[str]  # Main functions, if __name__ == "__main__", etc.


class LanguageDetector:
    """Detects programming language from file path and content"""
    
    EXTENSION_MAP = {
        '.py': ProgrammingLanguage.PYTHON,
        '.js': ProgrammingLanguage.JAVASCRIPT,
        '.mjs': ProgrammingLanguage.JAVASCRIPT,
        '.ts': ProgrammingLanguage.TYPESCRIPT,
        '.tsx': ProgrammingLanguage.TYPESCRIPT,
        '.jsx': ProgrammingLanguage.JAVASCRIPT,
        '.rs': ProgrammingLanguage.RUST,
        '.go': ProgrammingLanguage.GO,
        '.java': ProgrammingLanguage.JAVA,
        '.cpp': ProgrammingLanguage.CPP,
        '.cc': ProgrammingLanguage.CPP,
        '.cxx': ProgrammingLanguage.CPP,
        '.c': ProgrammingLanguage.C,
        '.h': ProgrammingLanguage.C,
        '.hpp': ProgrammingLanguage.CPP,
        '.cs': ProgrammingLanguage.CSHARP,
        '.php': ProgrammingLanguage.PHP,
        '.rb': ProgrammingLanguage.RUBY,
        '.swift': ProgrammingLanguage.SWIFT,
        '.kt': ProgrammingLanguage.KOTLIN,
        '.kts': ProgrammingLanguage.KOTLIN,
        '.scala': ProgrammingLanguage.SCALA,
        '.dart': ProgrammingLanguage.DART,
        '.lua': ProgrammingLanguage.LUA,
    }
    
    @classmethod
    def detect_from_path(cls, file_path: str) -> ProgrammingLanguage:
        """Detect language from file extension"""
        path = Path(file_path)
        extension = path.suffix.lower()
        return cls.EXTENSION_MAP.get(extension, ProgrammingLanguage.UNKNOWN)
    
    @classmethod
    def detect_language(cls, file_path: str, content: str) -> ProgrammingLanguage:
        """Comprehensive language detection"""
        # Try extension first (most reliable)
        ext_language = cls.detect_from_path(file_path)
        
        if ext_language != ProgrammingLanguage.UNKNOWN:
            return ext_language
        
        # Fall back to unknown for now
        return ProgrammingLanguage.UNKNOWN


class PythonAnalyzer:
    """Specialized analyzer for Python code"""
    
    @staticmethod
    def analyze(content: str, file_path: str) -> CodeStructure:
        """Analyze Python code structure"""
        functions = []
        classes = []
        imports = []
        variables = []
        entry_points = []
        
        try:
            tree = ast.parse(content)
            
            for node in ast.walk(tree):
                if isinstance(node, ast.FunctionDef):
                    func = CodeFunction(
                        name=node.name,
                        start_line=node.lineno,
                        end_line=getattr(node, 'end_lineno', node.lineno),
                        parameters=[arg.arg for arg in node.args.args],
                        return_type=None,  # Could extract from annotations
                        docstring=ast.get_docstring(node),
                        calls=PythonAnalyzer._extract_function_calls(node),
                        complexity=PythonAnalyzer._calculate_complexity(node),
                        is_async=isinstance(node, ast.AsyncFunctionDef)
                    )
                    functions.append(func)
                
                elif isinstance(node, ast.ClassDef):
                    class_methods = []
                    for item in node.body:
                        if isinstance(item, (ast.FunctionDef, ast.AsyncFunctionDef)):
                            method = CodeFunction(
                                name=item.name,
                                start_line=item.lineno,
                                end_line=getattr(item, 'end_lineno', item.lineno),
                                parameters=[arg.arg for arg in item.args.args],
                                return_type=None,
                                docstring=ast.get_docstring(item),
                                calls=PythonAnalyzer._extract_function_calls(item),
                                complexity=PythonAnalyzer._calculate_complexity(item),
                                is_async=isinstance(item, ast.AsyncFunctionDef)
                            )
                            class_methods.append(method)
                    
                    cls = CodeClass(
                        name=node.name,
                        start_line=node.lineno,
                        end_line=getattr(node, 'end_lineno', node.lineno),
                        methods=class_methods,
                        properties=[],  # Could extract from assignments
                        inherits_from=[base.id for base in node.bases if hasattr(base, 'id')],
                        implements=[],
                        docstring=ast.get_docstring(node)
                    )
                    classes.append(cls)
                
                elif isinstance(node, (ast.Import, ast.ImportFrom)):
                    if isinstance(node, ast.Import):
                        for alias in node.names:
                            imp = CodeImport(
                                module=alias.name,
                                items=[],
                                alias=alias.asname,
                                line_number=node.lineno
                            )
                            imports.append(imp)
                    else:  # ImportFrom
                        items = [alias.name for alias in node.names]
                        imp = CodeImport(
                            module=node.module or '',
                            items=items,
                            alias=None,
                            is_relative=node.level > 0,
                            line_number=node.lineno
                        )
                        imports.append(imp)
            
            # Check for entry points
            if 'if __name__ == "__main__"' in content:
                entry_points.append('__main__')
            
        except SyntaxError as e:
            logger.warning(f"Failed to parse Python file {file_path}: {e}")
        
        return CodeStructure(
            file_path=file_path,
            language=ProgrammingLanguage.PYTHON,
            functions=functions,
            classes=classes,
            imports=imports,
            exports=[],
            variables=variables,
            interfaces=[],
            types=[],
            total_lines=len(content.split('\n')),
            complexity_score=len(functions) + len(classes) * 2,
            entry_points=entry_points
        )
    
    @staticmethod
    def _extract_function_calls(node: ast.AST) -> List[str]:
        """Extract function calls from AST node"""
        calls = []
        for child in ast.walk(node):
            if isinstance(child, ast.Call) and hasattr(child.func, 'id'):
                calls.append(child.func.id)
        return calls
    
    @staticmethod
    def _calculate_complexity(node: ast.AST) -> str:
        """Calculate cyclomatic complexity"""
        complexity = 1  # Base complexity
        
        for child in ast.walk(node):
            if isinstance(child, (ast.If, ast.While, ast.For, ast.Try, ast.With)):
                complexity += 1
            elif isinstance(child, ast.BoolOp):
                complexity += len(child.values) - 1
        
        if complexity <= 5:
            return "low"
        elif complexity <= 10:
            return "medium"
        else:
            return "high"


class TypeScriptAnalyzer:
    """Specialized analyzer for TypeScript/JavaScript code"""
    
    @staticmethod
    def analyze(content: str, file_path: str) -> CodeStructure:
        """Analyze TypeScript/JavaScript code structure using regex patterns"""
        functions = []
        classes = []
        imports = []
        exports = []
        interfaces = []
        entry_points = []
        
        lines = content.split('\n')
        
        # Patterns for different constructs
        function_patterns = [
            r'(?:export\s+)?(?:async\s+)?function\s+(\w+)\s*\(',  # function declarations
            r'(?:export\s+)?const\s+(\w+)\s*=\s*(?:async\s*)?\([^)]*\)\s*=>', # arrow functions
            r'(?:export\s+)?const\s+(\w+)\s*=\s*(?:async\s+)?function', # function expressions
        ]
        
        class_patterns = [
            r'(?:export\s+)?(?:default\s+)?class\s+(\w+)',  # class declarations
        ]
        
        interface_patterns = [
            r'(?:export\s+)?interface\s+(\w+)',  # interface declarations
            r'(?:export\s+)?type\s+(\w+)\s*=',   # type aliases
        ]
        
        import_patterns = [
            r'import\s+(?:\{([^}]+)\}|\*\s+as\s+(\w+)|(\w+))\s+from\s+[\'"]([^\'"]+)[\'"]',
            r'import\s+[\'"]([^\'"]+)[\'"]',  # side-effect imports
        ]
        
        export_patterns = [
            r'export\s+(?:default\s+)?(?:const|let|var|function|class)\s+(\w+)',
            r'export\s+\{([^}]+)\}',
        ]
        
        for i, line in enumerate(lines, 1):
            line = line.strip()
            
            # Find functions
            for pattern in function_patterns:
                matches = re.finditer(pattern, line)
                for match in matches:
                    func_name = match.group(1)
                    # Extract parameters (basic)
                    param_match = re.search(r'\(([^)]*)\)', line)
                    params = []
                    if param_match:
                        param_str = param_match.group(1)
                        if param_str.strip():
                            params = [p.split(':')[0].strip() for p in param_str.split(',') if p.strip()]
                    
                    func = CodeFunction(
                        name=func_name,
                        start_line=i,
                        end_line=i,  # Approximate
                        parameters=params,
                        return_type=None,
                        docstring=None,
                        calls=[],
                        complexity="medium",  # Default
                        is_async='async' in line
                    )
                    functions.append(func)
            
            # Find classes
            for pattern in class_patterns:
                matches = re.finditer(pattern, line)
                for match in matches:
                    class_name = match.group(1)
                    cls = CodeClass(
                        name=class_name,
                        start_line=i,
                        end_line=i,  # Approximate
                        methods=[],
                        properties=[],
                        inherits_from=[],
                        implements=[],
                        docstring=None
                    )
                    classes.append(cls)
            
            # Find interfaces/types
            for pattern in interface_patterns:
                matches = re.finditer(pattern, line)
                for match in matches:
                    interface_name = match.group(1)
                    interfaces.append({
                        'name': interface_name,
                        'line': i,
                        'type': 'interface' if 'interface' in line else 'type'
                    })
            
            # Find imports
            for pattern in import_patterns:
                matches = re.finditer(pattern, line)
                for match in matches:
                    groups = match.groups()
                    if len(groups) >= 4 and groups[3]:  # Named/default imports
                        module = groups[3]
                        items = []
                        if groups[0]:  # Named imports
                            items = [item.strip() for item in groups[0].split(',')]
                        elif groups[1]:  # Namespace import
                            items = [groups[1]]
                        elif groups[2]:  # Default import
                            items = [groups[2]]
                        
                        imp = CodeImport(
                            module=module,
                            items=items,
                            alias=None,
                            is_relative=module.startswith('.'),
                            line_number=i
                        )
                        imports.append(imp)
                    elif len(groups) >= 1 and groups[0]:  # Side-effect import
                        imp = CodeImport(
                            module=groups[0],
                            items=[],
                            alias=None,
                            is_relative=groups[0].startswith('.'),
                            line_number=i
                        )
                        imports.append(imp)
            
            # Find exports
            for pattern in export_patterns:
                matches = re.finditer(pattern, line)
                for match in matches:
                    if match.group(1):
                        exports.append(match.group(1))
                    else:
                        # Handle export { ... }
                        export_list = match.group(1) if len(match.groups()) > 1 else ""
                        if export_list:
                            exports.extend([e.strip() for e in export_list.split(',') if e.strip()])
        
        # Check for React component (common entry point)
        if 'export default' in content or 'export default function' in content:
            entry_points.append('default_export')
        
        return CodeStructure(
            file_path=file_path,
            language=ProgrammingLanguage.TYPESCRIPT if file_path.endswith(('.ts', '.tsx')) else ProgrammingLanguage.JAVASCRIPT,
            functions=functions,
            classes=classes,
            imports=imports,
            exports=exports,
            variables=[],
            interfaces=interfaces,
            types=[],
            total_lines=len(lines),
            complexity_score=len(functions) + len(classes) * 2 + len(interfaces),
            entry_points=entry_points
        )


class MultiLanguageCodeAnalyzer:
    """Main analyzer that coordinates language-specific analyzers"""
    
    def __init__(self):
        self.logger = logging.getLogger(f"{__name__}.{self.__class__.__name__}")
        self.analyzers = {
            ProgrammingLanguage.PYTHON: PythonAnalyzer,
            ProgrammingLanguage.TYPESCRIPT: TypeScriptAnalyzer,
            ProgrammingLanguage.JAVASCRIPT: TypeScriptAnalyzer,  # Use same analyzer
        }
    
    def analyze_file(self, file_path: str, content: str) -> CodeStructure:
        """Analyze a single file and return its code structure"""
        try:
            # Detect language
            language = LanguageDetector.detect_language(file_path, content)
            
            self.logger.debug(f"Analyzing {file_path} as {language.value}")
            
            # Use specialized analyzer if available
            if language in self.analyzers:
                analyzer = self.analyzers[language]
                return analyzer.analyze(content, file_path)
            
            # Return minimal structure for unsupported languages
            return CodeStructure(
                file_path=file_path,
                language=language,
                functions=[],
                classes=[],
                imports=[],
                exports=[],
                variables=[],
                interfaces=[],
                types=[],
                total_lines=len(content.split('\n')),
                complexity_score=0,
                entry_points=[]
            )
            
        except Exception as e:
            self.logger.error(f"Error analyzing file {file_path}: {str(e)}")
            
            # Return minimal structure on error
            return CodeStructure(
                file_path=file_path,
                language=ProgrammingLanguage.UNKNOWN,
                functions=[],
                classes=[],
                imports=[],
                exports=[],
                variables=[],
                interfaces=[],
                types=[],
                total_lines=len(content.split('\n')),
                complexity_score=0,
                entry_points=[]
            )
    
    def analyze_project(self, files: Dict[str, str]) -> Dict[str, CodeStructure]:
        """Analyze multiple files and return project structure"""
        project_structure = {}
        
        for file_path, content in files.items():
            structure = self.analyze_file(file_path, content)
            project_structure[file_path] = structure
        
        return project_structure


================================================
FILE: services/config.py
================================================
"""
Configuration module for gitingest processing.

This module handles loading and validation of environment variables
for gitingest integration configuration.
"""

import os
from typing import List, Optional
from dataclasses import dataclass


@dataclass
class GitingestConfig:
    """Configuration class for gitingest processing settings"""
    
    max_file_size: int
    timeout: int
    temp_dir: str
    include_patterns: List[str]
    exclude_patterns: List[str]
    
    @classmethod
    def from_environment(cls) -> 'GitingestConfig':
        """
        Load gitingest configuration from environment variables.
        
        Returns:
            GitingestConfig instance with values from environment or defaults
        """
        # Load with defaults
        max_file_size = int(os.getenv('GITINGEST_MAX_FILE_SIZE', '10485760'))  # 10MB default
        timeout = int(os.getenv('GITINGEST_TIMEOUT', '300'))  # 5 minutes default
        temp_dir = os.getenv('GITINGEST_TEMP_DIR', '/tmp/gitingest')
        
        # Parse comma-separated patterns
        include_patterns_str = os.getenv(
            'GITINGEST_INCLUDE_PATTERNS', 
            '*.py,*.js,*.ts,*.jsx,*.tsx,*.md,*.json,*.yaml,*.yml'
        )
        include_patterns = [p.strip() for p in include_patterns_str.split(',') if p.strip()]
        
        exclude_patterns_str = os.getenv(
            'GITINGEST_EXCLUDE_PATTERNS',
            'node_modules,__pycache__,.git,*.pyc,*.log'
        )
        exclude_patterns = [p.strip() for p in exclude_patterns_str.split(',') if p.strip()]
        
        return cls(
            max_file_size=max_file_size,
            timeout=timeout,
            temp_dir=temp_dir,
            include_patterns=include_patterns,
            exclude_patterns=exclude_patterns
        )
    
    def validate(self) -> List[str]:
        """
        Validate configuration values.
        
        Returns:
            List of validation error messages, empty if valid
        """
        errors = []
        
        if self.max_file_size <= 0:
            errors.append("max_file_size must be positive")
        
        if self.timeout <= 0:
            errors.append("timeout must be positive")
        
        if not self.temp_dir:
            errors.append("temp_dir cannot be empty")
        
        if not self.include_patterns:
            errors.append("include_patterns cannot be empty")
        
        return errors
    
    def to_processing_config(self):
        """
        Convert to ProcessingConfig for GitingestProcessor.
        
        Returns:
            ProcessingConfig instance
        """
        from .gitingest_processor import ProcessingConfig
        
        return ProcessingConfig(
            include_patterns=self.include_patterns,
            exclude_patterns=self.exclude_patterns,
            max_file_size=self.max_file_size,
            respect_gitignore=True,
            include_binary_files=False,
            timeout=self.timeout
        )


def load_gitingest_config() -> GitingestConfig:
    """
    Load and validate gitingest configuration from environment.
    
    Returns:
        GitingestConfig instance
        
    Raises:
        ValueError: If configuration is invalid
    """
    config = GitingestConfig.from_environment()
    
    errors = config.validate()
    if errors:
        raise ValueError(f"Invalid gitingest configuration: {', '.join(errors)}")
    
    return config


def get_github_token() -> Optional[str]:
    """
    Get GitHub token from environment variables.
    
    Checks multiple possible environment variable names for GitHub token.
    
    Returns:
        GitHub token if found, None otherwise
    """
    # Check common environment variable names for GitHub token
    # Prioritize the one already used in your app
    token_vars = [
        'GITHUB_API_TOKEN',  # Your existing token variable
        'GITHUB_TOKEN',
        'GITHUB_ACCESS_TOKEN', 
        'GH_TOKEN',
        'PERSONAL_ACCESS_TOKEN'
    ]
    
    for var in token_vars:
        token = os.getenv(var)
        if token and token != 'your_github_token_here':  # Skip placeholder values
            return token
    
    return None


def setup_gitingest_environment() -> None:
    """
    Set up environment for gitingest processing.
    
    Creates necessary directories and validates configuration.
    """
    import tempfile
    from pathlib import Path
    
    config = load_gitingest_config()
    
    # Create temp directory if it doesn't exist
    temp_path = Path(config.temp_dir)
    if not temp_path.exists():
        try:
            temp_path.mkdir(parents=True, exist_ok=True)
        except PermissionError:
            # Fall back to system temp directory
            config.temp_dir = tempfile.gettempdir()
    
    # Validate gitingest is available
    import subprocess
    try:
        result = subprocess.run(['gitingest', '--version'], 
                              capture_output=True, text=True, timeout=10)
        if result.returncode != 0:
            raise RuntimeError("Gitingest command failed")
    except (FileNotFoundError, subprocess.TimeoutExpired):
        raise RuntimeError("Gitingest is not installed or not accessible in PATH")


================================================
FILE: services/gitingest_processor.py
================================================
"""
GitingestProcessor Service

This service handles gitingest execution and output processing for repository analysis.
It replaces the complex GitHub API streaming approach with gitingest's optimized
text format generation.
"""

import os
import subprocess
import tempfile
import logging
from pathlib import Path
from typing import Dict, List, Optional, Any
from dataclasses import dataclass
from datetime import datetime
import json
import shutil

logger = logging.getLogger(__name__)


@dataclass
class AuthConfig:
    """Configuration for repository authentication"""
    token: Optional[str] = None
    auth_method: str = "token"  # token, ssh, https
    

@dataclass
class ProcessingConfig:
    """Configuration for gitingest processing"""
    include_patterns: List[str] = None
    exclude_patterns: List[str] = None
    max_file_size: int = 10 * 1024 * 1024  # 10MB default
    respect_gitignore: bool = True
    include_binary_files: bool = False
    timeout: int = 300  # 5 minutes default
    
    def __post_init__(self):
        if self.include_patterns is None:
            self.include_patterns = ["*.py", "*.js", "*.ts", "*.jsx", "*.tsx", "*.md", "*.json", "*.yaml", "*.yml"]
        if self.exclude_patterns is None:
            self.exclude_patterns = ["node_modules", "__pycache__", ".git", "*.pyc", "*.log"]


@dataclass
class GitingestMetadata:
    """Metadata from gitingest processing"""
    processing_time: float
    total_files: int
    total_size: int
    gitingest_version: str
    processed_at: str


@dataclass
class ContentBlock:
    """Represents a content block from gitingest output"""
    file_path: str
    content: str
    language: str
    line_count: int
    size_bytes: int
    file_type: str


@dataclass
class StructuredRepository:
    """Structured representation of repository from gitingest"""
    repo_url: str
    files: Dict[str, ContentBlock]
    file_hierarchy: Dict[str, Any]
    language_stats: Dict[str, int]
    gitingest_metadata: GitingestMetadata
    raw_output: str


@dataclass
class ValidationResult:
    """Result of repository validation"""
    valid: bool
    error: Optional[str] = None
    repo_info: Optional[Dict[str, Any]] = None


@dataclass
class GitingestOutput:
    """Complete output from gitingest processing"""
    success: bool
    structured_repo: Optional[StructuredRepository] = None
    error: Optional[str] = None
    processing_stats: Optional[Dict[str, Any]] = None


class GitingestProcessor:
    """
    Core service that handles gitingest execution and output processing.
    
    This service provides methods to:
    - Process repositories using gitingest
    - Parse gitingest output into structured format
    - Validate repository access
    - Handle authentication and cleanup
    """
    
    def __init__(self, config: Optional[ProcessingConfig] = None):
        """
        Initialize GitingestProcessor with configuration.
        
        Args:
            config: Processing configuration, uses defaults if None
        """
        self.config = config or ProcessingConfig()
        self.temp_dir = None
        self._setup_logging()
    
    def _setup_logging(self):
        """Setup logging for gitingest operations"""
        self.logger = logging.getLogger(f"{__name__}.{self.__class__.__name__}")
    
    async def process_repository(self, repo_url: str, auth_config: AuthConfig) -> GitingestOutput:
        """
        Process a repository using gitingest to convert it to structured text format.
        
        Args:
            repo_url: URL of the repository to process
            auth_config: Authentication configuration for repository access
            
        Returns:
            GitingestOutput containing structured repository data or error information
        """
        start_time = datetime.now()
        process_id = None
        
        try:
            self.logger.info(f"Starting gitingest processing for repository: {repo_url}")
            
            # Validate repository first
            validation = await self.validate_repository(repo_url)
            if not validation.valid:
                return GitingestOutput(
                    success=False,
                    error=f"Repository validation failed: {validation.error}"
                )
            
            # Create temporary directory for processing
            process_id = self._create_temp_directory()
            
            # Execute gitingest command
            raw_output = await self._execute_gitingest(repo_url, auth_config, process_id)
            
            # Parse gitingest output
            structured_repo = self.parse_gitingest_output(raw_output, repo_url)
            
            # Calculate processing stats
            processing_time = (datetime.now() - start_time).total_seconds()
            processing_stats = {
                'processing_time_seconds': processing_time,
                'files_processed': len(structured_repo.files),
                'total_size_bytes': sum(block.size_bytes for block in structured_repo.files.values()),
                'started_at': start_time.isoformat(),
                'completed_at': datetime.now().isoformat()
            }
            
            self.logger.info(f"Successfully processed repository {repo_url} in {processing_time:.2f} seconds")
            
            return GitingestOutput(
                success=True,
                structured_repo=structured_repo,
                processing_stats=processing_stats
            )
            
        except Exception as e:
            self.logger.error(f"Error processing repository {repo_url}: {str(e)}")
            return GitingestOutput(
                success=False,
                error=f"Processing failed: {str(e)}"
            )
        finally:
            # Always cleanup temporary files
            if process_id:
                self.cleanup_temporary_files(process_id)
    
    async def validate_repository(self, repo_url: str) -> ValidationResult:
        """
        Validate repository URL and check basic accessibility.
        
        Args:
            repo_url: Repository URL to validate
            
        Returns:
            ValidationResult indicating if repository is valid and accessible
        """
        try:
            # Basic URL validation
            if not repo_url or not isinstance(repo_url, str):
                return ValidationResult(valid=False, error="Invalid repository URL")
            
            # Check if it's a valid Git URL format
            valid_patterns = [
                r'https://github\.com/[\w\-\.]+/[\w\-\.]+',
                r'git@github\.com:[\w\-\.]+/[\w\-\.]+\.git',
                r'https://gitlab\.com/[\w\-\.]+/[\w\-\.]+',
                r'https://bitbucket\.org/[\w\-\.]+/[\w\-\.]+',
            ]
            
            import re
            is_valid_format = any(re.match(pattern, repo_url) for pattern in valid_patterns)
            
            if not is_valid_format:
                return ValidationResult(
                    valid=False, 
                    error="Repository URL format not supported. Please use GitHub, GitLab, or Bitbucket URLs."
                )
            
            # For now, assume valid if format is correct
            # In a full implementation, we might do additional checks here
            return ValidationResult(
                valid=True,
                repo_info={
                    'url': repo_url,
                    'validated_at': datetime.now().isoformat()
                }
            )
            
        except Exception as e:
            self.logger.error(f"Repository validation error: {str(e)}")
            return ValidationResult(valid=False, error=f"Validation failed: {str(e)}")
    
    def parse_gitingest_output(self, raw_output: str, repo_url: str) -> StructuredRepository:
        """
        Parse gitingest raw output into structured repository representation.
        
        Args:
            raw_output: Raw text output from gitingest command
            repo_url: Original repository URL
            
        Returns:
            StructuredRepository with parsed and structured data
        """
        try:
            self.logger.info("Parsing gitingest output into structured format")
            
            # Initialize data structures
            files = {}
            file_hierarchy = {}
            language_stats = {}
            
            # Parse the gitingest output
            # Gitingest format: FILE: filename followed by content
            lines = raw_output.split('\n')
            current_file = None
            current_content = []
            in_file_section = False
            
            for line in lines:
                # Detect file headers - gitingest uses "FILE: filename" format
                if line.startswith('FILE: '):
                    # Save previous file if exists
                    if current_file and current_content:
                        self._add_file_to_structure(current_file, current_content, files, language_stats)
                    
                    # Start new file
                    current_file = line.replace('FILE: ', '').strip()
                    current_content = []
                    in_file_section = True
                    
                elif line.startswith('='):
                    # Skip separator lines
                    continue
                    
                elif line.startswith('Directory structure:'):
                    # Skip directory structure section
                    in_file_section = False
                    current_file = None
                    
                elif in_file_section and current_file:
                    # Add content line
                    current_content.append(line)
            
            # Add last file
            if current_file and current_content:
                self._add_file_to_structure(current_file, current_content, files, language_stats)
            
            # Build file hierarchy from the raw output directory structure
            file_hierarchy = self._parse_directory_structure(raw_output)
            
            # Create metadata
            metadata = GitingestMetadata(
                processing_time=0.0,  # Will be set by caller
                total_files=len(files),
                total_size=sum(block.size_bytes for block in files.values()),
                gitingest_version="unknown",  # Could be detected from gitingest --version
                processed_at=datetime.now().isoformat()
            )
            
            return StructuredRepository(
                repo_url=repo_url,
                files=files,
                file_hierarchy=file_hierarchy,
                language_stats=language_stats,
                gitingest_metadata=metadata,
                raw_output=raw_output
            )
            
        except Exception as e:
            self.logger.error(f"Error parsing gitingest output: {str(e)}")
            raise
    
    def cleanup_temporary_files(self, process_id: str) -> None:
        """
        Clean up temporary files and directories created during processing.
        
        Args:
            process_id: Unique identifier for the processing session
        """
        try:
            if self.temp_dir and os.path.exists(self.temp_dir):
                shutil.rmtree(self.temp_dir)
                self.logger.info(f"Cleaned up temporary directory for process {process_id}")
        except Exception as e:
            self.logger.error(f"Error cleaning up temporary files for process {process_id}: {str(e)}")
    
    def _create_temp_directory(self) -> str:
        """Create temporary directory for processing and return process ID"""
        self.temp_dir = tempfile.mkdtemp(prefix="gitingest_")
        process_id = os.path.basename(self.temp_dir)
        self.logger.debug(f"Created temporary directory: {self.temp_dir}")
        return process_id
    
    async def _execute_gitingest(self, repo_url: str, auth_config: AuthConfig, process_id: str) -> str:
        """
        Execute gitingest command with proper authentication and configuration.
        
        Args:
            repo_url: Repository URL to process
            auth_config: Authentication configuration
            process_id: Process identifier for cleanup
            
        Returns:
            Raw output from gitingest command
        """
        output_file = None
        try:
            # Create temporary output file (Windows encoding workaround)
            import tempfile
            output_fd, output_file = tempfile.mkstemp(suffix='.txt', dir=self.temp_dir, text=True)
            os.close(output_fd)  # Close the file descriptor, we'll use the path
            
            # Build gitingest command with correct syntax
            cmd = ['gitingest', repo_url]
            
            # Add configuration options using correct flags
            if self.config.max_file_size:
                cmd.extend(['--max-size', str(self.config.max_file_size)])
            
            # Add include patterns
            for pattern in self.config.include_patterns:
                cmd.extend(['--include-pattern', pattern])
            
            # Add exclude patterns
            for pattern in self.config.exclude_patterns:
                cmd.extend(['--exclude-pattern', pattern])
            
            # Include gitignored files if configured
            if not self.config.respect_gitignore:
                cmd.append('--include-gitignored')
            
            # Add token if provided
            if auth_config.token:
                cmd.extend(['--token', auth_config.token])
            
            # Output to temporary file (Windows encoding workaround)
            cmd.extend(['--output', output_file])
            
            # Set up environment
            env = os.environ.copy()
            if auth_config.token:
                env['GITHUB_TOKEN'] = auth_config.token
            
            # Execute gitingest
            self.logger.debug(f"Executing gitingest command: {' '.join(cmd[:-2])} [URL] --output [temp_file]")
            
            result = subprocess.run(
                cmd,
                capture_output=True,
                text=True,
                timeout=self.config.timeout,
                env=env,
                cwd=self.temp_dir,
                encoding='utf-8',
                errors='replace'  # Handle encoding errors gracefully
            )
            
            if result.returncode != 0:
                error_msg = result.stderr.strip() if result.stderr else "Unknown gitingest error"
                raise RuntimeError(f"Gitingest execution failed: {error_msg}")
            
            # Read the output file
            with open(output_file, 'r', encoding='utf-8', errors='replace') as f:
                output_content = f.read()
            
            return output_content
            
        except subprocess.TimeoutExpired:
            raise RuntimeError(f"Gitingest execution timed out after {self.config.timeout} seconds")
        except FileNotFoundError:
            raise RuntimeError("Gitingest is not installed or not in PATH")
        except Exception as e:
            raise RuntimeError(f"Gitingest execution failed: {str(e)}")
        finally:
            # Clean up temporary output file
            if output_file and os.path.exists(output_file):
                try:
                    os.remove(output_file)
                except Exception as e:
                    self.logger.warning(f"Failed to clean up temporary output file {output_file}: {e}")
    
    def _add_file_to_structure(self, file_path: str, content_lines: List[str], 
                              files: Dict[str, ContentBlock], language_stats: Dict[str, int]) -> None:
        """Add a file to the structured repository data"""
        # Clean up content - remove empty lines at the end
        while content_lines and not content_lines[-1].strip():
            content_lines.pop()
        
        content = '\n'.join(content_lines)
        language = self._detect_language(file_path)
        
        # Update language statistics
        if language:
            language_stats[language] = language_stats.get(language, 0) + 1
        
        # Create content block
        content_block = ContentBlock(
            file_path=file_path,
            content=content,
            language=language or 'unknown',
            line_count=len(content_lines),
            size_bytes=len(content.encode('utf-8')),
            file_type=self._get_file_type(file_path)
        )
        
        files[file_path] = content_block
    
    def _parse_directory_structure(self, raw_output: str) -> Dict[str, Any]:
        """Parse directory structure from gitingest output"""
        hierarchy = {}
        
        lines = raw_output.split('\n')
        in_directory_section = False
        
        for line in lines:
            if line.startswith('Directory structure:'):
                in_directory_section = True
                continue
            elif line.startswith('=') and in_directory_section:
                # End of directory section
                break
            elif in_directory_section and line.strip():
                # Parse directory tree lines
                # Example: "    â””â”€â”€ README" or "â””â”€â”€ octocat-hello-world/"
                if 'â””â”€â”€' in line or 'â”œâ”€â”€' in line:
                    # Extract file/folder name
                    parts = line.split('â”€â”€')
                    if len(parts) > 1:
                        name = parts[-1].strip()
                        if name.endswith('/'):
                            # Directory
                            hierarchy[name[:-1]] = {}
                        else:
                            # File
                            hierarchy[name] = name
        
        return hierarchy
    
    def _build_file_hierarchy(self, file_paths: List[str]) -> Dict[str, Any]:
        """Build hierarchical structure from file paths"""
        hierarchy = {}
        
        for file_path in file_paths:
            parts = file_path.split('/')
            current = hierarchy
            
            for part in parts[:-1]:  # Directories
                if part not in current:
                    current[part] = {}
                current = current[part]
            
            # File
            if parts:
                current[parts[-1]] = file_path
        
        return hierarchy
    
    def _detect_language(self, file_path: str) -> Optional[str]:
        """Detect programming language from file extension"""
        ext = Path(file_path).suffix.lower()
        
        language_map = {
            '.py': 'Python',
            '.js': 'JavaScript',
            '.ts': 'TypeScript',
            '.jsx': 'JavaScript',
            '.tsx': 'TypeScript',
            '.java': 'Java',
            '.cpp': 'C++',
            '.c': 'C',
            '.cs': 'C#',
            '.go': 'Go',
            '.rs': 'Rust',
            '.php': 'PHP',
            '.rb': 'Ruby',
            '.swift': 'Swift',
            '.kt': 'Kotlin',
            '.scala': 'Scala',
            '.html': 'HTML',
            '.css': 'CSS',
            '.scss': 'SCSS',
            '.md': 'Markdown',
            '.json': 'JSON',
            '.yaml': 'YAML',
            '.yml': 'YAML',
            '.xml': 'XML',
            '.sql': 'SQL',
            '.sh': 'Shell',
            '.bash': 'Shell',
            '.ps1': 'PowerShell'
        }
        
        return language_map.get(ext)
    
    def _get_file_type(self, file_path: str) -> str:
        """Determine file type category"""
        ext = Path(file_path).suffix.lower()
        
        if ext in ['.py', '.js', '.ts', '.jsx', '.tsx', '.java', '.cpp', '.c', '.cs', '.go', '.rs', '.php', '.rb', '.swift', '.kt', '.scala']:
            return 'source'
        elif ext in ['.md', '.txt', '.rst', '.doc', '.docx']:
            return 'documentation'
        elif ext in ['.json', '.yaml', '.yml', '.xml', '.toml', '.ini', '.cfg']:
            return 'configuration'
        elif ext in ['.html', '.css', '.scss', '.less']:
            return 'web'
        elif ext in ['.sql']:
            return 'database'
        elif ext in ['.sh', '.bash', '.ps1', '.bat']:
            return 'script'
        else:
            return 'other'


================================================
FILE: services/rag_service.py
================================================
[Empty file]


================================================
FILE: services/rag_system.py
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x8d in position 36680: character maps to <undefined>


================================================
FILE: silent_rag/chunks_metadata.json
================================================
[
  {
    "chunk_id": "312ddba97a54",
    "file_path": "eas.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 20,
    "metadata": {
      "total_lines": 20,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "18298fc1f77b",
    "file_path": "LocationContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 13,
    "end_line": 13,
    "metadata": {
      "function_name": "useLocation",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "767115b3f1a6",
    "file_path": "LocationContext.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 2,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "215fc9769838",
    "file_path": "supabaseClient.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "@supabase/supabase-js",
          "items": [
            "createClient"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@react-native-async-storage/async-storage",
          "items": [
            "AsyncStorage"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "727bb63f98e6",
    "file_path": "supabaseClient.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "6b098e922f1d",
    "file_path": "tsconfig.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7324db055ad9",
    "file_path": ".npmrc",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "40f98f6bf297",
    "file_path": ".prettierrc",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "total_lines": 6,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c315c5a10e4b",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "NotFoundScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "e12457aeaebf",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "handleGoHome",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "814e11d6dbf2",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "Stack",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native",
          "items": [
            "StyleSheet",
            "Text",
            "View",
            "TouchableOpacity"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "9bc38684bbf2",
    "file_path": "app/+not-found.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 39,
    "metadata": {
      "total_lines": 39,
      "complexity_score": 2,
      "entry_points": [
        "default_export"
      ],
      "function_count": 2,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4a18992c80c2",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "RootLayoutContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "56ca29d9cb2a",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "initBackgroundTasks",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "603d98b8e27e",
    "file_path": "app/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 48,
    "end_line": 48,
    "metadata": {
      "function_name": "RootLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "a5d1b32a210e",
    "file_path": "app/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 8,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Stack"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-status-bar",
          "items": [
            "StatusBar"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../hooks/useFrameworkReady",
          "items": [
            "useFrameworkReady"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../LocationContext",
          "items": [
            "LocationProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../contexts/AuthContext",
          "items": [
            "AuthProvider",
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../components/LoadingScreen",
          "items": [
            "LoadingScreen"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../services/backgroundTasks",
          "items": [
            "startBackgroundFetch"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "1ed82df8a297",
    "file_path": "app/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "dd0fdb41f6de",
    "file_path": "app/index.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Redirect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "../components/LoadingScreen",
          "items": [
            "LoadingScreen"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "401fd974d653",
    "file_path": "app/index.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 18,
    "metadata": {
      "total_lines": 18,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "fa857c8eebc9",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "AuthLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "aeceda9da57e",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Stack"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "56a6fd9e2335",
    "file_path": "app/(auth)/_layout.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 10,
    "metadata": {
      "total_lines": 10,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "eda1d0563b4b",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "LoginScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b5e0d66f466a",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 24,
    "end_line": 24,
    "metadata": {
      "function_name": "handleLogin",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5bce8d3658",
    "file_path": "app/(auth)/login.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame",
            "Eye",
            "EyeOff"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2a55a766836f",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "SignUpScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "26a4be08d992",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleSignUp",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bc23219fe518",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 51,
    "end_line": 51,
    "metadata": {
      "function_name": "updateFormData",
      "parameters": [
        "field",
        "value"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "7188827a5b5e",
    "file_path": "app/(auth)/signup.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Link",
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame",
            "Eye",
            "EyeOff"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "f3995e9297a2",
    "file_path": "app/(tabs)/_layout.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 13,
    "end_line": 13,
    "metadata": {
      "function_name": "TabLayout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "13be60e846a7",
    "file_path": "app/(tabs)/_layout.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "Tabs"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "expo-router",
          "items": [
            "useRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "1544cb6b8061",
    "file_path": "app/(tabs)/air-quality.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "6e81ff14212e",
    "file_path": "app/(tabs)/evacuation.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ade6b64a03a",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 138,
    "end_line": 138,
    "metadata": {
      "function_name": "MapScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8bbedf3b3d8e",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 178,
    "end_line": 178,
    "metadata": {
      "function_name": "getParsedPrediction",
      "parameters": [
        "pred"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "306fdd46b4f5",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 191,
    "end_line": 191,
    "metadata": {
      "function_name": "fetchPollutants",
      "parameters": [
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "83232ab6fe3a",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 224,
    "end_line": 224,
    "metadata": {
      "function_name": "fetchWildfireRisk",
      "parameters": [
        "lat",
        "lng",
        "env"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2e02727f2cb2",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 271,
    "end_line": 271,
    "metadata": {
      "function_name": "updateWildfireRisk",
      "parameters": [
        "lat",
        "lng",
        "env"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bd1a7aa373a8",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 276,
    "end_line": 276,
    "metadata": {
      "function_name": "fetchEnvData",
      "parameters": [
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ae2979b88a97",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 395,
    "end_line": 395,
    "metadata": {
      "function_name": "loadWildfireData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "4d822c261a4e",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 436,
    "end_line": 436,
    "metadata": {
      "function_name": "getSeverityColor",
      "parameters": [
        "severity"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "94adf7a96bcc",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 446,
    "end_line": 446,
    "metadata": {
      "function_name": "toggleLayer",
      "parameters": [
        "layer"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "98f07d93d3fb",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 451,
    "end_line": 451,
    "metadata": {
      "function_name": "fetchSuggestions",
      "parameters": [
        "text"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "a3c22f590276",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 471,
    "end_line": 471,
    "metadata": {
      "function_name": "fetchPlaceDetails",
      "parameters": [
        "placeId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "471ed44419c4",
    "file_path": "app/(tabs)/index.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "imports": [
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "TriangleAlert as AlertTriangle",
            "Flame",
            "Shield",
            "Navigation",
            "RefreshCw",
            "Eye",
            "EyeOff",
            "X",
            "Crosshair"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native-maps",
          "items": [
            "MapView"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native-google-places-autocomplete",
          "items": [
            "GooglePlacesAutocomplete"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../LocationContext",
          "items": [
            "useLocation"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "lottie-react-native",
          "items": [
            "LottieView"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b15a6604624c",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 28,
    "end_line": 28,
    "metadata": {
      "function_name": "ProfileScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "898a144c6c83",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 55,
    "end_line": 55,
    "metadata": {
      "function_name": "getCurrentLocation",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "dbd1820c6019",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 71,
    "end_line": 71,
    "metadata": {
      "function_name": "getLocationName",
      "parameters": [
        "latitude",
        "longitude"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ebe512e12f2a",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 101,
    "end_line": 101,
    "metadata": {
      "function_name": "checkBackgroundFetchStatus",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "bda8f4fbf68e",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 110,
    "end_line": 110,
    "metadata": {
      "function_name": "toggleNotification",
      "parameters": [
        "key"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "6f258af80b9c",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 117,
    "end_line": 117,
    "metadata": {
      "function_name": "toggleBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "5de4cc88fd99",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 134,
    "end_line": 134,
    "metadata": {
      "function_name": "handleLogout",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9bd2b4fbe017",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 164,
    "end_line": 164,
    "metadata": {
      "function_name": "handleEmergencyContact",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "058ce9186cad",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 181,
    "end_line": 181,
    "metadata": {
      "function_name": "testWildfirePrediction",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "84db07343256",
    "file_path": "app/(tabs)/profile.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 8,
    "metadata": {
      "imports": [
        {
          "module": "expo-router",
          "items": [
            "router"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../contexts/AuthContext",
          "items": [
            "useAuthContext"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Bell",
            "MapPin",
            "Shield",
            "LogOut",
            "TriangleAlert as AlertTriangle",
            "Smartphone",
            "Clock"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../services/backgroundTasks",
          "items": [
            "startBackgroundFetch",
            "stopBackgroundFetch",
            "getBackgroundFetchStatus"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "expo-background-fetch",
          "items": [
            "BackgroundFetch"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-notifications",
          "items": [
            "Notifications"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../../LocationContext",
          "items": [
            "useLocation"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "99e37739f889",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 32,
    "end_line": 32,
    "metadata": {
      "function_name": "UpdatesScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ccf34dafe1f2",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 43,
    "end_line": 43,
    "metadata": {
      "function_name": "loadUpdates",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9ae53d90a903",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 115,
    "end_line": 115,
    "metadata": {
      "function_name": "getRoleColor",
      "parameters": [
        "role"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "76491eaa323b",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 124,
    "end_line": 124,
    "metadata": {
      "function_name": "getCategoryColor",
      "parameters": [
        "category"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "11e3d4ee58d8",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 139,
    "end_line": 139,
    "metadata": {
      "function_name": "timeAgo",
      "parameters": [
        "timestamp"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "21a2713c80d2",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 152,
    "end_line": 152,
    "metadata": {
      "function_name": "renderPreventionContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "cd2716a9321e",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 261,
    "end_line": 261,
    "metadata": {
      "function_name": "renderUpdatesContent",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2ff72b0e05e8",
    "file_path": "app/(tabs)/updates.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "lucide-react-native",
          "items": [
            "MessageSquare",
            "MapPin",
            "TriangleAlert as AlertTriangle",
            "CircleCheck as CheckCircle",
            "User",
            "Flame",
            "Shield",
            "Info"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "a0d07c2d0897",
    "file_path": "assets/lottie/birds.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "982d460ac4b3",
    "file_path": "assets/lottie/smoke.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bbf779cae3b5",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "LoadingScreen",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "9658e874cc9c",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-native",
          "items": [
            "View",
            "Text",
            "ActivityIndicator",
            "StyleSheet"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "lucide-react-native",
          "items": [
            "Flame"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "6528c5264626",
    "file_path": "components/LoadingScreen.tsx",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 47,
    "metadata": {
      "total_lines": 47,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "db233bd2a1d2",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "useAuthContext",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "03bed49268c8",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 32,
    "end_line": 32,
    "metadata": {
      "function_name": "getInitialSession",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "da60016f3392",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 65,
    "end_line": 65,
    "metadata": {
      "function_name": "signIn",
      "parameters": [
        "email",
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "c687165ed16c",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 78,
    "end_line": 78,
    "metadata": {
      "function_name": "signUp",
      "parameters": [
        "email",
        "password",
        "userData?"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "85dee60632fa",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 94,
    "end_line": 94,
    "metadata": {
      "function_name": "signOut",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb32d4766698",
    "file_path": "contexts/AuthContext.tsx",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "@supabase/supabase-js",
          "items": [
            "Session",
            "User"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "3f0cf074215f",
    "file_path": "HazEnd - Flask Backend/backend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 23,
    "metadata": {
      "total_lines": 23,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "772e62648b13",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 22,
    "end_line": 59,
    "metadata": {
      "function_name": "get_wildfire_risk_prediction",
      "parameters": [
        "data",
        "openrouter_api_key"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0f994e8d9d26",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 63,
    "end_line": 64,
    "metadata": {
      "function_name": "home",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2625e7ee5b10",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 68,
    "end_line": 69,
    "metadata": {
      "function_name": "about",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "8b4dbd6ada2e",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 72,
    "end_line": 160,
    "metadata": {
      "function_name": "gee_data",
      "parameters": [],
      "calls": [
        "float",
        "float",
        "get_wildfire_risk_prediction",
        "jsonify",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "float",
        "timedelta"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3a02695fbd2b",
    "file_path": "HazEnd - Flask Backend/backend/app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 6,
    "metadata": {
      "imports": [
        {
          "module": "flask",
          "items": [
            "Flask",
            "render_template",
            "request",
            "jsonify"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "ee",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "datetime",
          "items": [
            "date",
            "timedelta"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "requests",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "json",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "os",
          "items": [],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "5c1ee8b678a0",
    "file_path": "HazEnd - Flask Backend/backend/dev-requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "total_lines": 2,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0d0490164c45",
    "file_path": "HazEnd - Flask Backend/backend/pyproject.toml",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "31dc80fd12b6",
    "file_path": "HazEnd - Flask Backend/backend/requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "44c01fdebb9e",
    "file_path": "HazEnd - Flask Backend/backend/static/site.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 27,
    "metadata": {
      "total_lines": 27,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "fe64fef950a1",
    "file_path": "HazEnd - Flask Backend/backend/templates/about.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9590f6bfb4e9",
    "file_path": "HazEnd - Flask Backend/backend/templates/base.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 21,
    "metadata": {
      "total_lines": 21,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3a480ac3ce83",
    "file_path": "HazEnd - Flask Backend/backend/templates/home.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "17110ac13b47",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 6,
    "end_line": 8,
    "metadata": {
      "function_name": "client",
      "parameters": [],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "01e1d03521ae",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 11,
    "end_line": 13,
    "metadata": {
      "function_name": "test_home",
      "parameters": [
        "client"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f3cd43aa286b",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 16,
    "end_line": 18,
    "metadata": {
      "function_name": "test_about",
      "parameters": [
        "client"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "12b72335b236",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "pytest",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "app",
          "items": [
            "app"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b21fdf531b82",
    "file_path": "HazEnd - Flask Backend/backend/tests/test_app.py",
    "chunk_type": "file",
    "language": "python",
    "start_line": 1,
    "end_line": 18,
    "metadata": {
      "total_lines": 18,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e5a76aeeb136",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "useAuth",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "01a35b047da1",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "getInitialSession",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "d3249165c436",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 43,
    "end_line": 43,
    "metadata": {
      "function_name": "signIn",
      "parameters": [
        "email",
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "e11107201196",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 56,
    "end_line": 56,
    "metadata": {
      "function_name": "signUp",
      "parameters": [
        "email",
        "password",
        "userData?"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "23f1d3c273d2",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 72,
    "end_line": 72,
    "metadata": {
      "function_name": "signOut",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "9619664454ef",
    "file_path": "hooks/useAuth.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "useState",
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@supabase/supabase-js",
          "items": [
            "Session",
            "User"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../supabaseClient",
          "items": [
            "supabase"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "11c11958c8b4",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 9,
    "end_line": 9,
    "metadata": {
      "function_name": "useFrameworkReady",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "d9e22a8b8575",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "useEffect"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "b47c1293598a",
    "file_path": "hooks/useFrameworkReady.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 2,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7e87c15ea40c",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 203,
    "end_line": 203,
    "metadata": {
      "function_name": "sendWildfireAlert",
      "parameters": [
        "prediction",
        "lat",
        "lng"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab4b4c98a52a",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 252,
    "end_line": 252,
    "metadata": {
      "function_name": "startBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "0a4f5c555350",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 268,
    "end_line": 268,
    "metadata": {
      "function_name": "stopBackgroundFetch",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "a60c01422c16",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "function",
    "language": "typescript",
    "start_line": 278,
    "end_line": 278,
    "metadata": {
      "function_name": "getBackgroundFetchStatus",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "705583e4929d",
    "file_path": "services/backgroundTasks.ts",
    "chunk_type": "imports",
    "language": "typescript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "expo-background-fetch",
          "items": [
            "BackgroundFetch"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-task-manager",
          "items": [
            "TaskManager"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-notifications",
          "items": [
            "Notifications"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "expo-location",
          "items": [
            "Location"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "ab5c40bc97a6",
    "file_path": "types/env.d.ts",
    "chunk_type": "file",
    "language": "typescript",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "cb2cb413cf4f",
    "file_path": ".bolt/config.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "total_lines": 3,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  }
]


================================================
FILE: silent_rag/project_structure.json
================================================
{
  "README.md": {
    "language": "unknown",
    "total_lines": 212,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app.json": {
    "language": "unknown",
    "total_lines": 79,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "BACKGROUND_TASKS_README.md": {
    "language": "unknown",
    "total_lines": 95,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "eas.json": {
    "language": "unknown",
    "total_lines": 20,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "LocationContext.tsx": {
    "language": "typescript",
    "total_lines": 22,
    "complexity_score": 2,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "package.json": {
    "language": "unknown",
    "total_lines": 64,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "supabaseClient.ts": {
    "language": "typescript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "tsconfig.json": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".npmrc": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".prettierrc": {
    "language": "unknown",
    "total_lines": 6,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/+not-found.tsx": {
    "language": "typescript",
    "total_lines": 39,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/_layout.tsx": {
    "language": "typescript",
    "total_lines": 56,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/index.tsx": {
    "language": "typescript",
    "total_lines": 18,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/_layout.tsx": {
    "language": "typescript",
    "total_lines": 10,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/login.tsx": {
    "language": "typescript",
    "total_lines": 223,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(auth)/signup.tsx": {
    "language": "typescript",
    "total_lines": 245,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/_layout.tsx": {
    "language": "typescript",
    "total_lines": 94,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/air-quality.tsx": {
    "language": "typescript",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/(tabs)/evacuation.tsx": {
    "language": "typescript",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app/(tabs)/index.tsx": {
    "language": "typescript",
    "total_lines": 1091,
    "complexity_score": 14,
    "function_count": 11,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/profile.tsx": {
    "language": "typescript",
    "total_lines": 480,
    "complexity_score": 10,
    "function_count": 9,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "app/(tabs)/updates.tsx": {
    "language": "typescript",
    "total_lines": 667,
    "complexity_score": 8,
    "function_count": 7,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "assets/lottie/birds.json": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "assets/lottie/smoke.json": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "components/LoadingScreen.tsx": {
    "language": "typescript",
    "total_lines": 47,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "contexts/AuthContext.tsx": {
    "language": "typescript",
    "total_lines": 119,
    "complexity_score": 6,
    "function_count": 5,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/README.md": {
    "language": "unknown",
    "total_lines": 23,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/app.py": {
    "language": "python",
    "total_lines": 163,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "__main__"
    ]
  },
  "HazEnd - Flask Backend/backend/dev-requirements.txt": {
    "language": "unknown",
    "total_lines": 2,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/pyproject.toml": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/requirements.txt": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/static/site.css": {
    "language": "unknown",
    "total_lines": 27,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/about.html": {
    "language": "unknown",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/base.html": {
    "language": "unknown",
    "total_lines": 21,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/templates/home.html": {
    "language": "unknown",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "HazEnd - Flask Backend/backend/tests/test_app.py": {
    "language": "python",
    "total_lines": 18,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "hooks/useAuth.ts": {
    "language": "typescript",
    "total_lines": 91,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": []
  },
  "hooks/useFrameworkReady.ts": {
    "language": "typescript",
    "total_lines": 13,
    "complexity_score": 2,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "services/backgroundTasks.ts": {
    "language": "typescript",
    "total_lines": 286,
    "complexity_score": 6,
    "function_count": 4,
    "class_count": 0,
    "entry_points": []
  },
  "types/env.d.ts": {
    "language": "typescript",
    "total_lines": 11,
    "complexity_score": 1,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  ".bolt/config.json": {
    "language": "unknown",
    "total_lines": 3,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  }
}


================================================
FILE: temp_consistency_test_1/chunks_metadata.json
================================================
[
  {
    "chunk_id": "67025e64a52b",
    "file_path": "Backend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "691e32ecc8cc",
    "file_path": "Backend/server.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 9,
    "metadata": {
      "total_lines": 9,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4d508d8c3cfd",
    "file_path": "Backend/public/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8c84170a71ba",
    "file_path": "Backend/public/productDetail.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ec8f9391c2a",
    "file_path": "Backend/public/ProductForm.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8dcb12fead7a",
    "file_path": "Backend/src/app.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "62ffc1f1a33a",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "connect",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "4fb201893988",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "5fe7969b2835",
    "file_path": "Backend/src/models/cart.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d9449efdabd5",
    "file_path": "Backend/src/models/product.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "a683d430351d",
    "file_path": "Backend/src/models/user.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 25,
    "metadata": {
      "total_lines": 25,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "08dd729142ca",
    "file_path": "Backend/src/routes/index.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "ee45bd1ff134",
    "file_path": "Backend/src/routes/login.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "121b43821afe",
    "file_path": "Frontend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d0433f5bc5ff",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "@eslint/js",
          "items": [
            "js"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "globals",
          "items": [
            "globals"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-hooks",
          "items": [
            "reactHooks"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-refresh",
          "items": [
            "reactRefresh"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint/config",
          "items": [
            "defineConfig",
            "globalIgnores"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "94d42860dd79",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 29,
    "metadata": {
      "total_lines": 29,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "271ef0c96d71",
    "file_path": "Frontend/index.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bd75660c61cd",
    "file_path": "Frontend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "90c2f169ec23",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "vite",
          "items": [
            "defineConfig"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@vitejs/plugin-react",
          "items": [
            "react"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "27669808453d",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 7,
    "metadata": {
      "total_lines": 7,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "67671a0eda01",
    "file_path": "Frontend/src/App.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c3cd7de0e431",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "74150ecad46f",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 15,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "remixicon/fonts/remixicon.css",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/AddProducts",
          "items": [
            "AddProducts"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/Home",
          "items": [
            "Home"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/ProductDetail",
          "items": [
            "ProductDetail"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserHome",
          "items": [
            "UserHome"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Cart",
          "items": [
            "Cart"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserProduct",
          "items": [
            "UserProduct"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter as Router",
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/CartContext",
          "items": [
            "CartProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./components/Footer",
          "items": [
            "Footer"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "71f69353452e",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 48,
    "metadata": {
      "total_lines": 48,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0dbb727bd2c1",
    "file_path": "Frontend/src/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "664c3a393572",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "StrictMode"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-dom/client",
          "items": [
            "createRoot"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./index.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./App.jsx",
          "items": [
            "App"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "165410ac6187",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "259f26e3f750",
    "file_path": "Frontend/src/components/Footer.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3e71967695d4",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 4,
    "end_line": 4,
    "metadata": {
      "function_name": "Footer",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "78d6a8efab59",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Footer.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "01128ff5caca",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c0d90cc90299",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Navbar",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b1bd4586db29",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Navbar.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "7a7bb02b537b",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "339c9ac50f7b",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "AddProducts",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5439cd6ea3",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f164f8b47a98",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./AddProducts.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ImageUploader",
          "items": [
            "ImageUploader"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "138c3aca1211",
    "file_path": "Frontend/src/Pages/Cart.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e7beb6b3ef69",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "Cart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0bdf4a3cfa42",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "fetchCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "070348445d62",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 21,
    "end_line": 21,
    "metadata": {
      "function_name": "groupByProduct",
      "parameters": [
        "items"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b803899a396e",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 36,
    "end_line": 36,
    "metadata": {
      "function_name": "reduceQuantity",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "50169d224934",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 42,
    "end_line": 42,
    "metadata": {
      "function_name": "deleteProduct",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb5bd96b87ab",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Cart.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "556ef1af9ac7",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "CartProvider",
      "parameters": [
        "{ children }"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "53acf3505fdf",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [
        "product"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "bea1be21c768",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 22,
    "end_line": 22,
    "metadata": {
      "function_name": "useCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3d9b102f8d5d",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "createContext",
            "useState",
            "useContext"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "24936b882742",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "273332ddca53",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f8536fc9158a",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "6c3994d19fbe",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Home.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "a826b13adc20",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "ImageUploader",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "adacf7966fbe",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "onUploadSuccess",
      "parameters": [
        "res"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b7aa538f660b",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 11,
    "end_line": 11,
    "metadata": {
      "function_name": "onUploadError",
      "parameters": [
        "err"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "45d493f00ff1",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "imagekitio-react",
          "items": [
            "IKContext",
            "IKUpload"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "4dbd45181666",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 36,
    "metadata": {
      "total_lines": 36,
      "complexity_score": 3,
      "entry_points": [
        "default_export"
      ],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7eadb38334fa",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Login",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab014c735a3d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3b5bcba56c7d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Login.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2c682190a42f",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "07bc97759310",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "f382c23d88dd",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ProductDetail.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "38b4e00622ed",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "084501a9e80e",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "79c501b6830c",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserHome.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "ae6f4936efc8",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0ab1ed2b84cd",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 19,
    "end_line": 19,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "296c64989e4f",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleAddToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "65fb31efec89",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 35,
    "end_line": 35,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2a8b961d3554",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserProduct.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  }
]


================================================
FILE: temp_consistency_test_1/project_structure.json
================================================
{
  "Backend/package.json": {
    "language": "unknown",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/server.js": {
    "language": "javascript",
    "total_lines": 9,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/index.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/productDetail.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/ProductForm.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/app.js": {
    "language": "javascript",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/db/db.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/cart.model.js": {
    "language": "javascript",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/product.model.js": {
    "language": "javascript",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/user.model.js": {
    "language": "javascript",
    "total_lines": 25,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/cart.router.js": {
    "language": "javascript",
    "total_lines": 68,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/index.router.js": {
    "language": "javascript",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/login.router.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/product.router.js": {
    "language": "javascript",
    "total_lines": 126,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/user.router.js": {
    "language": "javascript",
    "total_lines": 81,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/README.md": {
    "language": "unknown",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/eslint.config.js": {
    "language": "javascript",
    "total_lines": 29,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/index.html": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/package.json": {
    "language": "unknown",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/vite.config.js": {
    "language": "javascript",
    "total_lines": 7,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/App.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/App.jsx": {
    "language": "javascript",
    "total_lines": 48,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/index.css": {
    "language": "unknown",
    "total_lines": 11,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/main.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.css": {
    "language": "unknown",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/components/Navbar.css": {
    "language": "unknown",
    "total_lines": 80,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Navbar.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/AddProducts.css": {
    "language": "unknown",
    "total_lines": 69,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/AddProducts.jsx": {
    "language": "javascript",
    "total_lines": 105,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Cart.css": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Cart.jsx": {
    "language": "javascript",
    "total_lines": 112,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/CartContext.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.css": {
    "language": "unknown",
    "total_lines": 128,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.jsx": {
    "language": "javascript",
    "total_lines": 52,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ImageUploader.jsx": {
    "language": "javascript",
    "total_lines": 36,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Login.css": {
    "language": "unknown",
    "total_lines": 62,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Login.jsx": {
    "language": "javascript",
    "total_lines": 55,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ProductDetail.css": {
    "language": "unknown",
    "total_lines": 127,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/ProductDetail.jsx": {
    "language": "javascript",
    "total_lines": 59,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserHome.css": {
    "language": "unknown",
    "total_lines": 186,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserHome.jsx": {
    "language": "javascript",
    "total_lines": 65,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserProduct.css": {
    "language": "unknown",
    "total_lines": 137,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserProduct.jsx": {
    "language": "javascript",
    "total_lines": 78,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  }
}


================================================
FILE: temp_consistency_test_2/chunks_metadata.json
================================================
[
  {
    "chunk_id": "67025e64a52b",
    "file_path": "Backend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "691e32ecc8cc",
    "file_path": "Backend/server.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 9,
    "metadata": {
      "total_lines": 9,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4d508d8c3cfd",
    "file_path": "Backend/public/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8c84170a71ba",
    "file_path": "Backend/public/productDetail.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ec8f9391c2a",
    "file_path": "Backend/public/ProductForm.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8dcb12fead7a",
    "file_path": "Backend/src/app.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "62ffc1f1a33a",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "connect",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "4fb201893988",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "5fe7969b2835",
    "file_path": "Backend/src/models/cart.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d9449efdabd5",
    "file_path": "Backend/src/models/product.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "a683d430351d",
    "file_path": "Backend/src/models/user.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 25,
    "metadata": {
      "total_lines": 25,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "08dd729142ca",
    "file_path": "Backend/src/routes/index.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "ee45bd1ff134",
    "file_path": "Backend/src/routes/login.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "121b43821afe",
    "file_path": "Frontend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d0433f5bc5ff",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "@eslint/js",
          "items": [
            "js"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "globals",
          "items": [
            "globals"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-hooks",
          "items": [
            "reactHooks"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-refresh",
          "items": [
            "reactRefresh"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint/config",
          "items": [
            "defineConfig",
            "globalIgnores"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "94d42860dd79",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 29,
    "metadata": {
      "total_lines": 29,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "271ef0c96d71",
    "file_path": "Frontend/index.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bd75660c61cd",
    "file_path": "Frontend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "90c2f169ec23",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "vite",
          "items": [
            "defineConfig"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@vitejs/plugin-react",
          "items": [
            "react"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "27669808453d",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 7,
    "metadata": {
      "total_lines": 7,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "67671a0eda01",
    "file_path": "Frontend/src/App.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c3cd7de0e431",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "74150ecad46f",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 15,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "remixicon/fonts/remixicon.css",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/AddProducts",
          "items": [
            "AddProducts"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/Home",
          "items": [
            "Home"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/ProductDetail",
          "items": [
            "ProductDetail"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserHome",
          "items": [
            "UserHome"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Cart",
          "items": [
            "Cart"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserProduct",
          "items": [
            "UserProduct"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter as Router",
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/CartContext",
          "items": [
            "CartProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./components/Footer",
          "items": [
            "Footer"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "71f69353452e",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 48,
    "metadata": {
      "total_lines": 48,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0dbb727bd2c1",
    "file_path": "Frontend/src/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "664c3a393572",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "StrictMode"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-dom/client",
          "items": [
            "createRoot"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./index.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./App.jsx",
          "items": [
            "App"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "165410ac6187",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "259f26e3f750",
    "file_path": "Frontend/src/components/Footer.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3e71967695d4",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 4,
    "end_line": 4,
    "metadata": {
      "function_name": "Footer",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "78d6a8efab59",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Footer.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "01128ff5caca",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c0d90cc90299",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Navbar",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b1bd4586db29",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Navbar.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "7a7bb02b537b",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "339c9ac50f7b",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "AddProducts",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5439cd6ea3",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f164f8b47a98",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./AddProducts.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ImageUploader",
          "items": [
            "ImageUploader"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "138c3aca1211",
    "file_path": "Frontend/src/Pages/Cart.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e7beb6b3ef69",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "Cart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0bdf4a3cfa42",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "fetchCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "070348445d62",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 21,
    "end_line": 21,
    "metadata": {
      "function_name": "groupByProduct",
      "parameters": [
        "items"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b803899a396e",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 36,
    "end_line": 36,
    "metadata": {
      "function_name": "reduceQuantity",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "50169d224934",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 42,
    "end_line": 42,
    "metadata": {
      "function_name": "deleteProduct",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb5bd96b87ab",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Cart.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "556ef1af9ac7",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "CartProvider",
      "parameters": [
        "{ children }"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "53acf3505fdf",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [
        "product"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "bea1be21c768",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 22,
    "end_line": 22,
    "metadata": {
      "function_name": "useCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3d9b102f8d5d",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "createContext",
            "useState",
            "useContext"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "24936b882742",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "273332ddca53",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f8536fc9158a",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "6c3994d19fbe",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Home.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "a826b13adc20",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "ImageUploader",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "adacf7966fbe",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "onUploadSuccess",
      "parameters": [
        "res"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b7aa538f660b",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 11,
    "end_line": 11,
    "metadata": {
      "function_name": "onUploadError",
      "parameters": [
        "err"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "45d493f00ff1",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "imagekitio-react",
          "items": [
            "IKContext",
            "IKUpload"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "4dbd45181666",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 36,
    "metadata": {
      "total_lines": 36,
      "complexity_score": 3,
      "entry_points": [
        "default_export"
      ],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7eadb38334fa",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Login",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab014c735a3d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3b5bcba56c7d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Login.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2c682190a42f",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "07bc97759310",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "f382c23d88dd",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ProductDetail.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "38b4e00622ed",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "084501a9e80e",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "79c501b6830c",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserHome.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "ae6f4936efc8",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0ab1ed2b84cd",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 19,
    "end_line": 19,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "296c64989e4f",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleAddToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "65fb31efec89",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 35,
    "end_line": 35,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2a8b961d3554",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserProduct.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  }
]


================================================
FILE: temp_consistency_test_2/project_structure.json
================================================
{
  "Backend/package.json": {
    "language": "unknown",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/server.js": {
    "language": "javascript",
    "total_lines": 9,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/index.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/productDetail.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/ProductForm.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/app.js": {
    "language": "javascript",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/db/db.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/cart.model.js": {
    "language": "javascript",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/product.model.js": {
    "language": "javascript",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/user.model.js": {
    "language": "javascript",
    "total_lines": 25,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/cart.router.js": {
    "language": "javascript",
    "total_lines": 68,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/index.router.js": {
    "language": "javascript",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/login.router.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/product.router.js": {
    "language": "javascript",
    "total_lines": 126,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/user.router.js": {
    "language": "javascript",
    "total_lines": 81,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/README.md": {
    "language": "unknown",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/eslint.config.js": {
    "language": "javascript",
    "total_lines": 29,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/index.html": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/package.json": {
    "language": "unknown",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/vite.config.js": {
    "language": "javascript",
    "total_lines": 7,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/App.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/App.jsx": {
    "language": "javascript",
    "total_lines": 48,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/index.css": {
    "language": "unknown",
    "total_lines": 11,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/main.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.css": {
    "language": "unknown",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/components/Navbar.css": {
    "language": "unknown",
    "total_lines": 80,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Navbar.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/AddProducts.css": {
    "language": "unknown",
    "total_lines": 69,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/AddProducts.jsx": {
    "language": "javascript",
    "total_lines": 105,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Cart.css": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Cart.jsx": {
    "language": "javascript",
    "total_lines": 112,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/CartContext.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.css": {
    "language": "unknown",
    "total_lines": 128,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.jsx": {
    "language": "javascript",
    "total_lines": 52,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ImageUploader.jsx": {
    "language": "javascript",
    "total_lines": 36,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Login.css": {
    "language": "unknown",
    "total_lines": 62,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Login.jsx": {
    "language": "javascript",
    "total_lines": 55,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ProductDetail.css": {
    "language": "unknown",
    "total_lines": 127,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/ProductDetail.jsx": {
    "language": "javascript",
    "total_lines": 59,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserHome.css": {
    "language": "unknown",
    "total_lines": 186,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserHome.jsx": {
    "language": "javascript",
    "total_lines": 65,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserProduct.css": {
    "language": "unknown",
    "total_lines": 137,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserProduct.jsx": {
    "language": "javascript",
    "total_lines": 78,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  }
}


================================================
FILE: temp_consistency_test_3/chunks_metadata.json
================================================
[
  {
    "chunk_id": "67025e64a52b",
    "file_path": "Backend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "691e32ecc8cc",
    "file_path": "Backend/server.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 9,
    "metadata": {
      "total_lines": 9,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "4d508d8c3cfd",
    "file_path": "Backend/public/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8c84170a71ba",
    "file_path": "Backend/public/productDetail.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "9ec8f9391c2a",
    "file_path": "Backend/public/ProductForm.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8dcb12fead7a",
    "file_path": "Backend/src/app.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "62ffc1f1a33a",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 3,
    "end_line": 3,
    "metadata": {
      "function_name": "connect",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "4fb201893988",
    "file_path": "Backend/src/db/db.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 1,
      "entry_points": [],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "5fe7969b2835",
    "file_path": "Backend/src/models/cart.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d9449efdabd5",
    "file_path": "Backend/src/models/product.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 24,
    "metadata": {
      "total_lines": 24,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "a683d430351d",
    "file_path": "Backend/src/models/user.model.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 25,
    "metadata": {
      "total_lines": 25,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "08dd729142ca",
    "file_path": "Backend/src/routes/index.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "ee45bd1ff134",
    "file_path": "Backend/src/routes/login.router.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "121b43821afe",
    "file_path": "Frontend/README.md",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d0433f5bc5ff",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "@eslint/js",
          "items": [
            "js"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "globals",
          "items": [
            "globals"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-hooks",
          "items": [
            "reactHooks"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint-plugin-react-refresh",
          "items": [
            "reactRefresh"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "eslint/config",
          "items": [
            "defineConfig",
            "globalIgnores"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "94d42860dd79",
    "file_path": "Frontend/eslint.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 29,
    "metadata": {
      "total_lines": 29,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "271ef0c96d71",
    "file_path": "Frontend/index.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 13,
    "metadata": {
      "total_lines": 13,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "bd75660c61cd",
    "file_path": "Frontend/package.json",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 31,
    "metadata": {
      "total_lines": 31,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "90c2f169ec23",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "vite",
          "items": [
            "defineConfig"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "@vitejs/plugin-react",
          "items": [
            "react"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "27669808453d",
    "file_path": "Frontend/vite.config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 7,
    "metadata": {
      "total_lines": 7,
      "complexity_score": 0,
      "entry_points": [
        "default_export"
      ],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "67671a0eda01",
    "file_path": "Frontend/src/App.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c3cd7de0e431",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "App",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "74150ecad46f",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 15,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "remixicon/fonts/remixicon.css",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/AddProducts",
          "items": [
            "AddProducts"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/Home",
          "items": [
            "Home"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/ProductDetail",
          "items": [
            "ProductDetail"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserHome",
          "items": [
            "UserHome"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Cart",
          "items": [
            "Cart"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/Login",
          "items": [
            "Login"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./Pages/UserProduct",
          "items": [
            "UserProduct"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter as Router",
            "Routes",
            "Route"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Pages/CartContext",
          "items": [
            "CartProvider"
          ],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./components/Footer",
          "items": [
            "Footer"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "71f69353452e",
    "file_path": "Frontend/src/App.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 48,
    "metadata": {
      "total_lines": 48,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "0dbb727bd2c1",
    "file_path": "Frontend/src/index.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 11,
    "metadata": {
      "total_lines": 11,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "664c3a393572",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "StrictMode"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-dom/client",
          "items": [
            "createRoot"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "BrowserRouter"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./index.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "./App.jsx",
          "items": [
            "App"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "165410ac6187",
    "file_path": "Frontend/src/main.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "259f26e3f750",
    "file_path": "Frontend/src/components/Footer.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3e71967695d4",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 4,
    "end_line": 4,
    "metadata": {
      "function_name": "Footer",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "78d6a8efab59",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Footer.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "01128ff5caca",
    "file_path": "Frontend/src/components/Footer.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "total_lines": 12,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "c0d90cc90299",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Navbar",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b1bd4586db29",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Navbar.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "7a7bb02b537b",
    "file_path": "Frontend/src/components/Navbar.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 1,
      "entry_points": [
        "default_export"
      ],
      "function_count": 1,
      "class_count": 0
    }
  },
  {
    "chunk_id": "339c9ac50f7b",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "AddProducts",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "fc5439cd6ea3",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f164f8b47a98",
    "file_path": "Frontend/src/Pages/AddProducts.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./AddProducts.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ImageUploader",
          "items": [
            "ImageUploader"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "138c3aca1211",
    "file_path": "Frontend/src/Pages/Cart.css",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 16,
    "metadata": {
      "total_lines": 16,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "e7beb6b3ef69",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "Cart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0bdf4a3cfa42",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "fetchCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "070348445d62",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 21,
    "end_line": 21,
    "metadata": {
      "function_name": "groupByProduct",
      "parameters": [
        "items"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b803899a396e",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 36,
    "end_line": 36,
    "metadata": {
      "function_name": "reduceQuantity",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "50169d224934",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 42,
    "end_line": 42,
    "metadata": {
      "function_name": "deleteProduct",
      "parameters": [
        "productId"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "eb5bd96b87ab",
    "file_path": "Frontend/src/Pages/Cart.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Cart.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "556ef1af9ac7",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "CartProvider",
      "parameters": [
        "{ children }"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "53acf3505fdf",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [
        "product"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "bea1be21c768",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 22,
    "end_line": 22,
    "metadata": {
      "function_name": "useCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3d9b102f8d5d",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "createContext",
            "useState",
            "useContext"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "24936b882742",
    "file_path": "Frontend/src/Pages/CartContext.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 22,
    "metadata": {
      "total_lines": 22,
      "complexity_score": 3,
      "entry_points": [],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "273332ddca53",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "f8536fc9158a",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "6c3994d19fbe",
    "file_path": "Frontend/src/Pages/Home.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Home.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "a826b13adc20",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 5,
    "end_line": 5,
    "metadata": {
      "function_name": "ImageUploader",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "adacf7966fbe",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "onUploadSuccess",
      "parameters": [
        "res"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b7aa538f660b",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 11,
    "end_line": 11,
    "metadata": {
      "function_name": "onUploadError",
      "parameters": [
        "err"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "45d493f00ff1",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react",
          "items": [
            "React"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "imagekitio-react",
          "items": [
            "IKContext",
            "IKUpload"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "4dbd45181666",
    "file_path": "Frontend/src/Pages/ImageUploader.jsx",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 36,
    "metadata": {
      "total_lines": 36,
      "complexity_score": 3,
      "entry_points": [
        "default_export"
      ],
      "function_count": 3,
      "class_count": 0
    }
  },
  {
    "chunk_id": "7eadb38334fa",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 6,
    "end_line": 6,
    "metadata": {
      "function_name": "Login",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "ab014c735a3d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "handleSubmit",
      "parameters": [
        "e"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "3b5bcba56c7d",
    "file_path": "Frontend/src/Pages/Login.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 2,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useNavigate"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./Login.css",
          "items": [],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "2c682190a42f",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 7,
    "end_line": 7,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "07bc97759310",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 18,
    "end_line": 18,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "f382c23d88dd",
    "file_path": "Frontend/src/Pages/ProductDetail.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 3,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./ProductDetail.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "38b4e00622ed",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 8,
    "end_line": 8,
    "metadata": {
      "function_name": "Home",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "084501a9e80e",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 15,
    "end_line": 15,
    "metadata": {
      "function_name": "getData",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "79c501b6830c",
    "file_path": "Frontend/src/Pages/UserHome.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 4,
    "metadata": {
      "imports": [
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserHome.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "../components/Navbar",
          "items": [
            "Navbar"
          ],
          "alias": null,
          "is_relative": true
        }
      ]
    }
  },
  {
    "chunk_id": "ae6f4936efc8",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 10,
    "end_line": 10,
    "metadata": {
      "function_name": "addToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "0ab1ed2b84cd",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 19,
    "end_line": 19,
    "metadata": {
      "function_name": "ProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "296c64989e4f",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 29,
    "end_line": 29,
    "metadata": {
      "function_name": "handleAddToCart",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "65fb31efec89",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 35,
    "end_line": 35,
    "metadata": {
      "function_name": "getProductDetail",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": true,
      "return_type": null
    }
  },
  {
    "chunk_id": "2a8b961d3554",
    "file_path": "Frontend/src/Pages/UserProduct.jsx",
    "chunk_type": "imports",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "imports": [
        {
          "module": "react-router-dom",
          "items": [
            "useParams"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "./UserProduct.css",
          "items": [],
          "alias": null,
          "is_relative": true
        },
        {
          "module": "axios",
          "items": [
            "axios"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "react-router-dom",
          "items": [
            "Link"
          ],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  }
]


================================================
FILE: temp_consistency_test_3/project_structure.json
================================================
{
  "Backend/package.json": {
    "language": "unknown",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/server.js": {
    "language": "javascript",
    "total_lines": 9,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/index.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/productDetail.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/public/ProductForm.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/app.js": {
    "language": "javascript",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/db/db.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/cart.model.js": {
    "language": "javascript",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/product.model.js": {
    "language": "javascript",
    "total_lines": 24,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/models/user.model.js": {
    "language": "javascript",
    "total_lines": 25,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/cart.router.js": {
    "language": "javascript",
    "total_lines": 68,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/index.router.js": {
    "language": "javascript",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/login.router.js": {
    "language": "javascript",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/product.router.js": {
    "language": "javascript",
    "total_lines": 126,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Backend/src/routes/user.router.js": {
    "language": "javascript",
    "total_lines": 81,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/README.md": {
    "language": "unknown",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/eslint.config.js": {
    "language": "javascript",
    "total_lines": 29,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/index.html": {
    "language": "unknown",
    "total_lines": 13,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/package.json": {
    "language": "unknown",
    "total_lines": 31,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/vite.config.js": {
    "language": "javascript",
    "total_lines": 7,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/App.css": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/App.jsx": {
    "language": "javascript",
    "total_lines": 48,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/index.css": {
    "language": "unknown",
    "total_lines": 11,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/main.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.css": {
    "language": "unknown",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Footer.jsx": {
    "language": "javascript",
    "total_lines": 12,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/components/Navbar.css": {
    "language": "unknown",
    "total_lines": 80,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/components/Navbar.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 1,
    "function_count": 1,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/AddProducts.css": {
    "language": "unknown",
    "total_lines": 69,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/AddProducts.jsx": {
    "language": "javascript",
    "total_lines": 105,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Cart.css": {
    "language": "unknown",
    "total_lines": 16,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Cart.jsx": {
    "language": "javascript",
    "total_lines": 112,
    "complexity_score": 5,
    "function_count": 5,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/CartContext.jsx": {
    "language": "javascript",
    "total_lines": 22,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.css": {
    "language": "unknown",
    "total_lines": 128,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Home.jsx": {
    "language": "javascript",
    "total_lines": 52,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ImageUploader.jsx": {
    "language": "javascript",
    "total_lines": 36,
    "complexity_score": 3,
    "function_count": 3,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/Login.css": {
    "language": "unknown",
    "total_lines": 62,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/Login.jsx": {
    "language": "javascript",
    "total_lines": 55,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/ProductDetail.css": {
    "language": "unknown",
    "total_lines": 127,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/ProductDetail.jsx": {
    "language": "javascript",
    "total_lines": 59,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserHome.css": {
    "language": "unknown",
    "total_lines": 186,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserHome.jsx": {
    "language": "javascript",
    "total_lines": 65,
    "complexity_score": 2,
    "function_count": 2,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  },
  "Frontend/src/Pages/UserProduct.css": {
    "language": "unknown",
    "total_lines": 137,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "Frontend/src/Pages/UserProduct.jsx": {
    "language": "javascript",
    "total_lines": 78,
    "complexity_score": 4,
    "function_count": 4,
    "class_count": 0,
    "entry_points": [
      "default_export"
    ]
  }
}


================================================
FILE: temp_rag_storage/chunks_metadata.json
================================================
[
  {
    "chunk_id": "7708a4e85819",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 27,
    "end_line": 34,
    "metadata": {
      "function_name": "get_db",
      "parameters": [],
      "calls": [
        "print"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "7a26a5dde44c",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 37,
    "end_line": 116,
    "metadata": {
      "function_name": "init_db",
      "parameters": [],
      "calls": [
        "print",
        "print",
        "str"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "856738b883ec",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 155,
    "end_line": 156,
    "metadata": {
      "function_name": "index",
      "parameters": [],
      "calls": [
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "acb73c979d70",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 159,
    "end_line": 222,
    "metadata": {
      "function_name": "register",
      "parameters": [],
      "calls": [
        "RegisterForm",
        "render_template",
        "get_db",
        "flash",
        "redirect",
        "flash",
        "render_template",
        "flash",
        "render_template",
        "flash",
        "render_template",
        "print",
        "flash",
        "render_template"
      ],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "31ea9b91f59f",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 224,
    "end_line": 230,
    "metadata": {
      "function_name": "generate_did",
      "parameters": [],
      "calls": [
        "str"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b5835fa853e0",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 232,
    "end_line": 262,
    "metadata": {
      "function_name": "generate_verifiable_credential",
      "parameters": [
        "user_data"
      ],
      "calls": [],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b99e74b48785",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 265,
    "end_line": 319,
    "metadata": {
      "function_name": "login",
      "parameters": [],
      "calls": [
        "LoginForm",
        "render_template",
        "get_db",
        "flash",
        "redirect",
        "flash",
        "generate_did",
        "get_db",
        "url_for",
        "generate_verifiable_credential",
        "get_db"
      ],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "6544f011d0a0",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 322,
    "end_line": 389,
    "metadata": {
      "function_name": "dashboard",
      "parameters": [],
      "calls": [
        "flash",
        "redirect",
        "get_db",
        "render_template",
        "flash",
        "redirect",
        "flash",
        "redirect",
        "print",
        "flash",
        "redirect"
      ],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "a3f669fd5422",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 392,
    "end_line": 425,
    "metadata": {
      "function_name": "profile",
      "parameters": [],
      "calls": [
        "flash",
        "redirect",
        "get_db",
        "flash",
        "redirect",
        "flash",
        "redirect",
        "render_template",
        "print",
        "flash",
        "redirect"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "4d95a4fa2633",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 428,
    "end_line": 452,
    "metadata": {
      "function_name": "digital_identity",
      "parameters": [],
      "calls": [
        "get_db",
        "flash",
        "redirect",
        "flash",
        "redirect",
        "render_template"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "a134faa02d5c",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 455,
    "end_line": 459,
    "metadata": {
      "function_name": "land_registry",
      "parameters": [],
      "calls": [
        "render_template",
        "flash",
        "redirect"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "00bc1ba2860a",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 462,
    "end_line": 466,
    "metadata": {
      "function_name": "transactions",
      "parameters": [],
      "calls": [
        "render_template",
        "flash",
        "redirect"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "b3f6c7e998cd",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 469,
    "end_line": 473,
    "metadata": {
      "function_name": "documents",
      "parameters": [],
      "calls": [
        "render_template",
        "flash",
        "redirect"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "e9d490ddbad8",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 476,
    "end_line": 480,
    "metadata": {
      "function_name": "settings",
      "parameters": [],
      "calls": [
        "render_template",
        "flash",
        "redirect"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "2364273ce0c6",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 483,
    "end_line": 486,
    "metadata": {
      "function_name": "logout",
      "parameters": [],
      "calls": [
        "flash",
        "redirect"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "719b8a1715a6",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 489,
    "end_line": 513,
    "metadata": {
      "function_name": "test_db",
      "parameters": [],
      "calls": [
        "get_db",
        "render_template",
        "str"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "7145406e0fed",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 515,
    "end_line": 520,
    "metadata": {
      "function_name": "login_required",
      "parameters": [
        "f"
      ],
      "calls": [
        "f",
        "redirect",
        "url_for"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "abf4b8ccd1ff",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 134,
    "end_line": 147,
    "metadata": {
      "function_name": "validate_email",
      "parameters": [
        "self",
        "field"
      ],
      "calls": [
        "get_db",
        "print",
        "ValidationError",
        "ValidationError"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "093899716fd6",
    "file_path": "app.py",
    "chunk_type": "function",
    "language": "python",
    "start_line": 516,
    "end_line": 519,
    "metadata": {
      "function_name": "decorated_function",
      "parameters": [],
      "calls": [
        "f",
        "redirect",
        "url_for"
      ],
      "complexity": "low",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "66577f0e8a41",
    "file_path": "app.py",
    "chunk_type": "class",
    "language": "python",
    "start_line": 121,
    "end_line": 147,
    "metadata": {
      "class_name": "RegisterForm",
      "methods": [
        "validate_email"
      ],
      "inherits_from": [
        "FlaskForm"
      ],
      "implements": [],
      "is_abstract": false
    }
  },
  {
    "chunk_id": "a3d7c50dca80",
    "file_path": "app.py",
    "chunk_type": "method",
    "language": "python",
    "start_line": 134,
    "end_line": 147,
    "metadata": {
      "class_name": "RegisterForm",
      "method_name": "validate_email",
      "parameters": [
        "self",
        "field"
      ],
      "calls": [
        "get_db",
        "print",
        "ValidationError",
        "ValidationError"
      ],
      "complexity": "low",
      "is_async": false,
      "visibility": "public"
    }
  },
  {
    "chunk_id": "62abc1dbce95",
    "file_path": "app.py",
    "chunk_type": "class",
    "language": "python",
    "start_line": 149,
    "end_line": 152,
    "metadata": {
      "class_name": "LoginForm",
      "methods": [],
      "inherits_from": [
        "FlaskForm"
      ],
      "implements": [],
      "is_abstract": false
    }
  },
  {
    "chunk_id": "51a6acf9c601",
    "file_path": "app.py",
    "chunk_type": "imports",
    "language": "python",
    "start_line": 1,
    "end_line": 12,
    "metadata": {
      "imports": [
        {
          "module": "flask",
          "items": [
            "Flask",
            "render_template",
            "redirect",
            "url_for",
            "session",
            "flash",
            "request",
            "jsonify"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "flask_wtf",
          "items": [
            "FlaskForm"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "wtforms",
          "items": [
            "StringField",
            "PasswordField",
            "SubmitField",
            "TextAreaField"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "wtforms.validators",
          "items": [
            "DataRequired",
            "Email",
            "ValidationError"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "bcrypt",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "MySQLdb",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "MySQLdb.cursors",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "uuid",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "json",
          "items": [],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "jwt",
          "items": [],
          "alias": "PyJWT",
          "is_relative": false
        },
        {
          "module": "datetime",
          "items": [
            "datetime",
            "timedelta"
          ],
          "alias": null,
          "is_relative": false
        },
        {
          "module": "secrets",
          "items": [],
          "alias": null,
          "is_relative": false
        }
      ]
    }
  },
  {
    "chunk_id": "dcf6176b6cec",
    "file_path": "requirements.txt",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 10,
    "metadata": {
      "total_lines": 10,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "a12d10e26502",
    "file_path": "truffle-config.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 15,
    "metadata": {
      "total_lines": 15,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "3b8fe67096ad",
    "file_path": "contracts/LandRegistry.sol",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 33,
    "metadata": {
      "total_lines": 33,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "57f95b4305ec",
    "file_path": "contracts/.gitkeep",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "8d26551f0b02",
    "file_path": "migrations/2_deploy_landregistry.js",
    "chunk_type": "file",
    "language": "javascript",
    "start_line": 1,
    "end_line": 5,
    "metadata": {
      "total_lines": 5,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "613fe3045caf",
    "file_path": "migrations/.gitkeep",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "2172e5fd73df",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 12,
    "end_line": 12,
    "metadata": {
      "function_name": "validateEmail",
      "parameters": [
        "email"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "a26888cb57b5",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 17,
    "end_line": 17,
    "metadata": {
      "function_name": "validatePassword",
      "parameters": [
        "password"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "6b077090cd38",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 21,
    "end_line": 21,
    "metadata": {
      "function_name": "showError",
      "parameters": [
        "element",
        "message"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "e11609fbef87",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 26,
    "end_line": 26,
    "metadata": {
      "function_name": "hideError",
      "parameters": [
        "element"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "eea0bd22f864",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 31,
    "end_line": 31,
    "metadata": {
      "function_name": "showLoading",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "41ec990e4b39",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 37,
    "end_line": 37,
    "metadata": {
      "function_name": "hideLoading",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "83287b71f5ba",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 248,
    "end_line": 248,
    "metadata": {
      "function_name": "updateThemeIcon",
      "parameters": [
        "theme"
      ],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "67fa9de7f1dd",
    "file_path": "static/script.js",
    "chunk_type": "function",
    "language": "javascript",
    "start_line": 253,
    "end_line": 253,
    "metadata": {
      "function_name": "animateOnScroll",
      "parameters": [],
      "calls": [],
      "complexity": "medium",
      "is_async": false,
      "return_type": null
    }
  },
  {
    "chunk_id": "1329f8984d95",
    "file_path": "static/script.js",
    "chunk_type": "class",
    "language": "javascript",
    "start_line": 252,
    "end_line": 252,
    "metadata": {
      "class_name": "to",
      "methods": [],
      "inherits_from": [],
      "implements": [],
      "is_abstract": false
    }
  },
  {
    "chunk_id": "e50048253fa0",
    "file_path": "templates/documents.html",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 14,
    "metadata": {
      "total_lines": 14,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  },
  {
    "chunk_id": "d044ab7cef78",
    "file_path": "test/.gitkeep",
    "chunk_type": "file",
    "language": "unknown",
    "start_line": 1,
    "end_line": 1,
    "metadata": {
      "total_lines": 1,
      "complexity_score": 0,
      "entry_points": [],
      "function_count": 0,
      "class_count": 0
    }
  }
]


================================================
FILE: temp_rag_storage/project_structure.json
================================================
{
  "README.md": {
    "language": "unknown",
    "total_lines": 77,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "app.py": {
    "language": "python",
    "total_lines": 523,
    "complexity_score": 23,
    "function_count": 19,
    "class_count": 2,
    "entry_points": []
  },
  "requirements.txt": {
    "language": "unknown",
    "total_lines": 10,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "truffle-config.js": {
    "language": "javascript",
    "total_lines": 15,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "contracts/LandRegistry.sol": {
    "language": "unknown",
    "total_lines": 33,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "contracts/.gitkeep": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "migrations/2_deploy_landregistry.js": {
    "language": "javascript",
    "total_lines": 5,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "migrations/.gitkeep": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "static/script.js": {
    "language": "javascript",
    "total_lines": 279,
    "complexity_score": 10,
    "function_count": 8,
    "class_count": 1,
    "entry_points": []
  },
  "static/styles.css": {
    "language": "unknown",
    "total_lines": 1041,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/base.html": {
    "language": "unknown",
    "total_lines": 100,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/chatbot.html": {
    "language": "unknown",
    "total_lines": 702,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/dashboard.html": {
    "language": "unknown",
    "total_lines": 397,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/digital_identity.html": {
    "language": "unknown",
    "total_lines": 169,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/documents.html": {
    "language": "unknown",
    "total_lines": 14,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/index.html": {
    "language": "unknown",
    "total_lines": 350,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/land_registry.html": {
    "language": "unknown",
    "total_lines": 174,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/login.html": {
    "language": "unknown",
    "total_lines": 236,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/profile.html": {
    "language": "unknown",
    "total_lines": 84,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/register.html": {
    "language": "unknown",
    "total_lines": 266,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/settings.html": {
    "language": "unknown",
    "total_lines": 124,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/test_db.html": {
    "language": "unknown",
    "total_lines": 51,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "templates/transactions.html": {
    "language": "unknown",
    "total_lines": 205,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  },
  "test/.gitkeep": {
    "language": "unknown",
    "total_lines": 1,
    "complexity_score": 0,
    "function_count": 0,
    "class_count": 0,
    "entry_points": []
  }
}


================================================
FILE: .kiro/specs/ai-project-analyzer/design.md
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x9d in position 1179: character maps to <undefined>


================================================
FILE: .kiro/specs/ai-project-analyzer/requirements.md
================================================
# Requirements Document

## Introduction

The AI Project Analyzer is a web application that enables developers to analyze GitHub repositories using AI-powered insights. The system ingests public or private repositories, creates a RAG (Retrieval-Augmented Generation) knowledge base, and provides both visual flowcharts and conversational AI interfaces for exploring codebases. The application integrates with GPT OSS via Hugging Face to deliver semantic search capabilities and intelligent code analysis.

## Requirements

### Requirement 1

**User Story:** As a developer, I want to input a GitHub repository URL and have the system analyze the entire codebase, so that I can understand the project structure and relationships.

#### Acceptance Criteria

1. WHEN a user provides a public GitHub repository URL THEN the system SHALL clone and parse the repository content
2. WHEN a user provides a private GitHub repository URL THEN the system SHALL prompt for authentication credentials (token or SSH key)
3. WHEN repository ingestion begins THEN the system SHALL display progress indicators showing parsing status
4. WHEN ingestion completes THEN the system SHALL confirm successful analysis and display available features
5. IF a repository URL is invalid or inaccessible THEN the system SHALL display clear error messages with suggested corrections

### Requirement 2

**User Story:** As a project maintainer, I want to ask natural language questions about my repository and receive AI-generated answers, so that I can quickly understand code functionality and architecture.

#### Acceptance Criteria

1. WHEN a repository has been analyzed THEN the system SHALL create a RAG knowledge base from all code files and documentation
2. WHEN a user submits a natural language question THEN the system SHALL use GPT OSS via Hugging Face to generate contextual answers
3. WHEN answering questions THEN the system SHALL reference specific files, functions, or code sections in the response
4. WHEN no relevant information is found THEN the system SHALL indicate the limitation and suggest alternative queries
5. WHEN multiple relevant code sections exist THEN the system SHALL provide comprehensive answers referencing all applicable parts

### Requirement 3

**User Story:** As a team member, I want to securely analyze private repositories without exposing sensitive credentials, so that I can maintain security while gaining insights.

#### Acceptance Criteria

1. WHEN handling private repositories THEN the system SHALL accept GitHub personal access tokens through secure input fields
2. WHEN credentials are provided THEN the system SHALL store them only in memory or secure environment variables
3. WHEN analysis completes THEN the system SHALL clear all authentication data from memory
4. WHEN invalid credentials are provided THEN the system SHALL display authentication errors without exposing credential details
5. IF SSH key authentication is used THEN the system SHALL support standard SSH key formats and secure key handling

### Requirement 4

**User Story:** As a new contributor, I want to see an interactive visual flowchart of the repository structure, so that I can understand how files and components relate to each other.

#### Acceptance Criteria

1. WHEN repository analysis completes THEN the system SHALL generate an interactive flowchart showing file and module relationships
2. WHEN a user clicks on a flowchart node THEN the system SHALL display the corresponding source code or file content
3. WHEN hovering over nodes THEN the system SHALL show AI-generated summaries of the component's purpose
4. WHEN the flowchart is complex THEN the system SHALL provide zoom, pan, and filtering capabilities
5. WHEN displaying relationships THEN the system SHALL show imports, dependencies, function calls, and class inheritance

### Requirement 5

**User Story:** As a developer, I want the analysis to stay current with repository changes, so that the insights remain accurate over time.

#### Acceptance Criteria

1. WHEN a user requests re-analysis THEN the system SHALL update the RAG knowledge base with current repository state
2. WHEN repository changes are detected THEN the system SHALL offer automatic re-analysis options
3. WHEN re-analysis occurs THEN the system SHALL preserve user session data and preferences
4. WHEN updates complete THEN the system SHALL refresh the flowchart and knowledge base automatically
5. IF webhook integration is configured THEN the system SHALL trigger re-analysis on repository push events

### Requirement 6

**User Story:** As a user, I want a clean web interface to interact with both the AI chat and visual flowchart, so that I can efficiently explore repositories.

#### Acceptance Criteria

1. WHEN accessing the application THEN the system SHALL provide a responsive web interface compatible with modern browsers
2. WHEN using the chat interface THEN the system SHALL display conversation history and allow follow-up questions
3. WHEN viewing flowcharts THEN the system SHALL provide intuitive navigation controls and clear visual hierarchy
4. WHEN switching between features THEN the system SHALL maintain context and allow seamless transitions
5. WHEN on mobile devices THEN the system SHALL adapt the interface for touch interaction and smaller screens

### Requirement 7

**User Story:** As a security-conscious user, I want all sensitive data handled according to industry standards, so that my credentials and code remain protected.

#### Acceptance Criteria

1. WHEN handling authentication THEN the system SHALL use HTTPS for all credential transmission
2. WHEN storing temporary data THEN the system SHALL encrypt sensitive information at rest
3. WHEN processing private repositories THEN the system SHALL not log or persist repository content unnecessarily
4. WHEN errors occur THEN the system SHALL not expose sensitive information in error messages or logs
5. WHEN sessions end THEN the system SHALL clear all authentication tokens and temporary repository data


================================================
FILE: .kiro/specs/ai-project-analyzer/tasks.md
================================================
# Implementation Plan

- [ ] 1. Set up project dependencies and core infrastructure





  - Install required npm packages: @octokit/rest (GitHub API), @huggingface/inference, Redis, D3.js
  - Configure environment variables for GitHub API, Hugging Face API keys
  - Create service directory structure optimized for API-only processing (no file storage)
  - _Requirements: 7.1, 7.2_

- [ ] 2. Implement GitHub authentication and repository access
- [x] 2.1 Create GitHub authentication service



  - Write GitHubAuthService class with token validation and SSH key support
  - Implement secure credential handling with in-memory storage only
  - Create unit tests for authentication flows and error handling
  - _Requirements: 1.2, 3.1, 3.2, 3.3_

- [x] 2.2 Implement repository validation and access checking




  - Code repository URL validation and accessibility verification
  - Write functions to check public/private repository permissions
  - Create unit tests for various repository access scenarios



  - _Requirements: 1.1, 1.5_

- [ ] 3. Build repository ingestion and parsing system
- [ ] 3.1 Create GitHub API streaming service
  - Implement GitHub API client with rate limiting and error handling
  - Write file streaming functions that fetch content directly from GitHub API
  - Create progress tracking for API-based repository analysis
  - _Requirements: 1.1, 1.3, 7.3_

- [ ] 3.2 Implement code structure parsing from API


  - Write AST parsers that work with streamed file content from GitHub API
  - Create dependency mapping by parsing package.json, requirements.txt via API
  - Implement repository tree analysis using GitHub's tree API endpoint
  - _Requirements: 4.5, 1.1_

- [ ] 3.3 Build repository analysis orchestrator
  - Create RepositoryService class that coordinates API streaming and parsing
  - Implement parallel file processing with GitHub API rate limit management
  - Write integration tests for complete API-based repository analysis workflow
  - _Requirements: 1.3, 1.4_

- [ ] 4. Implement AI processing and RAG system
- [ ] 4.1 Create Hugging Face GPT OSS integration
  - Write AIService class with Hugging Face API client
  - Implement error handling and retry logic for API failures
  - Create unit tests for AI service integration
  - _Requirements: 2.2, 2.4_

- [ ] 4.2 Build RAG knowledge base creation from GitHub API
  - Implement streaming document embedding generation from GitHub API responses
  - Create vector storage and indexing system that processes files as they stream
  - Write functions to intelligently chunk files during API streaming
  - _Requirements: 2.1, 2.5_

- [ ] 4.3 Implement semantic query processing
  - Create natural language query handler with context retrieval
  - Write response generation with source code references
  - Implement confidence scoring and fallback responses
  - _Requirements: 2.2, 2.3, 2.4_

- [ ] 5. Build interactive flowchart visualization system
- [ ] 5.1 Create flowchart data generation
  - Write VisualizationService to convert AST data to flowchart nodes and edges
  - Implement relationship mapping for imports, function calls, and inheritance
  - Create layout algorithms for optimal node positioning
  - _Requirements: 4.1, 4.5_

- [ ] 5.2 Implement AI-powered node summaries
  - Integrate AI service to generate component summaries for flowchart nodes
  - Create caching system for generated summaries
  - Write functions to update summaries when code changes
  - _Requirements: 4.3_

- [ ] 5.3 Build interactive flowchart features
  - Implement zoom, pan, and filtering capabilities for complex graphs
  - Create click handlers for node navigation to source code
  - Write hover functionality for displaying AI summaries
  - _Requirements: 4.2, 4.3, 4.4_

- [ ] 6. Create web API endpoints
- [ ] 6.1 Implement repository analysis endpoints
  - Create POST /api/repositories/analyze endpoint for repository submission
  - Write GET /api/repositories/:id/status for analysis progress tracking
  - Implement DELETE /api/repositories/:id for cleanup operations
  - _Requirements: 1.1, 1.3, 1.4_

- [ ] 6.2 Build AI query endpoints
  - Create POST /api/repositories/:id/query for natural language questions
  - Write GET /api/repositories/:id/summaries for component summaries
  - Implement caching middleware for frequently asked questions
  - _Requirements: 2.2, 2.3_

- [ ] 6.3 Create visualization endpoints
  - Write GET /api/repositories/:id/flowchart for flowchart data
  - Implement PUT /api/repositories/:id/flowchart for layout updates
  - Create WebSocket endpoints for real-time flowchart updates
  - _Requirements: 4.1, 4.2_

- [ ] 7. Build frontend user interface
- [ ] 7.1 Create repository input interface
  - Build React components for repository URL input and credential forms
  - Implement secure credential input with no browser storage
  - Create progress indicators and status displays for analysis
  - _Requirements: 1.1, 1.2, 1.3, 3.1, 3.2_

- [ ] 7.2 Implement AI chat interface
  - Create conversational UI components for natural language queries
  - Build chat history display with source code references
  - Implement follow-up question suggestions and context preservation
  - _Requirements: 2.2, 2.3, 6.2_

- [ ] 7.3 Build interactive flowchart viewer
  - Create React components for flowchart rendering using D3.js or similar
  - Implement navigation controls, zoom, and filtering UI
  - Build click handlers for source code navigation and summary display
  - _Requirements: 4.1, 4.2, 4.3, 4.4, 6.1_

- [ ] 8. Implement repository update and re-analysis features
- [ ] 8.1 Create manual re-analysis functionality
  - Build UI controls for triggering repository re-analysis
  - Implement incremental update detection and processing
  - Create functions to preserve user session data during updates
  - _Requirements: 5.1, 5.3_

- [ ] 8.2 Implement automatic update detection
  - Create webhook endpoint for GitHub repository change notifications
  - Write scheduled job system for periodic repository checking
  - Implement smart update triggers based on change significance
  - _Requirements: 5.2, 5.5_

- [ ] 8.3 Build update notification system
  - Create real-time notifications for completed re-analysis
  - Implement UI updates for refreshed flowcharts and knowledge base
  - Write functions to maintain user context across updates
  - _Requirements: 5.4_

- [ ] 9. Implement security and performance optimizations
- [ ] 9.1 Add comprehensive security measures
  - Implement HTTPS enforcement and secure header middleware
  - Create input validation and sanitization for all endpoints
  - Write rate limiting and authentication middleware
  - _Requirements: 7.1, 7.4, 7.5_

- [ ] 9.2 Optimize performance and caching
  - Implement Redis caching for GitHub API responses and AI-generated content
  - Create intelligent batching for GitHub API requests to maximize rate limits
  - Write memory-efficient streaming processors that don't accumulate file content
  - _Requirements: 6.4_

- [ ] 9.3 Add monitoring and error handling
  - Create comprehensive error handling with user-friendly messages
  - Implement logging system that excludes sensitive information
  - Write health check endpoints and performance monitoring
  - _Requirements: 7.4, 7.5_

- [ ] 10. Create comprehensive testing suite
- [ ] 10.1 Write unit tests for all services
  - Create test suites for RepositoryService, AIService, and VisualizationService
  - Write mock implementations for external APIs (GitHub, Hugging Face)
  - Implement test fixtures with sample repositories and expected outputs
  - _Requirements: All requirements_

- [ ] 10.2 Build integration tests
  - Create end-to-end tests for complete repository analysis workflows
  - Write API endpoint tests with authentication and error scenarios
  - Implement frontend component tests with user interaction simulation
  - _Requirements: All requirements_

- [ ] 10.3 Add performance and security tests
  - Create load tests for concurrent repository analysis
  - Write security tests for credential handling and data protection
  - Implement memory usage and cleanup validation tests
  - _Requirements: 3.3, 7.1, 7.2, 7.3, 7.4, 7.5_


================================================
FILE: .kiro/specs/gitingest-integration/design.md
================================================
# Design Document

## Overview

The Gitingest Integration replaces the complex GitHub API streaming approach in the AI Project Analyzer with gitingest, a Python tool that converts Git repositories into LLM-optimized text format. This design maintains the existing system architecture while significantly simplifying repository ingestion and improving AI analysis quality through better structured input.

## Architecture

### High-Level Architecture

The integration modifies the existing system by replacing the GitHub API streaming layer with a gitingest processing service, while maintaining all other components:

```
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│   Web Frontend  │────│   API Gateway    │────│  Auth Service   │
└─────────────────┘    └──────────────────┘    └─────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────────┐
│                    Repository Service                           │
│  ┌─────────────────┐    ┌──────────────────┐                  │
│  │ GitHub API      │────│ Gitingest        │                  │
│  │ (validation)    │    │ Processing       │                  │
│  └─────────────────┘    └──────────────────┘                  │
└─────────────────────────────────────────────────────────────────┘
                                │
                                ▼
┌─────────────────┐    ┌──────────────────┐    ┌─────────────────┐
│   AI Service    │────│   RAG System     │────│ Vector Storage  │
│ (Hugging Face)  │    │                  │    │                 │
└─────────────────┘    └──────────────────┘    └─────────────────┘
                                │
                                ▼
┌─────────────────────────────────────────────────────────────────┐
│                 Visualization Service                           │
│  ┌─────────────────┐    ┌──────────────────┐                  │
│  │ Flowchart       │────│ Interactive      │                  │
│  │ Generator       │    │ Components       │                  │
│  └─────────────────┘    └──────────────────┘                  │
└─────────────────────────────────────────────────────────────────┘
```

### Integration Points

1. **Repository Service Enhancement**: Replaces GitHub API streaming with gitingest processing
2. **RAG System Optimization**: Leverages gitingest's structured output for better chunking
3. **Visualization Improvement**: Uses gitingest's comprehensive file mapping for accurate dependency graphs
4. **Security Preservation**: Maintains existing authentication and credential handling patterns

## Components and Interfaces

### GitingestProcessor

**Purpose**: Core service that handles gitingest execution and output processing

**Key Methods**:
```python
class GitingestProcessor:
    async def process_repository(self, repo_url: str, auth_config: AuthConfig) -> GitingestOutput
    async def validate_repository(self, repo_url: str) -> ValidationResult
    def parse_gitingest_output(self, raw_output: str) -> StructuredRepository
    def cleanup_temporary_files(self, process_id: str) -> None
```

**Interfaces**:
- Input: Repository URL, authentication credentials
- Output: Structured repository representation with file hierarchy and content
- Dependencies: gitingest Python package, subprocess management, temporary file handling

### RepositoryService (Enhanced)

**Purpose**: Orchestrates repository analysis using gitingest instead of GitHub API streaming

**Key Methods**:
```python
class RepositoryService:
    async def analyze_repository(self, repo_url: str, auth_config: AuthConfig) -> AnalysisResult
    async def get_analysis_progress(self, analysis_id: str) -> ProgressStatus
    def create_rag_documents(self, structured_repo: StructuredRepository) -> List[Document]
```

**Changes from Current Design**:
- Replaces GitHub API client with GitingestProcessor
- Simplifies file streaming logic
- Improves error handling for repository access issues
- Maintains existing progress tracking and caching mechanisms

### AuthenticationService (Unchanged)

**Purpose**: Handles GitHub authentication for both public and private repositories

**Integration**: Passes credentials to gitingest through environment variables or command-line arguments securely

### RAGService (Enhanced)

**Purpose**: Creates knowledge base from gitingest's structured output

**Key Enhancements**:
```python
class RAGService:
    def chunk_gitingest_output(self, structured_repo: StructuredRepository) -> List[Chunk]
    def create_embeddings_batch(self, chunks: List[Chunk]) -> List[Embedding]
    def build_file_hierarchy_index(self, structured_repo: StructuredRepository) -> HierarchyIndex
```

**Improvements**:
- Better chunking strategy using gitingest's file boundaries
- Improved context preservation through structured file hierarchy
- Enhanced metadata extraction from gitingest's comprehensive output

## Data Models

### GitingestOutput

```python
@dataclass
class GitingestOutput:
    repository_info: RepositoryInfo
    file_tree: FileTree
    content_blocks: List[ContentBlock]
    metadata: GitingestMetadata
    processing_stats: ProcessingStats
```

### StructuredRepository

```python
@dataclass
class StructuredRepository:
    repo_url: str
    files: Dict[str, FileContent]
    dependencies: List[Dependency]
    file_hierarchy: FileHierarchy
    language_stats: LanguageStats
    gitingest_metadata: GitingestMetadata
```

### ContentBlock

```python
@dataclass
class ContentBlock:
    file_path: str
    content: str
    language: str
    line_count: int
    size_bytes: int
    file_type: FileType
```

### ProcessingConfig

```python
@dataclass
class ProcessingConfig:
    include_patterns: List[str]
    exclude_patterns: List[str]
    max_file_size: int
    respect_gitignore: bool
    include_binary_files: bool
    auth_method: AuthMethod
```

## Error Handling

### Gitingest-Specific Errors

1. **Repository Access Errors**
   - Invalid repository URLs
   - Authentication failures
   - Network connectivity issues
   - Repository not found or private access denied

2. **Processing Errors**
   - Gitingest execution failures
   - Large repository timeout handling
   - Memory limitations for massive repositories
   - Corrupted or incomplete output

3. **Integration Errors**
   - Python environment issues
   - Gitingest package version conflicts
   - Temporary file system errors
   - Output parsing failures

### Error Recovery Strategies

```python
class ErrorRecoveryService:
    async def retry_with_smaller_scope(self, repo_url: str, config: ProcessingConfig) -> GitingestOutput
    async def fallback_to_api_streaming(self, repo_url: str) -> RepositoryData
    def diagnose_gitingest_failure(self, error: Exception) -> DiagnosticReport
```

## Testing Strategy

### Unit Testing

1. **GitingestProcessor Tests**
   - Mock gitingest execution with sample outputs
   - Test various repository types and sizes
   - Validate error handling for different failure scenarios
   - Test authentication credential passing

2. **Output Parsing Tests**
   - Test parsing of gitingest output format
   - Validate file hierarchy reconstruction
   - Test content extraction and metadata handling
   - Verify language detection and statistics

### Integration Testing

1. **End-to-End Repository Processing**
   - Test complete workflow from URL input to structured output
   - Validate with both public and private repositories
   - Test different authentication methods
   - Verify cleanup of temporary files and credentials

2. **RAG System Integration**
   - Test improved chunking with gitingest output
   - Validate embedding generation from structured content
   - Test query performance improvements
   - Verify file reference accuracy in AI responses

### Performance Testing

1. **Repository Size Scaling**
   - Test with repositories of varying sizes (small, medium, large)
   - Measure processing time improvements over GitHub API approach
   - Validate memory usage patterns
   - Test concurrent repository processing

2. **Comparison Benchmarks**
   - Compare gitingest vs GitHub API streaming performance
   - Measure AI analysis quality improvements
   - Test flowchart generation accuracy
   - Validate user experience improvements

## Security Considerations

### Credential Handling

1. **Environment Variable Management**
   - Pass GitHub tokens through secure environment variables
   - Clear environment variables after gitingest execution
   - Validate credential format before passing to gitingest

2. **Temporary File Security**
   - Create temporary directories with restricted permissions
   - Encrypt temporary files containing sensitive repository content
   - Implement secure cleanup procedures for all temporary artifacts

### Repository Content Protection

1. **Memory Management**
   - Process gitingest output in streaming fashion when possible
   - Avoid keeping complete repository content in memory longer than necessary
   - Implement secure memory clearing for sensitive content

2. **Logging and Monitoring**
   - Exclude repository content from application logs
   - Log only metadata and processing statistics
   - Implement audit trails for repository access without content exposure

## Deployment Considerations

### Python Environment

1. **Dependency Management**
   - Add gitingest to requirements.txt with version pinning
   - Ensure Python environment compatibility
   - Handle potential conflicts with existing dependencies

2. **System Requirements**
   - Ensure Git is available in the deployment environment
   - Configure appropriate disk space for temporary repository processing
   - Set up proper file system permissions for temporary directories

### Configuration

1. **Environment Variables**
   ```
   GITINGEST_MAX_FILE_SIZE=10MB
   GITINGEST_TIMEOUT=300
   GITINGEST_TEMP_DIR=/tmp/gitingest
   GITINGEST_INCLUDE_PATTERNS=*.py,*.js,*.md,*.json
   GITINGEST_EXCLUDE_PATTERNS=node_modules,__pycache__,.git
   ```

2. **Runtime Configuration**
   - Configurable processing timeouts
   - Adjustable file size limits
   - Customizable include/exclude patterns
   - Flexible authentication method selection


================================================
FILE: .kiro/specs/gitingest-integration/requirements.md
================================================
# Requirements Document

## Introduction

The Gitingest Integration enhances the existing AI Project Analyzer by replacing the complex GitHub API streaming approach with gitingest, a Python tool that converts Git repositories into LLM-optimized text format. This integration will simplify repository ingestion, improve parsing accuracy, and provide better context for AI analysis while maintaining all existing security and functionality requirements.

## Requirements

### Requirement 1

**User Story:** As a developer, I want the system to use gitingest to efficiently convert any Git repository into a structured text format, so that AI analysis becomes faster and more comprehensive.

#### Acceptance Criteria

1. WHEN a user provides a repository URL THEN the system SHALL use gitingest to convert the repository into structured text format
2. WHEN gitingest processes a repository THEN the system SHALL capture the complete codebase structure including file paths, content, and metadata
3. WHEN ingestion completes THEN the system SHALL have a single text representation optimized for LLM consumption
4. WHEN processing large repositories THEN the system SHALL handle gitingest output efficiently without memory overflow
5. IF gitingest fails to process a repository THEN the system SHALL provide clear error messages and fallback options

### Requirement 2

**User Story:** As a project maintainer, I want gitingest integration to preserve all file types and relationships, so that AI analysis covers the complete project ecosystem including documentation, configuration, and code files.

#### Acceptance Criteria

1. WHEN gitingest processes a repository THEN the system SHALL include all relevant file types (code, docs, configs, tests)
2. WHEN analyzing the gitingest output THEN the system SHALL maintain file hierarchy and relationship information
3. WHEN creating the RAG knowledge base THEN the system SHALL use gitingest's structured format for better context chunking
4. WHEN generating responses THEN the system SHALL reference specific files and line numbers from the gitingest output
5. WHEN filtering files THEN the system SHALL respect gitignore rules and exclude binary/irrelevant files automatically

### Requirement 3

**User Story:** As a security-conscious user, I want gitingest integration to work with both public and private repositories while maintaining the same security standards, so that sensitive code remains protected.

#### Acceptance Criteria

1. WHEN processing private repositories THEN the system SHALL pass authentication credentials securely to gitingest
2. WHEN gitingest accesses repositories THEN the system SHALL ensure credentials are handled only in memory
3. WHEN processing completes THEN the system SHALL clear all temporary files and authentication data
4. WHEN errors occur THEN the system SHALL not expose repository content or credentials in logs
5. IF gitingest creates temporary files THEN the system SHALL clean them up immediately after processing

### Requirement 4

**User Story:** As a team member, I want gitingest integration to be faster than the current GitHub API approach, so that I can analyze repositories more efficiently.

#### Acceptance Criteria

1. WHEN comparing to GitHub API streaming THEN gitingest integration SHALL complete repository ingestion faster
2. WHEN processing repositories THEN the system SHALL show progress indicators for gitingest operations
3. WHEN gitingest runs THEN the system SHALL provide real-time status updates to users
4. WHEN analysis completes THEN the system SHALL transition seamlessly to AI processing and visualization
5. IF gitingest takes longer than expected THEN the system SHALL provide estimated completion times

### Requirement 5

**User Story:** As a developer, I want the gitingest integration to enhance the existing flowchart and AI chat features, so that I get better insights from the improved repository representation.

#### Acceptance Criteria

1. WHEN gitingest output is processed THEN the system SHALL generate more accurate dependency graphs for flowcharts
2. WHEN AI answers questions THEN the system SHALL leverage gitingest's structured format for better context retrieval
3. WHEN displaying code references THEN the system SHALL use gitingest's file path information for precise navigation
4. WHEN generating summaries THEN the system SHALL benefit from gitingest's comprehensive file inclusion
5. WHEN updating repositories THEN the system SHALL re-run gitingest to maintain current analysis

### Requirement 6

**User Story:** As a system administrator, I want gitingest integration to be configurable and maintainable, so that the system can adapt to different repository types and requirements.

#### Acceptance Criteria

1. WHEN installing the system THEN gitingest SHALL be included as a Python dependency with proper version management
2. WHEN configuring gitingest THEN the system SHALL allow customization of file inclusion/exclusion patterns
3. WHEN running gitingest THEN the system SHALL handle different Git authentication methods (HTTPS, SSH, tokens)
4. WHEN processing fails THEN the system SHALL provide detailed diagnostic information for troubleshooting
5. IF gitingest updates are available THEN the system SHALL support easy upgrades without breaking existing functionality

### Requirement 7

**User Story:** As a user, I want gitingest integration to work seamlessly with the existing web interface, so that the improved backend processing is transparent to my workflow.

#### Acceptance Criteria

1. WHEN using the repository input interface THEN the system SHALL show gitingest processing status alongside existing progress indicators
2. WHEN gitingest completes THEN the system SHALL automatically proceed to AI processing and flowchart generation
3. WHEN errors occur during gitingest processing THEN the system SHALL display user-friendly error messages
4. WHEN switching between repositories THEN the system SHALL manage gitingest operations efficiently
5. IF gitingest processing is interrupted THEN the system SHALL allow users to retry or cancel operations gracefully


================================================
FILE: .kiro/specs/gitingest-integration/tasks.md
================================================
# Implementation Plan

- [x] 1. Set up gitingest dependency and core infrastructure






  - Add gitingest to requirements.txt with version pinning
  - Create GitingestProcessor service class with basic structure
  - Set up environment configuration for gitingest processing
  - _Requirements: 6.1, 6.2_

- [ ] 2. Implement GitingestProcessor core functionality
- [ ] 2.1 Create repository processing method
  - Write async process_repository method that executes gitingest command
  - Implement secure credential passing through environment variables
  - Add subprocess management with timeout and error handling
  - _Requirements: 1.1, 3.1, 3.2_

- [ ] 2.2 Implement gitingest output parsing
  - Write parse_gitingest_output method to convert raw text to structured data
  - Create file hierarchy reconstruction from gitingest output
  - Implement content block extraction with metadata preservation
  - _Requirements: 1.2, 1.3, 2.2_

- [ ] 2.3 Add repository validation and cleanup
  - Write validate_repository method for URL and access checking
  - Implement cleanup_temporary_files for secure file management
  - Create error handling for gitingest execution failures
  - _Requirements: 1.5, 3.3, 3.4_

- [ ] 3. Enhance RepositoryService with gitingest integration
- [ ] 3.1 Replace GitHub API streaming with gitingest processing
  - Modify analyze_repository method to use GitingestProcessor
  - Update progress tracking for gitingest operations
  - Maintain existing caching and session management
  - _Requirements: 4.1, 4.3, 7.2_

- [ ] 3.2 Implement improved error handling and diagnostics
  - Create gitingest-specific error types and messages
  - Add fallback mechanisms for gitingest failures
  - Implement diagnostic reporting for troubleshooting
  - _Requirements: 1.5, 6.4, 7.3_

- [ ] 4. Optimize RAGService for gitingest output
- [ ] 4.1 Create enhanced chunking strategy
  - Write chunk_gitingest_output method using file boundaries
  - Implement improved context preservation through structured hierarchy
  - Create metadata extraction from gitingest's comprehensive output
  - _Requirements: 2.1, 2.3, 5.2_

- [ ] 4.2 Build file hierarchy indexing
  - Write build_file_hierarchy_index for better navigation
  - Implement dependency mapping from gitingest structure
  - Create enhanced embedding generation with file context
  - _Requirements: 2.2, 2.4, 5.3_

- [ ] 5. Update VisualizationService for improved flowcharts
- [ ] 5.1 Enhance dependency graph generation
  - Modify flowchart data generation to use gitingest's structured output
  - Improve relationship mapping accuracy with comprehensive file inclusion
  - Update layout algorithms for better node positioning with more complete data
  - _Requirements: 5.1, 5.4_

- [ ] 5.2 Implement better source code navigation
  - Update click handlers to use gitingest's precise file path information
  - Enhance code reference display with line number accuracy
  - Create improved hover functionality with comprehensive summaries
  - _Requirements: 5.3, 5.4_

- [ ] 6. Create gitingest-specific API endpoints
- [ ] 6.1 Add gitingest processing status endpoints
  - Create GET /api/gitingest/:id/status for processing progress
  - Write POST /api/gitingest/process for repository submission
  - Implement DELETE /api/gitingest/:id for cleanup operations
  - _Requirements: 4.2, 7.1, 7.4_

- [ ] 6.2 Update existing repository endpoints
  - Modify existing repository analysis endpoints to use gitingest
  - Update response formats to include gitingest metadata
  - Maintain backward compatibility with existing frontend
  - _Requirements: 7.2, 7.5_

- [ ] 7. Enhance frontend for gitingest integration
- [ ] 7.1 Update repository input interface
  - Add gitingest processing indicators to existing progress displays
  - Create configuration options for gitingest include/exclude patterns
  - Implement better error messaging for gitingest-specific failures
  - _Requirements: 6.2, 7.1, 7.3_

- [ ] 7.2 Improve AI chat interface with better context
  - Update chat components to leverage improved file references
  - Enhance source code navigation with gitingest's precise paths
  - Create better context display using gitingest's structured format
  - _Requirements: 5.2, 5.3, 7.2_

- [ ] 8. Implement configuration and customization features
- [ ] 8.1 Create gitingest configuration management
  - Write configuration service for include/exclude patterns
  - Implement file size limits and processing timeout settings
  - Create authentication method selection for different Git providers
  - _Requirements: 6.2, 6.3_

- [ ] 8.2 Add processing optimization controls
  - Implement configurable memory usage limits
  - Create batch processing options for multiple repositories
  - Write performance monitoring and metrics collection
  - _Requirements: 4.1, 4.4, 6.5_

- [ ] 9. Build comprehensive testing suite
- [ ] 9.1 Create GitingestProcessor unit tests
  - Write tests for repository processing with mock gitingest execution
  - Create output parsing tests with sample gitingest outputs
  - Implement error handling tests for various failure scenarios
  - _Requirements: 1.1, 1.2, 1.5_

- [ ] 9.2 Write integration tests for enhanced services
  - Create end-to-end tests for complete gitingest workflow
  - Write RAG system tests with gitingest output
  - Implement visualization tests with improved dependency graphs
  - _Requirements: 2.1, 4.1, 5.1_

- [ ] 9.3 Add performance and security tests
  - Create performance comparison tests between gitingest and GitHub API
  - Write security tests for credential handling and cleanup
  - Implement load tests for concurrent gitingest processing
  - _Requirements: 3.1, 3.2, 3.3, 4.1_

- [ ] 10. Create migration and deployment utilities
- [ ] 10.1 Build migration tools for existing repositories
  - Write scripts to re-process existing repositories with gitingest
  - Create data migration utilities for RAG knowledge base updates
  - Implement rollback mechanisms for deployment safety
  - _Requirements: 5.5, 6.5_

- [ ] 10.2 Add monitoring and maintenance features
  - Create health check endpoints for gitingest functionality
  - Implement logging and metrics for gitingest operations
  - Write maintenance scripts for cleanup and optimization
  - _Requirements: 6.4, 6.5_


================================================
FILE: .kiro/specs/self-configuring-ai-agents/requirements.md
================================================
[Empty file]


================================================
FILE: .kiro/specs/streamlit-frontend/design.md
================================================
Error reading file with 'cp1252': 'charmap' codec can't decode byte 0x90 in position 4761: character maps to <undefined>


================================================
FILE: .kiro/specs/streamlit-frontend/requirements.md
================================================
# Requirements Document

## Introduction

This feature creates a beautiful, dark-mode Streamlit frontend for the AI Project Analyzer Flask backend. The frontend will provide an intuitive interface for users to view their existing repositories and add new ones by providing GitHub repository URLs. The interface will communicate with the Flask backend to clone repositories and display analysis results.

## Requirements

### Requirement 1

**User Story:** As a user, I want to see a list of my existing repositories in a clean, organized interface, so that I can quickly browse and select repositories I've already analyzed.

#### Acceptance Criteria

1. WHEN the application loads THEN the system SHALL display all repositories from the my_repos directory
2. WHEN repositories are displayed THEN the system SHALL show repository name, description, and last modified date
3. WHEN no repositories exist THEN the system SHALL display a friendly message indicating no repositories are available
4. WHEN repositories are listed THEN the system SHALL use a dark theme with good contrast and readability

### Requirement 2

**User Story:** As a user, I want to input a GitHub repository URL and have it cloned automatically, so that I can analyze new repositories without manual setup.

#### Acceptance Criteria

1. WHEN I enter a valid GitHub repository URL THEN the system SHALL validate the URL format
2. WHEN I submit a repository URL THEN the system SHALL call the Flask backend to clone the repository
3. WHEN cloning is successful THEN the system SHALL display a success message and refresh the repository list
4. WHEN cloning fails THEN the system SHALL display a clear error message explaining what went wrong
5. WHEN cloning is in progress THEN the system SHALL show a loading indicator

### Requirement 3

**User Story:** As a user, I want the interface to have a beautiful dark mode design, so that I can work comfortably in low-light environments and have a modern user experience.

#### Acceptance Criteria

1. WHEN the application loads THEN the system SHALL use a dark color scheme as the default theme
2. WHEN displaying content THEN the system SHALL use high contrast colors for good readability
3. WHEN showing interactive elements THEN the system SHALL provide clear visual feedback on hover and click
4. WHEN displaying status messages THEN the system SHALL use appropriate colors (green for success, red for errors, blue for info)

### Requirement 4

**User Story:** As a user, I want real-time feedback on repository operations, so that I understand what's happening and can track progress.

#### Acceptance Criteria

1. WHEN a repository operation starts THEN the system SHALL display a progress indicator
2. WHEN operations complete THEN the system SHALL show success/failure notifications
3. WHEN errors occur THEN the system SHALL display detailed error messages with suggested actions
4. WHEN the repository list changes THEN the system SHALL automatically refresh the display

### Requirement 5

**User Story:** As a user, I want the interface to be responsive and intuitive, so that I can efficiently manage my repositories regardless of screen size.

#### Acceptance Criteria

1. WHEN using different screen sizes THEN the system SHALL adapt the layout appropriately
2. WHEN interacting with form elements THEN the system SHALL provide clear labels and validation feedback
3. WHEN navigating the interface THEN the system SHALL maintain consistent styling and behavior
4. WHEN performing actions THEN the system SHALL provide keyboard shortcuts where appropriate


================================================
FILE: .kiro/specs/streamlit-frontend/tasks.md
================================================
# Implementation Plan

- [x] 1. Set up Streamlit application structure and dependencies




  - Create streamlit_app.py as main entry point
  - Create requirements.txt with Streamlit, requests, and other dependencies
  - Set up basic Streamlit configuration and page setup
  - _Requirements: 3.1, 3.3_

- [ ] 2. Implement dark theme styling system
  - Create custom CSS for dark theme with specified color palette
  - Implement load_custom_css() function to inject styles
  - Style all UI components for consistent dark theme appearance
  - _Requirements: 3.1, 3.2, 3.3_

- [ ] 3. Create API client module for Flask backend communication
  - Implement get_local_repositories() function to fetch repository list
  - Create clone_repository() function to call Flask clone endpoint
  - Add validate_github_url() function for client-side URL validation
  - Implement handle_api_response() function for consistent error handling
  - _Requirements: 2.2, 2.3, 4.2, 4.3_

- [ ] 4. Build repository list display component
  - Create render_repository_list() function to display repository cards
  - Implement repository card layout with metadata display
  - Add file statistics, language breakdown, and last modified info
  - Style repository cards with hover effects and responsive design
  - _Requirements: 1.1, 1.2, 1.4, 5.3_

- [ ] 5. Implement add repository form component
  - Create render_add_repository_form() function with URL input field
  - Add optional GitHub token input with secure handling
  - Implement form validation and submission logic
  - Add clone and analyze button functionality
  - _Requirements: 2.1, 2.2, 2.4, 5.2_

- [ ] 6. Create notification and status system
  - Implement render_notifications() function for user feedback
  - Add loading indicators for repository operations
  - Create success, error, and info notification types with appropriate colors
  - Implement progress tracking for clone operations
  - _Requirements: 2.3, 2.5, 4.1, 4.2, 4.3_

- [ ] 7. Add session state management and initialization
  - Create initialize_session_state() function for app state setup
  - Implement repository caching with refresh functionality
  - Add state management for current operations and notifications
  - Handle GitHub token storage in session state securely
  - _Requirements: 4.4, 5.3_

- [ ] 8. Implement main application orchestration
  - Create main() function as application entry point
  - Add render_header() function for app title and navigation
  - Integrate all components into cohesive user interface
  - Implement auto-refresh functionality for repository list
  - _Requirements: 1.3, 1.4, 4.4, 5.1_

- [ ] 9. Add error handling and user feedback systems
  - Implement comprehensive error handling for API failures
  - Add user-friendly error messages with suggested actions
  - Create timeout handling for long-running operations
  - Add validation feedback for form inputs
  - _Requirements: 2.4, 4.2, 4.3, 5.2_

- [ ] 10. Create responsive layout and mobile optimization
  - Implement responsive design for different screen sizes
  - Add mobile-friendly touch interactions
  - Optimize layout for tablet and desktop viewing
  - Test and adjust component spacing and sizing
  - _Requirements: 5.1, 5.3_

- [ ] 11. Add repository statistics and metadata display
  - Implement detailed file type breakdown visualization
  - Create language percentage display with color coding
  - Add repository size formatting and display
  - Show clone timestamp and source URL information
  - _Requirements: 1.2, 1.4_

- [ ] 12. Implement real-time operation feedback
  - Add progress bars for clone operations
  - Create real-time status updates during repository processing
  - Implement operation cancellation if supported by backend
  - Add estimated time remaining for long operations
  - _Requirements: 4.1, 4.4_

- [ ] 13. Create comprehensive testing suite
  - Write unit tests for API client functions
  - Create integration tests for Flask backend communication
  - Add UI component testing with mock data
  - Implement error scenario testing and validation
  - _Requirements: All requirements validation_

- [ ] 14. Add final polish and optimization
  - Optimize performance for large repository lists
  - Add keyboard shortcuts for common actions
  - Implement caching for improved responsiveness
  - Add final styling touches and animations
  - _Requirements: 5.1, 5.3, 5.4_


================================================
FILE: .streamlit/config.toml
================================================
[theme]
primaryColor = "#FF4B4B"
backgroundColor = "#0E1117"
secondaryBackgroundColor = "#262730"
textColor = "#FAFAFA"
font = "sans serif"

[server]
headless = true
port = 8501
enableCORS = false
enableXsrfProtection = true

[browser]
gatherUsageStats = false

