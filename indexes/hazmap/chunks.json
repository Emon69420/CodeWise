[{"id": "Directory structure:_0", "file": "Directory structure:", "content": "\u2514\u2500\u2500 emon69420-hazmap/\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 app.json\n    \u251c\u2500\u2500 package.json\n    \u251c\u2500\u2500 tsconfig.json\n    \u251c\u2500\u2500 .npmrc\n    \u251c\u2500\u2500 .prettierrc\n    \u251c\u2500\u2500 app/\n    \u2502   \u251c\u2500\u2500 +not-found.tsx\n    \u2502   \u251c\u2500\u2500 _layout.tsx\n    \u2502   \u251c\u2500\u2500 index.tsx\n    \u2502   \u251c\u2500\u2500 (auth)/\n    \u2502   \u2502   \u251c\u2500\u2500 _layout.tsx\n    \u2502   \u2502   \u251c\u2500\u2500 login.tsx\n    \u2502   \u2502   \u2514\u2500\u2500 signup.tsx\n    \u2502   \u2514\u2500\u2500 (tabs)/\n    \u2502       \u251c\u2500\u2500 _layout.tsx\n    \u2502       \u251c\u2500\u2500 air-quality.tsx\n    \u2502       \u251c\u2500\u2500 evacuation.tsx\n    \u2502       \u251c\u2500\u2500 index.tsx\n    \u2502       \u251c\u2500\u2500 profile.tsx\n    \u2502       \u2514\u2500\u2500 updates.tsx\n    \u251c\u2500\u2500 hooks/\n    \u2502   \u2514\u2500\u2500 useFrameworkReady.ts\n    \u251c\u2500\u2500 types/\n    \u2502   \u2514\u2500\u2500 env.d.ts\n    \u2514\u2500\u2500 .bolt/\n        \u2514\u2500\u2500 config.json"}, {"id": "README.md_0", "file": "README.md", "content": "================================================\nhazmap"}, {"id": "app.json_0", "file": "app.json", "content": "================================================\n{\n  \"expo\": {\n    \"name\": \"bolt-expo-nativewind\",\n    \"slug\": \"bolt-expo-nativewind\",\n    \"version\": \"1.0.0\",\n    \"orientation\": \"portrait\",\n    \"icon\": \"./assets/images/icon.png\",\n    \"scheme\": \"myapp\",\n    \"userInterfaceStyle\": \"automatic\",\n    \"newArchEnabled\": true,\n    \"ios\": {\n      \"supportsTablet\": true\n    },\n    \"web\": {\n      \"bundler\": \"metro\",\n      \"output\": \"single\",\n      \"favicon\": \"./assets/images/favicon.png\"\n    },\n    \"plugins\": [\"expo-router\", \"expo-font\", \"expo-web-browser\"],\n    \"experiments\": {\n      \"typedRoutes\": true\n    }\n  }\n}"}, {"id": "package.json_0", "file": "package.json", "content": "================================================\n{\n  \"name\": \"bolt-expo-starter\",\n  \"main\": \"expo-router/entry\",\n  \"version\": \"1.0.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"EXPO_NO_TELEMETRY=1 expo start\",\n    \"build:web\": \"expo export --platform web\",\n    \"lint\": \"expo lint\"\n  },\n  \"dependencies\": {\n    \"@expo/vector-icons\": \"^14.1.0\",\n    \"@lucide/lab\": \"^0.1.2\",\n    \"@react-native-async-storage/async-storage\": \"^2.2.0\",\n    \"@react-navigation/bottom-tabs\": \"^7.2.0\",\n    \"@react-navigation/native\": \"^7.0.14\",\n    \"expo\": \"^53.0.0\",\n    \"expo-blur\": \"~14.1.3\",\n    \"expo-camera\": \"~16.1.5\",\n    \"expo-constants\": \"~17.1.3\",\n    \"expo-font\": \"~13.2.2\",\n    \"expo-haptics\": \"~14.1.3\",\n    \"expo-linear-gradient\": \"~14.1.3\",\n    \"expo-linking\": \"~7.1.3\",\n    \"expo-location\": \"^18.1.6\","}, {"id": "package.json_1", "file": "package.json", "content": "\"expo-linking\": \"~7.1.3\",\n    \"expo-location\": \"^18.1.6\",\n    \"expo-notifications\": \"^0.31.4\",\n    \"expo-router\": \"~5.0.2\",\n    \"expo-secure-store\": \"^14.2.3\",\n    \"expo-splash-screen\": \"~0.30.6\",\n    \"expo-status-bar\": \"~2.2.2\",\n    \"expo-symbols\": \"~0.4.3\",\n    \"expo-system-ui\": \"~5.0.5\",\n    \"expo-web-browser\": \"~14.1.5\",\n    \"lucide-react-native\": \"^0.475.0\",\n    \"mapbox-gl\": \"^3.13.0\",\n    \"react\": \"19.0.0\",\n    \"react-dom\": \"19.0.0\",\n    \"react-map-gl\": \"^8.0.4\",\n    \"react-native\": \"0.79.1\",\n    \"react-native-gesture-handler\": \"~2.24.0\",\n    \"react-native-paper\": \"^5.14.5\",\n    \"react-native-reanimated\": \"~3.17.4\",\n    \"react-native-safe-area-context\": \"5.3.0\",\n    \"react-native-screens\": \"~4.10.0\",\n    \"react-native-svg\": \"15.11.2\",\n    \"react-native-url-polyfill\": \"^2.0.0\","}, {"id": "package.json_2", "file": "package.json", "content": "\"react-native-svg\": \"15.11.2\",\n    \"react-native-url-polyfill\": \"^2.0.0\",\n    \"react-native-web\": \"^0.20.0\",\n    \"react-native-webview\": \"13.13.5\"\n  },\n  \"devDependencies\": {\n    \"@babel/core\": \"^7.25.2\",\n    \"@types/react\": \"~19.0.10\",\n    \"typescript\": \"~5.8.3\"\n  }\n}"}, {"id": "tsconfig.json_0", "file": "tsconfig.json", "content": "================================================\n{\n  \"extends\": \"expo/tsconfig.base\",\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"paths\": {\n      \"@/*\": [\"./*\"]\n    }\n  },\n  \"include\": [\n    \"**/*.ts\",\n    \"**/*.tsx\",\n    \".expo/types/**/*.ts\",\n    \"expo-env.d.ts\",\n    \"nativewind-env.d.ts\"\n  ]\n}"}, {"id": ".npmrc_0", "file": ".npmrc", "content": "================================================\nlegacy-peer-deps=true"}, {"id": ".prettierrc_0", "file": ".prettierrc", "content": "================================================\n{\n  \"useTabs\": false,\n  \"bracketSpacing\": true,\n  \"singleQuote\": true,\n  \"tabWidth\": 2\n}"}, {"id": "app/+not-found.tsx_0", "file": "app/+not-found.tsx", "content": "================================================\nimport { Link, Stack } from 'expo-router';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function NotFoundScreen() {\n  return (\n    <>\n      <Stack.Screen options={{ title: 'Oops!' }} />\n      <View style={styles.container}>\n        <Text style={styles.text}>This screen doesn't exist.</Text>\n        <Link href=\"/\" style={styles.link}>\n          <Text>Go to home screen!</Text>\n        </Link>\n      </View>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  text: {\n    fontSize: 20,\n    fontWeight: 600,\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n});"}, {"id": "app/_layout.tsx_0", "file": "app/_layout.tsx", "content": "================================================\nimport { useEffect } from 'react';\nimport { Stack } from 'expo-router';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFrameworkReady } from '@/hooks/useFrameworkReady';\n\nexport default function RootLayout() {\n  useFrameworkReady();\n\n  return (\n    <>\n      <Stack screenOptions={{ headerShown: false }}>\n        <Stack.Screen name=\"+not-found\" />\n      </Stack>\n      <StatusBar style=\"auto\" />\n    </>\n  );\n}"}, {"id": "app/index.tsx_0", "file": "app/index.tsx", "content": "================================================\nimport { router } from 'expo-router';\nimport { useEffect } from 'react';\n\nexport default function App() {\n  useEffect(() => {\n    // Simple timeout to ensure router is ready\n    const timeout = setTimeout(() => {\n      router.replace('/(auth)/login');\n    }, 100);\n\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return null;\n}"}, {"id": "app/(auth)/_layout.tsx_0", "file": "app/(auth)/_layout.tsx", "content": "================================================\nimport { Stack } from 'expo-router';\n\nexport default function AuthLayout() {\n  return (\n    <Stack screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"login\" />\n      <Stack.Screen name=\"signup\" />\n    </Stack>\n  );\n}"}, {"id": "app/(auth)/login.tsx_0", "file": "app/(auth)/login.tsx", "content": "================================================\nimport React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  SafeAreaView,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { Link, router } from 'expo-router';\nimport { Shield, TriangleAlert as AlertTriangle } from 'lucide-react-native';\n\nexport default function LoginScreen() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleLogin = async () => {\n    if (!email || !password) {\n      Alert.alert('Error', 'Please fill in all fields');\n      return;\n    }\n\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);"}, {"id": "app/(auth)/login.tsx_1", "file": "app/(auth)/login.tsx", "content": "setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n      router.replace('/(tabs)');\n    }, 1000);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.keyboardContainer}\n      >\n        <View style={styles.content}>\n          <View style={styles.header}>\n            <View style={styles.iconContainer}>\n              <Shield size={48} color=\"#FF6B35\" />\n              <AlertTriangle size={32} color=\"#FFD23F\" style={styles.alertIcon} />\n            </View>\n            <Text style={styles.title}>WildSafe</Text>\n            <Text style={styles.subtitle}>Emergency Response System</Text>\n          </View>"}, {"id": "app/(auth)/login.tsx_2", "file": "app/(auth)/login.tsx", "content": "<Text style={styles.subtitle}>Emergency Response System</Text>\n          </View>\n\n          <View style={styles.form}>\n            <Text style={styles.label}>Email</Text>\n            <TextInput\n              style={styles.input}\n              value={email}\n              onChangeText={setEmail}\n              placeholder=\"Enter your email\"\n              placeholderTextColor=\"#666\"\n              keyboardType=\"email-address\"\n              autoCapitalize=\"none\"\n            />\n\n            <Text style={styles.label}>Password</Text>\n            <TextInput\n              style={styles.input}\n              value={password}\n              onChangeText={setPassword}\n              placeholder=\"Enter your password\"\n              placeholderTextColor=\"#666\"\n              secureTextEntry"}, {"id": "app/(auth)/login.tsx_3", "file": "app/(auth)/login.tsx", "content": "placeholderTextColor=\"#666\"\n              secureTextEntry\n            />\n\n            <TouchableOpacity\n              style={[styles.button, isLoading && styles.buttonDisabled]}\n              onPress={handleLogin}\n              disabled={isLoading}\n            >\n              <Text style={styles.buttonText}>\n                {isLoading ? 'Signing In...' : 'Sign In'}\n              </Text>\n            </TouchableOpacity>\n\n            <View style={styles.linkContainer}>\n              <Text style={styles.linkText}>Don't have an account? </Text>\n              <Link href=\"/(auth)/signup\" style={styles.link}>\n                <Text style={styles.linkHighlight}>Sign Up</Text>\n              </Link>\n            </View>\n          </View>\n        </View>\n      </KeyboardAvoidingView>"}, {"id": "app/(auth)/login.tsx_4", "file": "app/(auth)/login.tsx", "content": "</View>\n          </View>\n        </View>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  keyboardContainer: {\n    flex: 1,\n  },\n  content: {\n    flex: 1,\n    padding: 24,\n    justifyContent: 'center',\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 48,\n  },\n  iconContainer: {\n    position: 'relative',\n    marginBottom: 16,\n  },\n  alertIcon: {\n    position: 'absolute',\n    top: -8,\n    right: -8,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#888',\n    textAlign: 'center',\n  },\n  form: {\n    width: '100%',\n  },\n  label: {\n    fontSize: 16,"}, {"id": "app/(auth)/login.tsx_5", "file": "app/(auth)/login.tsx", "content": "textAlign: 'center',\n  },\n  form: {\n    width: '100%',\n  },\n  label: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 8,\n    fontWeight: '500',\n  },\n  input: {\n    backgroundColor: '#1A1A1A',\n    borderColor: '#333',\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 16,\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 24,\n  },\n  button: {\n    backgroundColor: '#FF6B35',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 24,\n  },\n  buttonDisabled: {\n    opacity: 0.6,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  linkContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  linkText: {\n    color: '#888',\n    fontSize: 16,\n  },\n  link: {"}, {"id": "app/(auth)/login.tsx_6", "file": "app/(auth)/login.tsx", "content": "alignItems: 'center',\n  },\n  linkText: {\n    color: '#888',\n    fontSize: 16,\n  },\n  link: {\n    marginLeft: 4,\n  },\n  linkHighlight: {\n    color: '#FF6B35',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});"}, {"id": "app/(auth)/signup.tsx_0", "file": "app/(auth)/signup.tsx", "content": "================================================\nimport React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  StyleSheet,\n  SafeAreaView,\n  KeyboardAvoidingView,\n  Platform,\n  Alert,\n  ScrollView,\n} from 'react-native';\nimport { Link, router } from 'expo-router';\nimport { Shield, TriangleAlert as AlertTriangle } from 'lucide-react-native';\n\nexport default function SignUpScreen() {\n  const [formData, setFormData] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    role: 'citizen', // citizen, official, responder\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSignUp = async () => {"}, {"id": "app/(auth)/signup.tsx_1", "file": "app/(auth)/signup.tsx", "content": "});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSignUp = async () => {\n    if (!formData.firstName || !formData.lastName || !formData.email || !formData.password) {\n      Alert.alert('Error', 'Please fill in all required fields');\n      return;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      Alert.alert('Error', 'Passwords do not match');\n      return;\n    }\n\n    setIsLoading(true);\n    // Simulate API call\n    setTimeout(() => {\n      setIsLoading(false);\n      router.replace('/(tabs)');\n    }, 1000);\n  };\n\n  const updateFormData = (field: string, value: string) => {\n    setFormData(prev => ({ ...prev, [field]: value }));\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView"}, {"id": "app/(auth)/signup.tsx_2", "file": "app/(auth)/signup.tsx", "content": "};\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <KeyboardAvoidingView\n        behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\n        style={styles.keyboardContainer}\n      >\n        <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n          <View style={styles.content}>\n            <View style={styles.header}>\n              <View style={styles.iconContainer}>\n                <Shield size={48} color=\"#FF6B35\" />\n                <AlertTriangle size={32} color=\"#FFD23F\" style={styles.alertIcon} />\n              </View>\n              <Text style={styles.title}>Join WildSafe</Text>\n              <Text style={styles.subtitle}>Create your emergency response account</Text>\n            </View>\n\n            <View style={styles.form}>"}, {"id": "app/(auth)/signup.tsx_3", "file": "app/(auth)/signup.tsx", "content": "</View>\n\n            <View style={styles.form}>\n              <Text style={styles.label}>First Name *</Text>\n              <TextInput\n                style={styles.input}\n                value={formData.firstName}\n                onChangeText={(value) => updateFormData('firstName', value)}\n                placeholder=\"Enter your first name\"\n                placeholderTextColor=\"#666\"\n              />\n\n              <Text style={styles.label}>Last Name *</Text>\n              <TextInput\n                style={styles.input}\n                value={formData.lastName}\n                onChangeText={(value) => updateFormData('lastName', value)}\n                placeholder=\"Enter your last name\"\n                placeholderTextColor=\"#666\"\n              />"}, {"id": "app/(auth)/signup.tsx_4", "file": "app/(auth)/signup.tsx", "content": "placeholderTextColor=\"#666\"\n              />\n\n              <Text style={styles.label}>Email *</Text>\n              <TextInput\n                style={styles.input}\n                value={formData.email}\n                onChangeText={(value) => updateFormData('email', value)}\n                placeholder=\"Enter your email\"\n                placeholderTextColor=\"#666\"\n                keyboardType=\"email-address\"\n                autoCapitalize=\"none\"\n              />\n\n              <Text style={styles.label}>Password *</Text>\n              <TextInput\n                style={styles.input}\n                value={formData.password}\n                onChangeText={(value) => updateFormData('password', value)}\n                placeholder=\"Create a password\""}, {"id": "app/(auth)/signup.tsx_5", "file": "app/(auth)/signup.tsx", "content": "placeholder=\"Create a password\"\n                placeholderTextColor=\"#666\"\n                secureTextEntry\n              />\n\n              <Text style={styles.label}>Confirm Password *</Text>\n              <TextInput\n                style={styles.input}\n                value={formData.confirmPassword}\n                onChangeText={(value) => updateFormData('confirmPassword', value)}\n                placeholder=\"Confirm your password\"\n                placeholderTextColor=\"#666\"\n                secureTextEntry\n              />\n\n              <TouchableOpacity\n                style={[styles.button, isLoading && styles.buttonDisabled]}\n                onPress={handleSignUp}\n                disabled={isLoading}\n              >\n                <Text style={styles.buttonText}>"}, {"id": "app/(auth)/signup.tsx_6", "file": "app/(auth)/signup.tsx", "content": ">\n                <Text style={styles.buttonText}>\n                  {isLoading ? 'Creating Account...' : 'Create Account'}\n                </Text>\n              </TouchableOpacity>\n\n              <View style={styles.linkContainer}>\n                <Text style={styles.linkText}>Already have an account? </Text>\n                <Link href=\"/(auth)/login\" style={styles.link}>\n                  <Text style={styles.linkHighlight}>Sign In</Text>\n                </Link>\n              </View>\n            </View>\n          </View>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  keyboardContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },"}, {"id": "app/(auth)/signup.tsx_7", "file": "app/(auth)/signup.tsx", "content": "},\n  keyboardContainer: {\n    flex: 1,\n  },\n  scrollView: {\n    flex: 1,\n  },\n  content: {\n    padding: 24,\n    paddingTop: 48,\n  },\n  header: {\n    alignItems: 'center',\n    marginBottom: 32,\n  },\n  iconContainer: {\n    position: 'relative',\n    marginBottom: 16,\n  },\n  alertIcon: {\n    position: 'absolute',\n    top: -8,\n    right: -8,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#888',\n    textAlign: 'center',\n  },\n  form: {\n    width: '100%',\n  },\n  label: {\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 8,\n    fontWeight: '500',\n  },\n  input: {\n    backgroundColor: '#1A1A1A',\n    borderColor: '#333',\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 16,"}, {"id": "app/(auth)/signup.tsx_8", "file": "app/(auth)/signup.tsx", "content": "borderColor: '#333',\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 16,\n    fontSize: 16,\n    color: '#FFFFFF',\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: '#FF6B35',\n    borderRadius: 12,\n    padding: 16,\n    alignItems: 'center',\n    marginBottom: 24,\n    marginTop: 8,\n  },\n  buttonDisabled: {\n    opacity: 0.6,\n  },\n  buttonText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  linkContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  linkText: {\n    color: '#888',\n    fontSize: 16,\n  },\n  link: {\n    marginLeft: 4,\n  },\n  linkHighlight: {\n    color: '#FF6B35',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});"}, {"id": "app/(tabs)/_layout.tsx_0", "file": "app/(tabs)/_layout.tsx", "content": "================================================\nimport { Tabs } from 'expo-router';\nimport { \n  MapPin, \n  Wind, \n  Shield, \n  MessageSquare, \n  User \n} from 'lucide-react-native';\n\nexport default function TabLayout() {\n  return (\n    <Tabs\n      screenOptions={{\n        headerShown: false,\n        tabBarStyle: {\n          backgroundColor: '#1A1A1A',\n          borderTopColor: '#333',\n          borderTopWidth: 1,\n          height: 88,\n          paddingBottom: 8,\n          paddingTop: 8,\n        },\n        tabBarActiveTintColor: '#FF6B35',\n        tabBarInactiveTintColor: '#666',\n        tabBarLabelStyle: {\n          fontSize: 12,\n          fontWeight: '500',\n        },\n      }}>\n      <Tabs.Screen\n        name=\"index\"\n        options={{\n          title: 'Map',"}, {"id": "app/(tabs)/_layout.tsx_1", "file": "app/(tabs)/_layout.tsx", "content": "}}>\n      <Tabs.Screen\n        name=\"index\"\n        options={{\n          title: 'Map',\n          tabBarIcon: ({ size, color }) => (\n            <MapPin size={size} color={color} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"air-quality\"\n        options={{\n          title: 'Air Quality',\n          tabBarIcon: ({ size, color }) => (\n            <Wind size={size} color={color} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"evacuation\"\n        options={{\n          title: 'Evacuation',\n          tabBarIcon: ({ size, color }) => (\n            <Shield size={size} color={color} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"updates\"\n        options={{\n          title: 'Updates',\n          tabBarIcon: ({ size, color }) => ("}, {"id": "app/(tabs)/_layout.tsx_2", "file": "app/(tabs)/_layout.tsx", "content": "options={{\n          title: 'Updates',\n          tabBarIcon: ({ size, color }) => (\n            <MessageSquare size={size} color={color} />\n          ),\n        }}\n      />\n      <Tabs.Screen\n        name=\"profile\"\n        options={{\n          title: 'Profile',\n          tabBarIcon: ({ size, color }) => (\n            <User size={size} color={color} />\n          ),\n        }}\n      />\n    </Tabs>\n  );\n}"}, {"id": "app/(tabs)/air-quality.tsx_0", "file": "app/(tabs)/air-quality.tsx", "content": "================================================\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  ScrollView,\n  TouchableOpacity,\n  Platform,\n} from 'react-native';\nimport { Wind, Thermometer, Eye, Droplets, CircleAlert as AlertCircle } from 'lucide-react-native';\n\ninterface AirQualityData {\n  aqi: number;\n  category: 'Good' | 'Moderate' | 'Unhealthy for Sensitive' | 'Unhealthy' | 'Very Unhealthy' | 'Hazardous';\n  primaryPollutant: string;\n  pollutants: {\n    pm25: number;\n    pm10: number;\n    o3: number;\n    no2: number;\n    so2: number;\n    co: number;\n  };\n  location: string;\n  timestamp: string;\n}\n\nexport default function AirQualityScreen() {\n  const [airQuality, setAirQuality] = useState<AirQualityData | null>(null);"}, {"id": "app/(tabs)/air-quality.tsx_1", "file": "app/(tabs)/air-quality.tsx", "content": "const [airQuality, setAirQuality] = useState<AirQualityData | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTimeframe, setSelectedTimeframe] = useState<'current' | '24h' | '7d'>('current');\n\n  useEffect(() => {\n    loadAirQualityData();\n  }, []);\n\n  const loadAirQualityData = async () => {\n    setIsLoading(true);\n    // Simulate API call to Google Maps Air Quality API\n    setTimeout(() => {\n      const mockData: AirQualityData = {\n        aqi: 156,\n        category: 'Unhealthy',\n        primaryPollutant: 'PM2.5',\n        pollutants: {\n          pm25: 65.4,\n          pm10: 89.2,\n          o3: 45.1,\n          no2: 23.8,\n          so2: 12.3,\n          co: 1.2,\n        },\n        location: 'Los Angeles, CA',\n        timestamp: new Date().toISOString(),"}, {"id": "app/(tabs)/air-quality.tsx_2", "file": "app/(tabs)/air-quality.tsx", "content": "},\n        location: 'Los Angeles, CA',\n        timestamp: new Date().toISOString(),\n      };\n      setAirQuality(mockData);\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const getAQIColor = (aqi: number) => {\n    if (aqi <= 50) return '#22C55E'; // Good\n    if (aqi <= 100) return '#EAB308'; // Moderate\n    if (aqi <= 150) return '#F97316'; // Unhealthy for Sensitive\n    if (aqi <= 200) return '#EF4444'; // Unhealthy\n    if (aqi <= 300) return '#A855F7'; // Very Unhealthy\n    return '#DC2626'; // Hazardous\n  };\n\n  const getHealthRecommendation = (category: string) => {\n    switch (category) {\n      case 'Good':\n        return 'Air quality is considered satisfactory. Ideal time for outdoor activities.';\n      case 'Moderate':"}, {"id": "app/(tabs)/air-quality.tsx_3", "file": "app/(tabs)/air-quality.tsx", "content": "case 'Moderate':\n        return 'Air quality is acceptable. Unusually sensitive people should consider limiting prolonged outdoor activities.';\n      case 'Unhealthy for Sensitive':\n        return 'Sensitive groups may experience health effects. Limit prolonged outdoor activities if you have heart or lung disease.';\n      case 'Unhealthy':\n        return 'Everyone may experience health effects. Avoid prolonged outdoor activities. Stay indoors if possible.';\n      case 'Very Unhealthy':\n        return 'Health alert! Everyone should avoid outdoor activities. Keep windows closed and use air purifiers.';\n      case 'Hazardous':\n        return 'Emergency conditions. Everyone should remain indoors and avoid all outdoor activities.';\n      default:"}, {"id": "app/(tabs)/air-quality.tsx_4", "file": "app/(tabs)/air-quality.tsx", "content": "default:\n        return 'Monitor air quality regularly and follow health recommendations.';\n    }\n  };\n\n  const getPollutantLevel = (value: number, type: string) => {\n    // Simplified pollutant level assessment\n    if (value <= 12) return { level: 'Low', color: '#22C55E' };\n    if (value <= 35) return { level: 'Moderate', color: '#EAB308' };\n    if (value <= 55) return { level: 'High', color: '#F97316' };\n    return { level: 'Very High', color: '#EF4444' };\n  };\n\n  if (!airQuality) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <Text style={styles.loadingText}>Loading air quality data...</Text>\n      </SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>"}, {"id": "app/(tabs)/air-quality.tsx_5", "file": "app/(tabs)/air-quality.tsx", "content": "</SafeAreaView>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Air Quality Index</Text>\n          <Text style={styles.location}>{airQuality.location}</Text>\n        </View>\n\n        <View style={styles.mainCard}>\n          <View style={styles.aqiContainer}>\n            <View style={[styles.aqiCircle, { borderColor: getAQIColor(airQuality.aqi) }]}>\n              <Text style={[styles.aqiNumber, { color: getAQIColor(airQuality.aqi) }]}>\n                {airQuality.aqi}\n              </Text>\n            </View>\n            <View style={styles.aqiInfo}>"}, {"id": "app/(tabs)/air-quality.tsx_6", "file": "app/(tabs)/air-quality.tsx", "content": "</Text>\n            </View>\n            <View style={styles.aqiInfo}>\n              <Text style={[styles.aqiCategory, { color: getAQIColor(airQuality.aqi) }]}>\n                {airQuality.category}\n              </Text>\n              <Text style={styles.primaryPollutant}>\n                Primary: {airQuality.primaryPollutant}\n              </Text>\n            </View>\n          </View>\n\n          <View style={styles.healthAlert}>\n            <AlertCircle size={20} color={getAQIColor(airQuality.aqi)} />\n            <Text style={styles.healthText}>\n              {getHealthRecommendation(airQuality.category)}\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.timeframeSelector}>\n          {(['current', '24h', '7d'] as const).map((timeframe) => ("}, {"id": "app/(tabs)/air-quality.tsx_7", "file": "app/(tabs)/air-quality.tsx", "content": "{(['current', '24h', '7d'] as const).map((timeframe) => (\n            <TouchableOpacity\n              key={timeframe}\n              style={[\n                styles.timeframeButton,\n                selectedTimeframe === timeframe && styles.timeframeButtonActive,\n              ]}\n              onPress={() => setSelectedTimeframe(timeframe)}\n            >\n              <Text\n                style={[\n                  styles.timeframeText,\n                  selectedTimeframe === timeframe && styles.timeframeTextActive,\n                ]}\n              >\n                {timeframe === 'current' ? 'Now' : timeframe === '24h' ? '24 Hours' : '7 Days'}\n              </Text>\n            </TouchableOpacity>\n          ))}\n        </View>\n\n        <View style={styles.pollutantsSection}>"}, {"id": "app/(tabs)/air-quality.tsx_8", "file": "app/(tabs)/air-quality.tsx", "content": "))}\n        </View>\n\n        <View style={styles.pollutantsSection}>\n          <Text style={styles.sectionTitle}>Pollutant Breakdown</Text>\n          \n          <View style={styles.pollutantGrid}>\n            {Object.entries(airQuality.pollutants).map(([key, value]) => {\n              const level = getPollutantLevel(value, key);\n              return (\n                <View key={key} style={styles.pollutantCard}>\n                  <Text style={styles.pollutantName}>\n                    {key.toUpperCase().replace('PM', 'PM')}\n                  </Text>\n                  <Text style={styles.pollutantValue}>\n                    {value} {key.includes('pm') ? '\u00ce\u00bcg/m\u00c2\u00b3' : 'ppb'}\n                  </Text>\n                  <Text style={[styles.pollutantLevel, { color: level.color }]}>"}, {"id": "app/(tabs)/air-quality.tsx_9", "file": "app/(tabs)/air-quality.tsx", "content": "<Text style={[styles.pollutantLevel, { color: level.color }]}>\n                    {level.level}\n                  </Text>\n                </View>\n              );\n            })}\n          </View>\n        </View>\n\n        <View style={styles.recommendationsSection}>\n          <Text style={styles.sectionTitle}>Health Recommendations</Text>\n          \n          <View style={styles.recommendationCard}>\n            <Eye size={20} color=\"#3B82F6\" />\n            <View style={styles.recommendationContent}>\n              <Text style={styles.recommendationTitle}>Visibility</Text>\n              <Text style={styles.recommendationText}>\n                Reduced visibility due to smoke and particulates. Use caution when driving.\n              </Text>\n            </View>"}, {"id": "app/(tabs)/air-quality.tsx_10", "file": "app/(tabs)/air-quality.tsx", "content": "</Text>\n            </View>\n          </View>\n\n          <View style={styles.recommendationCard}>\n            <Wind size={20} color=\"#10B981\" />\n            <View style={styles.recommendationContent}>\n              <Text style={styles.recommendationTitle}>Indoor Air</Text>\n              <Text style={styles.recommendationText}>\n                Keep windows closed and use air purifiers. Avoid outdoor exercise.\n              </Text>\n            </View>\n          </View>\n\n          <View style={styles.recommendationCard}>\n            <Droplets size={20} color=\"#8B5CF6\" />\n            <View style={styles.recommendationContent}>\n              <Text style={styles.recommendationTitle}>Hydration</Text>\n              <Text style={styles.recommendationText}>"}, {"id": "app/(tabs)/air-quality.tsx_11", "file": "app/(tabs)/air-quality.tsx", "content": "<Text style={styles.recommendationText}>\n                Stay hydrated and consider wearing N95 masks when outdoors.\n              </Text>\n            </View>\n          </View>\n        </View>\n\n        <View style={styles.footer}>\n          <Text style={styles.footerText}>\n            Last updated: {new Date(airQuality.timestamp).toLocaleTimeString()}\n          </Text>\n          <TouchableOpacity onPress={loadAirQualityData} disabled={isLoading}>\n            <Text style={styles.refreshText}>Refresh</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  loadingText: {\n    color: '#FFFFFF',"}, {"id": "app/(tabs)/air-quality.tsx_12", "file": "app/(tabs)/air-quality.tsx", "content": "},\n  scrollView: {\n    flex: 1,\n  },\n  loadingText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    textAlign: 'center',\n    marginTop: 100,\n  },\n  header: {\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 8 : 20,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  location: {\n    fontSize: 16,\n    color: '#888',\n  },\n  mainCard: {\n    backgroundColor: '#1A1A1A',\n    margin: 20,\n    borderRadius: 16,\n    padding: 24,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  aqiContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n  },\n  aqiCircle: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    borderWidth: 4,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 20,"}, {"id": "app/(tabs)/air-quality.tsx_13", "file": "app/(tabs)/air-quality.tsx", "content": "borderWidth: 4,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 20,\n  },\n  aqiNumber: {\n    fontSize: 36,\n    fontWeight: 'bold',\n  },\n  aqiInfo: {\n    flex: 1,\n  },\n  aqiCategory: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 4,\n  },\n  primaryPollutant: {\n    fontSize: 16,\n    color: '#888',\n  },\n  healthAlert: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    backgroundColor: '#2A2A2A',\n    padding: 16,\n    borderRadius: 12,\n    gap: 12,\n  },\n  healthText: {\n    flex: 1,\n    color: '#FFFFFF',\n    fontSize: 14,\n    lineHeight: 20,\n  },\n  timeframeSelector: {\n    flexDirection: 'row',\n    margin: 20,\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 4,\n  },\n  timeframeButton: {\n    flex: 1,\n    paddingVertical: 12,"}, {"id": "app/(tabs)/air-quality.tsx_14", "file": "app/(tabs)/air-quality.tsx", "content": "padding: 4,\n  },\n  timeframeButton: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  timeframeButtonActive: {\n    backgroundColor: '#FF6B35',\n  },\n  timeframeText: {\n    color: '#888',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  timeframeTextActive: {\n    color: '#FFFFFF',\n  },\n  pollutantsSection: {\n    margin: 20,\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  pollutantGrid: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 12,\n  },\n  pollutantCard: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 16,\n    width: '47%',\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  pollutantName: {\n    fontSize: 14,"}, {"id": "app/(tabs)/air-quality.tsx_15", "file": "app/(tabs)/air-quality.tsx", "content": "borderWidth: 1,\n    borderColor: '#333',\n  },\n  pollutantName: {\n    fontSize: 14,\n    color: '#888',\n    marginBottom: 4,\n  },\n  pollutantValue: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  pollutantLevel: {\n    fontSize: 12,\n    fontWeight: '600',\n  },\n  recommendationsSection: {\n    margin: 20,\n  },\n  recommendationCard: {\n    flexDirection: 'row',\n    alignItems: 'flex-start',\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 12,\n    borderWidth: 1,\n    borderColor: '#333',\n    gap: 12,\n  },\n  recommendationContent: {\n    flex: 1,\n  },\n  recommendationTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  recommendationText: {\n    fontSize: 14,"}, {"id": "app/(tabs)/air-quality.tsx_16", "file": "app/(tabs)/air-quality.tsx", "content": "color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  recommendationText: {\n    fontSize: 14,\n    color: '#888',\n    lineHeight: 20,\n  },\n  footer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    margin: 20,\n    paddingTop: 20,\n    borderTopWidth: 1,\n    borderTopColor: '#333',\n  },\n  footerText: {\n    color: '#888',\n    fontSize: 14,\n  },\n  refreshText: {\n    color: '#FF6B35',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n});"}, {"id": "app/(tabs)/evacuation.tsx_0", "file": "app/(tabs)/evacuation.tsx", "content": "================================================\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  TouchableOpacity,\n  ScrollView,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { MapPin, Navigation, Clock, Users, Phone, Shield, TriangleAlert as AlertTriangle, CircleCheck as CheckCircle } from 'lucide-react-native';\n\ninterface Shelter {\n  id: string;\n  name: string;\n  address: string;\n  latitude: number;\n  longitude: number;\n  capacity: number;\n  occupied: number;\n  status: 'open' | 'full' | 'closed';\n  amenities: string[];\n  phoneNumber: string;\n  distance: number; // in miles\n}\n\ninterface EvacuationZone {\n  id: string;\n  name: string;\n  level: 'mandatory' | 'warning' | 'watch';\n  description: string;"}, {"id": "app/(tabs)/evacuation.tsx_1", "file": "app/(tabs)/evacuation.tsx", "content": "id: string;\n  name: string;\n  level: 'mandatory' | 'warning' | 'watch';\n  description: string;\n  affectedAreas: string[];\n  estimatedPopulation: number;\n}\n\nexport default function EvacuationScreen() {\n  const [shelters, setShelters] = useState<Shelter[]>([]);\n  const [evacuationZones, setEvacuationZones] = useState<EvacuationZone[]>([]);\n  const [selectedTab, setSelectedTab] = useState<'shelters' | 'zones' | 'routes'>('shelters');\n  const [userZone, setUserZone] = useState<EvacuationZone | null>(null);\n\n  useEffect(() => {\n    loadEvacuationData();\n  }, []);\n\n  const loadEvacuationData = async () => {\n    // Simulate API call to emergency services\n    const mockShelters: Shelter[] = [\n      {\n        id: '1',\n        name: 'Santa Monica Civic Center',"}, {"id": "app/(tabs)/evacuation.tsx_2", "file": "app/(tabs)/evacuation.tsx", "content": "{\n        id: '1',\n        name: 'Santa Monica Civic Center',\n        address: '1855 Main St, Santa Monica, CA 90401',\n        latitude: 34.0195,\n        longitude: -118.4912,\n        capacity: 500,\n        occupied: 287,\n        status: 'open',\n        amenities: ['Pet Friendly', 'Medical Support', 'Food Service', 'WiFi'],\n        phoneNumber: '(310) 458-8411',\n        distance: 2.3,\n      },\n      {\n        id: '2',\n        name: 'UCLA Pauley Pavilion',\n        address: '301 Westwood Plaza, Los Angeles, CA 90095',\n        latitude: 34.0722,\n        longitude: -118.4441,\n        capacity: 1000,\n        occupied: 892,\n        status: 'open',\n        amenities: ['Pet Friendly', 'Medical Support', 'Food Service', 'Showers'],\n        phoneNumber: '(310) 825-2101',"}, {"id": "app/(tabs)/evacuation.tsx_3", "file": "app/(tabs)/evacuation.tsx", "content": "phoneNumber: '(310) 825-2101',\n        distance: 5.7,\n      },\n      {\n        id: '3',\n        name: 'Malibu High School',\n        address: '30215 Morning View Dr, Malibu, CA 90265',\n        latitude: 34.0259,\n        longitude: -118.6847,\n        capacity: 300,\n        occupied: 300,\n        status: 'full',\n        amenities: ['Pet Friendly', 'Food Service'],\n        phoneNumber: '(310) 456-6621',\n        distance: 8.2,\n      },\n    ];\n\n    const mockZones: EvacuationZone[] = [\n      {\n        id: '1',\n        name: 'Pacific Palisades',\n        level: 'mandatory',\n        description: 'Immediate evacuation required due to approaching wildfire.',\n        affectedAreas: ['Palisades Village', 'Riviera', 'Highlands'],\n        estimatedPopulation: 25000,\n      },\n      {"}, {"id": "app/(tabs)/evacuation.tsx_4", "file": "app/(tabs)/evacuation.tsx", "content": "estimatedPopulation: 25000,\n      },\n      {\n        id: '2',\n        name: 'Malibu Canyon',\n        level: 'warning',\n        description: 'Prepare for possible evacuation. Stay alert for updates.',\n        affectedAreas: ['Malibu Canyon', 'Las Flores Canyon'],\n        estimatedPopulation: 8500,\n      },\n      {\n        id: '3',\n        name: 'Topanga',\n        level: 'watch',\n        description: 'Monitor conditions closely. Be ready to evacuate if ordered.',\n        affectedAreas: ['Topanga Canyon', 'Fernwood'],\n        estimatedPopulation: 12000,\n      },\n    ];\n\n    setShelters(mockShelters);\n    setEvacuationZones(mockZones);\n    setUserZone(mockZones[0]); // Simulate user being in mandatory evacuation zone\n  };\n\n  const getStatusColor = (status: string) => {"}, {"id": "app/(tabs)/evacuation.tsx_5", "file": "app/(tabs)/evacuation.tsx", "content": "};\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'open': return '#22C55E';\n      case 'full': return '#EAB308';\n      case 'closed': return '#EF4444';\n      default: return '#6B7280';\n    }\n  };\n\n  const getLevelColor = (level: string) => {\n    switch (level) {\n      case 'mandatory': return '#DC2626';\n      case 'warning': return '#EA580C';\n      case 'watch': return '#D97706';\n      default: return '#6B7280';\n    }\n  };\n\n  const handleGetDirections = (shelter: Shelter) => {\n    Alert.alert(\n      'Navigation',\n      `Get directions to ${shelter.name}?`,\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { text: 'Navigate', onPress: () => console.log('Opening navigation...') },\n      ]\n    );\n  };\n\n  const renderShelters = () => ("}, {"id": "app/(tabs)/evacuation.tsx_6", "file": "app/(tabs)/evacuation.tsx", "content": "]\n    );\n  };\n\n  const renderShelters = () => (\n    <ScrollView style={styles.tabContent} showsVerticalScrollIndicator={false}>\n      {shelters.map((shelter) => (\n        <View key={shelter.id} style={styles.shelterCard}>\n          <View style={styles.shelterHeader}>\n            <View style={styles.shelterInfo}>\n              <Text style={styles.shelterName}>{shelter.name}</Text>\n              <Text style={styles.shelterAddress}>{shelter.address}</Text>\n              <Text style={styles.shelterDistance}>{shelter.distance} miles away</Text>\n            </View>\n            <View style={[styles.statusBadge, { backgroundColor: getStatusColor(shelter.status) }]}>\n              <Text style={styles.statusText}>{shelter.status.toUpperCase()}</Text>\n            </View>\n          </View>"}, {"id": "app/(tabs)/evacuation.tsx_7", "file": "app/(tabs)/evacuation.tsx", "content": "</View>\n          </View>\n\n          <View style={styles.capacityInfo}>\n            <Users size={16} color=\"#888\" />\n            <Text style={styles.capacityText}>\n              {shelter.occupied}/{shelter.capacity} occupied\n            </Text>\n            <View style={styles.capacityBar}>\n              <View \n                style={[\n                  styles.capacityFill, \n                  { \n                    width: `${(shelter.occupied / shelter.capacity) * 100}%`,\n                    backgroundColor: shelter.status === 'full' ? '#EAB308' : '#22C55E'\n                  }\n                ]} \n              />\n            </View>\n          </View>\n\n          <View style={styles.amenitiesContainer}>\n            {shelter.amenities.map((amenity, index) => ("}, {"id": "app/(tabs)/evacuation.tsx_8", "file": "app/(tabs)/evacuation.tsx", "content": "{shelter.amenities.map((amenity, index) => (\n              <View key={index} style={styles.amenityTag}>\n                <Text style={styles.amenityText}>{amenity}</Text>\n              </View>\n            ))}\n          </View>\n\n          <View style={styles.shelterActions}>\n            <TouchableOpacity \n              style={styles.actionButton}\n              onPress={() => handleGetDirections(shelter)}\n              disabled={shelter.status === 'closed'}\n            >\n              <Navigation size={16} color=\"#FFFFFF\" />\n              <Text style={styles.actionButtonText}>Get Directions</Text>\n            </TouchableOpacity>\n            \n            <TouchableOpacity style={styles.secondaryButton}>\n              <Phone size={16} color=\"#FF6B35\" />"}, {"id": "app/(tabs)/evacuation.tsx_9", "file": "app/(tabs)/evacuation.tsx", "content": "<Phone size={16} color=\"#FF6B35\" />\n              <Text style={styles.secondaryButtonText}>Call</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      ))}\n    </ScrollView>\n  );\n\n  const renderZones = () => (\n    <ScrollView style={styles.tabContent} showsVerticalScrollIndicator={false}>\n      {userZone && (\n        <View style={[styles.userZoneCard, { borderColor: getLevelColor(userZone.level) }]}>\n          <View style={styles.zoneHeader}>\n            <AlertTriangle size={24} color={getLevelColor(userZone.level)} />\n            <Text style={styles.userZoneTitle}>Your Current Zone</Text>\n          </View>\n          <Text style={[styles.zoneLevel, { color: getLevelColor(userZone.level) }]}>\n            {userZone.level.toUpperCase()} EVACUATION"}, {"id": "app/(tabs)/evacuation.tsx_10", "file": "app/(tabs)/evacuation.tsx", "content": "{userZone.level.toUpperCase()} EVACUATION\n          </Text>\n          <Text style={styles.zoneName}>{userZone.name}</Text>\n          <Text style={styles.zoneDescription}>{userZone.description}</Text>\n        </View>\n      )}\n\n      {evacuationZones.map((zone) => (\n        <View key={zone.id} style={styles.zoneCard}>\n          <View style={styles.zoneHeader}>\n            <View style={styles.zoneInfo}>\n              <Text style={styles.zoneName}>{zone.name}</Text>\n              <Text style={[styles.zoneLevel, { color: getLevelColor(zone.level) }]}>\n                {zone.level.toUpperCase()}\n              </Text>\n            </View>\n            <View style={[styles.levelIndicator, { backgroundColor: getLevelColor(zone.level) }]} />\n          </View>"}, {"id": "app/(tabs)/evacuation.tsx_11", "file": "app/(tabs)/evacuation.tsx", "content": "</View>\n          \n          <Text style={styles.zoneDescription}>{zone.description}</Text>\n          \n          <View style={styles.zoneStats}>\n            <View style={styles.statItem}>\n              <Users size={16} color=\"#888\" />\n              <Text style={styles.statText}>\n                ~{zone.estimatedPopulation.toLocaleString()} people\n              </Text>\n            </View>\n            <View style={styles.statItem}>\n              <MapPin size={16} color=\"#888\" />\n              <Text style={styles.statText}>\n                {zone.affectedAreas.length} areas affected\n              </Text>\n            </View>\n          </View>\n          \n          <View style={styles.affectedAreas}>\n            <Text style={styles.areasTitle}>Affected Areas:</Text>"}, {"id": "app/(tabs)/evacuation.tsx_12", "file": "app/(tabs)/evacuation.tsx", "content": "<Text style={styles.areasTitle}>Affected Areas:</Text>\n            {zone.affectedAreas.map((area, index) => (\n              <Text key={index} style={styles.areaText}>\u00e2\u20ac\u00a2 {area}</Text>\n            ))}\n          </View>\n        </View>\n      ))}\n    </ScrollView>\n  );\n\n  const renderRoutes = () => (\n    <ScrollView style={styles.tabContent} showsVerticalScrollIndicator={false}>\n      <View style={styles.routeCard}>\n        <View style={styles.routeHeader}>\n          <Shield size={24} color=\"#22C55E\" />\n          <Text style={styles.routeTitle}>Recommended Evacuation Route</Text>\n        </View>\n        \n        <View style={styles.routeStep}>\n          <View style={styles.stepNumber}>\n            <Text style={styles.stepText}>1</Text>\n          </View>"}, {"id": "app/(tabs)/evacuation.tsx_13", "file": "app/(tabs)/evacuation.tsx", "content": "<Text style={styles.stepText}>1</Text>\n          </View>\n          <View style={styles.stepContent}>\n            <Text style={styles.stepTitle}>Head East on Pacific Coast Highway</Text>\n            <Text style={styles.stepDescription}>\n              Continue for 2.3 miles. Avoid Malibu Canyon Road (closed).\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.routeStep}>\n          <View style={styles.stepNumber}>\n            <Text style={styles.stepText}>2</Text>\n          </View>\n          <View style={styles.stepContent}>\n            <Text style={styles.stepTitle}>Turn North on 4th Street</Text>\n            <Text style={styles.stepDescription}>\n              Follow signs to Santa Monica Civic Center.\n            </Text>\n          </View>"}, {"id": "app/(tabs)/evacuation.tsx_14", "file": "app/(tabs)/evacuation.tsx", "content": "Follow signs to Santa Monica Civic Center.\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.routeStep}>\n          <View style={[styles.stepNumber, { backgroundColor: '#22C55E' }]}>\n            <CheckCircle size={16} color=\"#FFFFFF\" />\n          </View>\n          <View style={styles.stepContent}>\n            <Text style={styles.stepTitle}>Arrive at Safe Zone</Text>\n            <Text style={styles.stepDescription}>\n              Santa Monica Civic Center - 1855 Main St\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.routeInfo}>\n          <View style={styles.routeDetail}>\n            <Clock size={16} color=\"#888\" />\n            <Text style={styles.routeDetailText}>15-20 min estimated</Text>\n          </View>"}, {"id": "app/(tabs)/evacuation.tsx_15", "file": "app/(tabs)/evacuation.tsx", "content": "<Text style={styles.routeDetailText}>15-20 min estimated</Text>\n          </View>\n          <View style={styles.routeDetail}>\n            <MapPin size={16} color=\"#888\" />\n            <Text style={styles.routeDetailText}>7.2 miles total</Text>\n          </View>\n        </View>\n\n        <TouchableOpacity style={styles.startNavigationButton}>\n          <Navigation size={20} color=\"#FFFFFF\" />\n          <Text style={styles.startNavigationText}>Start Navigation</Text>\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.emergencyContacts}>\n        <Text style={styles.contactsTitle}>Emergency Contacts</Text>\n        \n        <TouchableOpacity style={styles.contactItem}>\n          <Phone size={20} color=\"#EF4444\" />\n          <View style={styles.contactInfo}>"}, {"id": "app/(tabs)/evacuation.tsx_16", "file": "app/(tabs)/evacuation.tsx", "content": "<Phone size={20} color=\"#EF4444\" />\n          <View style={styles.contactInfo}>\n            <Text style={styles.contactName}>Emergency Services</Text>\n            <Text style={styles.contactNumber}>911</Text>\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.contactItem}>\n          <Phone size={20} color=\"#3B82F6\" />\n          <View style={styles.contactInfo}>\n            <Text style={styles.contactName}>LA County Emergency</Text>\n            <Text style={styles.contactNumber}>(211) 211-2111</Text>\n          </View>\n        </TouchableOpacity>\n\n        <TouchableOpacity style={styles.contactItem}>\n          <Phone size={20} color=\"#10B981\" />\n          <View style={styles.contactInfo}>"}, {"id": "app/(tabs)/evacuation.tsx_17", "file": "app/(tabs)/evacuation.tsx", "content": "<Phone size={20} color=\"#10B981\" />\n          <View style={styles.contactInfo}>\n            <Text style={styles.contactName}>Red Cross Shelter Info</Text>\n            <Text style={styles.contactNumber}>(800) 733-2767</Text>\n          </View>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Evacuation Center</Text>\n        {userZone && (\n          <View style={[styles.alertBadge, { backgroundColor: getLevelColor(userZone.level) }]}>\n            <AlertTriangle size={16} color=\"#FFFFFF\" />\n            <Text style={styles.alertText}>{userZone.level.toUpperCase()}</Text>\n          </View>\n        )}\n      </View>"}, {"id": "app/(tabs)/evacuation.tsx_18", "file": "app/(tabs)/evacuation.tsx", "content": "</View>\n        )}\n      </View>\n\n      <View style={styles.tabSelector}>\n        {([\n          { key: 'shelters', label: 'Shelters' },\n          { key: 'zones', label: 'Zones' },\n          { key: 'routes', label: 'Routes' },\n        ] as const).map((tab) => (\n          <TouchableOpacity\n            key={tab.key}\n            style={[\n              styles.tabButton,\n              selectedTab === tab.key && styles.tabButtonActive,\n            ]}\n            onPress={() => setSelectedTab(tab.key)}\n          >\n            <Text\n              style={[\n                styles.tabText,\n                selectedTab === tab.key && styles.tabTextActive,\n              ]}\n            >\n              {tab.label}\n            </Text>\n          </TouchableOpacity>\n        ))}\n      </View>"}, {"id": "app/(tabs)/evacuation.tsx_19", "file": "app/(tabs)/evacuation.tsx", "content": "</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n\n      {selectedTab === 'shelters' && renderShelters()}\n      {selectedTab === 'zones' && renderZones()}\n      {selectedTab === 'routes' && renderRoutes()}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 8 : 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  alertBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 12,\n    paddingVertical: 6,\n    borderRadius: 16,\n    gap: 4,\n  },\n  alertText: {"}, {"id": "app/(tabs)/evacuation.tsx_20", "file": "app/(tabs)/evacuation.tsx", "content": "paddingVertical: 6,\n    borderRadius: 16,\n    gap: 4,\n  },\n  alertText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  tabSelector: {\n    flexDirection: 'row',\n    backgroundColor: '#1A1A1A',\n    margin: 20,\n    marginTop: 0,\n    borderRadius: 12,\n    padding: 4,\n  },\n  tabButton: {\n    flex: 1,\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderRadius: 8,\n    alignItems: 'center',\n  },\n  tabButtonActive: {\n    backgroundColor: '#FF6B35',\n  },\n  tabText: {\n    color: '#888',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  tabTextActive: {\n    color: '#FFFFFF',\n  },\n  tabContent: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  shelterCard: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 20,\n    marginBottom: 16,"}, {"id": "app/(tabs)/evacuation.tsx_21", "file": "app/(tabs)/evacuation.tsx", "content": "backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 20,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  shelterHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 16,\n  },\n  shelterInfo: {\n    flex: 1,\n  },\n  shelterName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  shelterAddress: {\n    fontSize: 14,\n    color: '#888',\n    marginBottom: 4,\n  },\n  shelterDistance: {\n    fontSize: 14,\n    color: '#666',\n  },\n  statusBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 8,\n  },\n  statusText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontWeight: 'bold',\n  },\n  capacityInfo: {\n    flexDirection: 'row',"}, {"id": "app/(tabs)/evacuation.tsx_22", "file": "app/(tabs)/evacuation.tsx", "content": "fontSize: 12,\n    fontWeight: 'bold',\n  },\n  capacityInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n    gap: 8,\n  },\n  capacityText: {\n    color: '#888',\n    fontSize: 14,\n  },\n  capacityBar: {\n    flex: 1,\n    height: 4,\n    backgroundColor: '#333',\n    borderRadius: 2,\n    marginLeft: 8,\n  },\n  capacityFill: {\n    height: '100%',\n    borderRadius: 2,\n  },\n  amenitiesContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    gap: 8,\n    marginBottom: 16,\n  },\n  amenityTag: {\n    backgroundColor: '#2A2A2A',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  amenityText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n  },\n  shelterActions: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  actionButton: {\n    flex: 1,"}, {"id": "app/(tabs)/evacuation.tsx_23", "file": "app/(tabs)/evacuation.tsx", "content": "},\n  shelterActions: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  actionButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#FF6B35',\n    borderRadius: 12,\n    padding: 12,\n    gap: 8,\n  },\n  actionButtonText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  secondaryButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2A2A2A',\n    borderRadius: 12,\n    padding: 12,\n    gap: 8,\n    minWidth: 80,\n  },\n  secondaryButtonText: {\n    color: '#FF6B35',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  userZoneCard: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 20,\n    marginBottom: 20,\n    borderWidth: 2,\n  },"}, {"id": "app/(tabs)/evacuation.tsx_24", "file": "app/(tabs)/evacuation.tsx", "content": "borderRadius: 16,\n    padding: 20,\n    marginBottom: 20,\n    borderWidth: 2,\n  },\n  userZoneTitle: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginLeft: 8,\n  },\n  zoneCard: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 20,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  zoneHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  zoneInfo: {\n    flex: 1,\n  },\n  zoneName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  zoneLevel: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  levelIndicator: {\n    width: 12,\n    height: 12,\n    borderRadius: 6,\n  },\n  zoneDescription: {\n    fontSize: 14,"}, {"id": "app/(tabs)/evacuation.tsx_25", "file": "app/(tabs)/evacuation.tsx", "content": "width: 12,\n    height: 12,\n    borderRadius: 6,\n  },\n  zoneDescription: {\n    fontSize: 14,\n    color: '#888',\n    marginBottom: 16,\n    lineHeight: 20,\n  },\n  zoneStats: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    gap: 16,\n  },\n  statItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  statText: {\n    color: '#888',\n    fontSize: 12,\n  },\n  affectedAreas: {\n    marginTop: 8,\n  },\n  areasTitle: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginBottom: 8,\n  },\n  areaText: {\n    fontSize: 14,\n    color: '#888',\n    marginBottom: 4,\n  },\n  routeCard: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 20,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  routeHeader: {"}, {"id": "app/(tabs)/evacuation.tsx_26", "file": "app/(tabs)/evacuation.tsx", "content": "marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  routeHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 20,\n    gap: 12,\n  },\n  routeTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  routeStep: {\n    flexDirection: 'row',\n    marginBottom: 16,\n    gap: 16,\n  },\n  stepNumber: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: '#333',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  stepText: {\n    color: '#FFFFFF',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n  stepContent: {\n    flex: 1,\n  },\n  stepTitle: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  stepDescription: {\n    fontSize: 14,\n    color: '#888',"}, {"id": "app/(tabs)/evacuation.tsx_27", "file": "app/(tabs)/evacuation.tsx", "content": "marginBottom: 4,\n  },\n  stepDescription: {\n    fontSize: 14,\n    color: '#888',\n    lineHeight: 20,\n  },\n  routeInfo: {\n    flexDirection: 'row',\n    marginTop: 16,\n    marginBottom: 20,\n    gap: 20,\n  },\n  routeDetail: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  routeDetailText: {\n    color: '#888',\n    fontSize: 14,\n  },\n  startNavigationButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#22C55E',\n    borderRadius: 12,\n    padding: 16,\n    gap: 8,\n  },\n  startNavigationText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  emergencyContacts: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 20,\n    marginBottom: 20,\n    borderWidth: 1,"}, {"id": "app/(tabs)/evacuation.tsx_28", "file": "app/(tabs)/evacuation.tsx", "content": "borderRadius: 16,\n    padding: 20,\n    marginBottom: 20,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  contactsTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  contactItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 12,\n    gap: 12,\n  },\n  contactInfo: {\n    flex: 1,\n  },\n  contactName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginBottom: 2,\n  },\n  contactNumber: {\n    fontSize: 14,\n    color: '#888',\n  },\n});"}, {"id": "app/(tabs)/index.tsx_0", "file": "app/(tabs)/index.tsx", "content": "================================================\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  TouchableOpacity,\n  ScrollView,\n  Platform,\n} from 'react-native';\nimport * as Location from 'expo-location';\nimport { TriangleAlert as AlertTriangle, Flame, Shield, Navigation, RefreshCw, Eye, EyeOff } from 'lucide-react-native';\n\ninterface WildfireData {\n  id: string;\n  name: string;\n  latitude: number;\n  longitude: number;\n  containment: number;\n  acres: number;\n  severity: 'low' | 'moderate' | 'high' | 'extreme';\n  coordinates: Array<{ latitude: number; longitude: number }>;\n}\n\nexport default function MapScreen() {\n  const [location, setLocation] = useState<Location.LocationObject | null>(null);"}, {"id": "app/(tabs)/index.tsx_1", "file": "app/(tabs)/index.tsx", "content": "const [location, setLocation] = useState<Location.LocationObject | null>(null);\n  const [wildfires, setWildfires] = useState<WildfireData[]>([]);\n  const [selectedFire, setSelectedFire] = useState<WildfireData | null>(null);\n  const [mapLayers, setMapLayers] = useState({\n    fires: true,\n    evacuation: true,\n    hazards: true,\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        return;\n      }\n\n      let currentLocation = await Location.getCurrentPositionAsync({});\n      setLocation(currentLocation);\n    })();\n\n    loadWildfireData();\n  }, []);\n\n  const loadWildfireData = async () => {\n    setIsLoading(true);"}, {"id": "app/(tabs)/index.tsx_2", "file": "app/(tabs)/index.tsx", "content": "loadWildfireData();\n  }, []);\n\n  const loadWildfireData = async () => {\n    setIsLoading(true);\n    // Simulate API call to NASA FIRMS or other wildfire data sources\n    setTimeout(() => {\n      const mockData: WildfireData[] = [\n        {\n          id: '1',\n          name: 'Palisades Fire',\n          latitude: 34.0522,\n          longitude: -118.2437,\n          containment: 23,\n          acres: 15420,\n          severity: 'extreme',\n          coordinates: [\n            { latitude: 34.0522, longitude: -118.2537 },\n            { latitude: 34.0622, longitude: -118.2337 },\n            { latitude: 34.0422, longitude: -118.2337 },\n            { latitude: 34.0422, longitude: -118.2537 },\n          ],\n        },\n        {\n          id: '2',\n          name: 'Angeles Fire',"}, {"id": "app/(tabs)/index.tsx_3", "file": "app/(tabs)/index.tsx", "content": "],\n        },\n        {\n          id: '2',\n          name: 'Angeles Fire',\n          latitude: 34.1022,\n          longitude: -118.1937,\n          containment: 67,\n          acres: 8930,\n          severity: 'moderate',\n          coordinates: [\n            { latitude: 34.1022, longitude: -118.2037 },\n            { latitude: 34.1122, longitude: -118.1837 },\n            { latitude: 34.0922, longitude: -118.1837 },\n            { latitude: 34.0922, longitude: -118.2037 },\n          ],\n        },\n      ];\n      setWildfires(mockData);\n      setIsLoading(false);\n    }, 1000);\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'extreme': return '#DC2626';\n      case 'high': return '#EA580C';\n      case 'moderate': return '#D97706';"}, {"id": "app/(tabs)/index.tsx_4", "file": "app/(tabs)/index.tsx", "content": "case 'high': return '#EA580C';\n      case 'moderate': return '#D97706';\n      case 'low': return '#65A30D';\n      default: return '#6B7280';\n    }\n  };\n\n  const toggleLayer = (layer: keyof typeof mapLayers) => {\n    setMapLayers(prev => ({ ...prev, [layer]: !prev[layer] }));\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Live Wildfire Map</Text>\n        <TouchableOpacity\n          style={styles.refreshButton}\n          onPress={loadWildfireData}\n          disabled={isLoading}\n        >\n          <RefreshCw size={20} color=\"#FF6B35\" />\n        </TouchableOpacity>\n      </View>\n\n      <View style={styles.layerControls}>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>"}, {"id": "app/(tabs)/index.tsx_5", "file": "app/(tabs)/index.tsx", "content": "<ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          <TouchableOpacity\n            style={[styles.layerButton, mapLayers.fires && styles.layerButtonActive]}\n            onPress={() => toggleLayer('fires')}\n          >\n            {mapLayers.fires ? <Eye size={16} color=\"#FFFFFF\" /> : <EyeOff size={16} color=\"#666\" />}\n            <Text style={[styles.layerText, mapLayers.fires && styles.layerTextActive]}>\n              Fires\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.layerButton, mapLayers.evacuation && styles.layerButtonActive]}\n            onPress={() => toggleLayer('evacuation')}\n          >"}, {"id": "app/(tabs)/index.tsx_6", "file": "app/(tabs)/index.tsx", "content": "onPress={() => toggleLayer('evacuation')}\n          >\n            {mapLayers.evacuation ? <Eye size={16} color=\"#FFFFFF\" /> : <EyeOff size={16} color=\"#666\" />}\n            <Text style={[styles.layerText, mapLayers.evacuation && styles.layerTextActive]}>\n              Evacuation\n            </Text>\n          </TouchableOpacity>\n          \n          <TouchableOpacity\n            style={[styles.layerButton, mapLayers.hazards && styles.layerButtonActive]}\n            onPress={() => toggleLayer('hazards')}\n          >\n            {mapLayers.hazards ? <Eye size={16} color=\"#FFFFFF\" /> : <EyeOff size={16} color=\"#666\" />}\n            <Text style={[styles.layerText, mapLayers.hazards && styles.layerTextActive]}>\n              Hazards\n            </Text>\n          </TouchableOpacity>"}, {"id": "app/(tabs)/index.tsx_7", "file": "app/(tabs)/index.tsx", "content": "Hazards\n            </Text>\n          </TouchableOpacity>\n        </ScrollView>\n      </View>\n\n      <View style={styles.mapContainer}>\n        <View style={styles.mapPlaceholder}>\n          <Text style={styles.mapPlaceholderText}>Interactive Map Loading...</Text>\n          <Text style={styles.mapPlaceholderSubtext}>\n            Wildfire data will be displayed here with real-time updates\n          </Text>\n          \n          {location && (\n            <View style={styles.locationInfo}>\n              <Text style={styles.locationText}>\n                Your Location: {location.coords.latitude.toFixed(4)}, {location.coords.longitude.toFixed(4)}\n              </Text>\n            </View>\n          )}"}, {"id": "app/(tabs)/index.tsx_8", "file": "app/(tabs)/index.tsx", "content": "</Text>\n            </View>\n          )}\n\n          <ScrollView style={styles.firesList} showsVerticalScrollIndicator={false}>\n            {wildfires.map((fire) => (\n              <TouchableOpacity\n                key={fire.id}\n                style={[styles.fireItem, selectedFire?.id === fire.id && styles.fireItemSelected]}\n                onPress={() => setSelectedFire(fire)}\n              >\n                <View style={styles.fireHeader}>\n                  <View style={[styles.fireMarker, { backgroundColor: getSeverityColor(fire.severity) }]}>\n                    <Flame size={16} color=\"#FFFFFF\" />\n                  </View>\n                  <View style={styles.fireInfo}>\n                    <Text style={styles.fireName}>{fire.name}</Text>"}, {"id": "app/(tabs)/index.tsx_9", "file": "app/(tabs)/index.tsx", "content": "<Text style={styles.fireName}>{fire.name}</Text>\n                    <Text style={styles.fireStats}>\n                      {fire.acres.toLocaleString()} acres \u00e2\u20ac\u00a2 {fire.containment}% contained\n                    </Text>\n                  </View>\n                  <View style={[styles.severityBadge, { backgroundColor: getSeverityColor(fire.severity) }]}>\n                    <Text style={styles.severityText}>{fire.severity.toUpperCase()}</Text>\n                  </View>\n                </View>\n              </TouchableOpacity>\n            ))}\n          </ScrollView>\n        </View>\n\n        {selectedFire && (\n          <View style={styles.fireDetails}>\n            <View style={styles.fireDetailsHeader}>\n              <View style={styles.fireDetailsInfo}>"}, {"id": "app/(tabs)/index.tsx_10", "file": "app/(tabs)/index.tsx", "content": "<View style={styles.fireDetailsInfo}>\n                <Text style={styles.fireDetailsName}>{selectedFire.name}</Text>\n                <Text style={styles.fireDetailsStats}>\n                  {selectedFire.acres.toLocaleString()} acres \u00e2\u20ac\u00a2 {selectedFire.containment}% contained\n                </Text>\n              </View>\n              <View style={[styles.severityBadge, { backgroundColor: getSeverityColor(selectedFire.severity) }]}>\n                <Text style={styles.severityText}>{selectedFire.severity.toUpperCase()}</Text>\n              </View>\n            </View>\n            \n            <View style={styles.fireActions}>\n              <TouchableOpacity style={styles.actionButton}>\n                <Shield size={16} color=\"#22C55E\" />"}, {"id": "app/(tabs)/index.tsx_11", "file": "app/(tabs)/index.tsx", "content": "<Shield size={16} color=\"#22C55E\" />\n                <Text style={styles.actionText}>Evacuation Info</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity style={styles.actionButton}>\n                <Navigation size={16} color=\"#3B82F6\" />\n                <Text style={styles.actionText}>Get Directions</Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n\n      <View style={styles.alertBanner}>\n        <AlertTriangle size={20} color=\"#FFD23F\" />\n        <Text style={styles.alertText}>\n          {wildfires.length} active fires in your area. Stay alert and follow evacuation orders.\n        </Text>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {"}, {"id": "app/(tabs)/index.tsx_12", "file": "app/(tabs)/index.tsx", "content": "</View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    paddingTop: Platform.OS === 'ios' ? 8 : 16,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  refreshButton: {\n    padding: 8,\n  },\n  layerControls: {\n    paddingHorizontal: 16,\n    paddingBottom: 8,\n  },\n  layerButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#1A1A1A',\n    borderRadius: 20,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    marginRight: 8,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  layerButtonActive: {"}, {"id": "app/(tabs)/index.tsx_13", "file": "app/(tabs)/index.tsx", "content": "marginRight: 8,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  layerButtonActive: {\n    backgroundColor: '#FF6B35',\n    borderColor: '#FF6B35',\n  },\n  layerText: {\n    color: '#666',\n    fontSize: 12,\n    fontWeight: '500',\n    marginLeft: 4,\n  },\n  layerTextActive: {\n    color: '#FFFFFF',\n  },\n  mapContainer: {\n    flex: 1,\n    position: 'relative',\n  },\n  mapPlaceholder: {\n    flex: 1,\n    backgroundColor: '#1A1A1A',\n    margin: 16,\n    borderRadius: 12,\n    padding: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mapPlaceholderText: {\n    color: '#FFFFFF',\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8,\n  },\n  mapPlaceholderSubtext: {\n    color: '#888',\n    fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  locationInfo: {"}, {"id": "app/(tabs)/index.tsx_14", "file": "app/(tabs)/index.tsx", "content": "fontSize: 14,\n    textAlign: 'center',\n    marginBottom: 20,\n  },\n  locationInfo: {\n    backgroundColor: '#2A2A2A',\n    padding: 12,\n    borderRadius: 8,\n    marginBottom: 20,\n  },\n  locationText: {\n    color: '#FFFFFF',\n    fontSize: 12,\n    fontFamily: 'monospace',\n  },\n  firesList: {\n    width: '100%',\n    maxHeight: 200,\n  },\n  fireItem: {\n    backgroundColor: '#2A2A2A',\n    borderRadius: 8,\n    padding: 12,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  fireItemSelected: {\n    borderColor: '#FF6B35',\n    backgroundColor: '#2A1A1A',\n  },\n  fireHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  fireMarker: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 12,"}, {"id": "app/(tabs)/index.tsx_15", "file": "app/(tabs)/index.tsx", "content": "borderRadius: 16,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 12,\n  },\n  fireInfo: {\n    flex: 1,\n  },\n  fireName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 2,\n  },\n  fireStats: {\n    fontSize: 12,\n    color: '#888',\n  },\n  severityBadge: {\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 8,\n  },\n  severityText: {\n    color: '#FFFFFF',\n    fontSize: 10,\n    fontWeight: 'bold',\n  },\n  fireDetails: {\n    position: 'absolute',\n    bottom: 16,\n    left: 16,\n    right: 16,\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  fireDetailsHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',"}, {"id": "app/(tabs)/index.tsx_16", "file": "app/(tabs)/index.tsx", "content": "},\n  fireDetailsHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  fireDetailsInfo: {\n    flex: 1,\n  },\n  fireDetailsName: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  fireDetailsStats: {\n    fontSize: 14,\n    color: '#888',\n  },\n  fireActions: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  actionButton: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#2A2A2A',\n    borderRadius: 8,\n    padding: 12,\n    gap: 8,\n  },\n  actionText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n  alertBanner: {\n    flexDirection: 'row',\n    alignItems: 'center',"}, {"id": "app/(tabs)/index.tsx_17", "file": "app/(tabs)/index.tsx", "content": "fontWeight: '500',\n  },\n  alertBanner: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#1A1A1A',\n    padding: 16,\n    gap: 12,\n    borderTopWidth: 1,\n    borderTopColor: '#333',\n  },\n  alertText: {\n    flex: 1,\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '500',\n  },\n});"}, {"id": "app/(tabs)/profile.tsx_0", "file": "app/(tabs)/profile.tsx", "content": "================================================\nimport React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  TouchableOpacity,\n  ScrollView,\n  Switch,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { router } from 'expo-router';\nimport { User, Bell, MapPin, Shield, Settings, LogOut, ChevronRight, Moon, Smartphone, TriangleAlert as AlertTriangle, Heart } from 'lucide-react-native';\n\ninterface NotificationSettings {\n  emergencyAlerts: boolean;\n  evacuationUpdates: boolean;\n  airQualityWarnings: boolean;\n  communityUpdates: boolean;\n  pushNotifications: boolean;\n}\n\nexport default function ProfileScreen() {\n  const [notificationSettings, setNotificationSettings] = useState<NotificationSettings>({\n    emergencyAlerts: true,\n    evacuationUpdates: true,"}, {"id": "app/(tabs)/profile.tsx_1", "file": "app/(tabs)/profile.tsx", "content": "emergencyAlerts: true,\n    evacuationUpdates: true,\n    airQualityWarnings: true,\n    communityUpdates: false,\n    pushNotifications: true,\n  });\n\n  const [locationSettings, setLocationSettings] = useState({\n    preciseLocation: true,\n    backgroundLocation: true,\n  });\n\n  const user = {\n    name: 'John Doe',\n    email: 'john.doe@email.com',\n    role: 'Citizen',\n    joinDate: 'January 2024',\n    location: 'Los Angeles, CA',\n  };\n\n  const toggleNotification = (key: keyof NotificationSettings) => {\n    setNotificationSettings(prev => ({\n      ...prev,\n      [key]: !prev[key],\n    }));\n  };\n\n  const toggleLocation = (key: keyof typeof locationSettings) => {\n    setLocationSettings(prev => ({\n      ...prev,\n      [key]: !prev[key],\n    }));\n  };\n\n  const handleLogout = () => {"}, {"id": "app/(tabs)/profile.tsx_2", "file": "app/(tabs)/profile.tsx", "content": "...prev,\n      [key]: !prev[key],\n    }));\n  };\n\n  const handleLogout = () => {\n    Alert.alert(\n      'Sign Out',\n      'Are you sure you want to sign out?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { \n          text: 'Sign Out', \n          style: 'destructive',\n          onPress: () => router.replace('/(auth)/login')\n        },\n      ]\n    );\n  };\n\n  const handleEmergencyContact = () => {\n    Alert.alert(\n      'Emergency Contact',\n      'This will call 911. Continue?',\n      [\n        { text: 'Cancel', style: 'cancel' },\n        { text: 'Call 911', style: 'destructive', onPress: () => console.log('Calling 911...') },\n      ]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>"}, {"id": "app/(tabs)/profile.tsx_3", "file": "app/(tabs)/profile.tsx", "content": "]\n    );\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <ScrollView style={styles.scrollView} showsVerticalScrollIndicator={false}>\n        <View style={styles.header}>\n          <Text style={styles.title}>Profile</Text>\n          <TouchableOpacity style={styles.settingsButton}>\n            <Settings size={24} color=\"#FFFFFF\" />\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.profileCard}>\n          <View style={styles.avatarContainer}>\n            <View style={styles.avatar}>\n              <User size={32} color=\"#FFFFFF\" />\n            </View>\n            <View style={styles.profileInfo}>\n              <Text style={styles.userName}>{user.name}</Text>\n              <Text style={styles.userEmail}>{user.email}</Text>"}, {"id": "app/(tabs)/profile.tsx_4", "file": "app/(tabs)/profile.tsx", "content": "<Text style={styles.userEmail}>{user.email}</Text>\n              <Text style={styles.userRole}>{user.role} \u00e2\u20ac\u00a2 Member since {user.joinDate}</Text>\n            </View>\n          </View>\n          \n          <View style={styles.locationInfo}>\n            <MapPin size={16} color=\"#888\" />\n            <Text style={styles.locationText}>{user.location}</Text>\n          </View>\n        </View>\n\n        <View style={styles.emergencySection}>\n          <TouchableOpacity \n            style={styles.emergencyButton}\n            onPress={handleEmergencyContact}\n          >\n            <AlertTriangle size={24} color=\"#FFFFFF\" />\n            <Text style={styles.emergencyText}>Emergency Contact</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.section}>"}, {"id": "app/(tabs)/profile.tsx_5", "file": "app/(tabs)/profile.tsx", "content": "</TouchableOpacity>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Notifications</Text>\n          \n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <Bell size={20} color=\"#FF6B35\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Emergency Alerts</Text>\n                <Text style={styles.settingDescription}>\n                  Critical fire and evacuation alerts\n                </Text>\n              </View>\n            </View>\n            <Switch\n              value={notificationSettings.emergencyAlerts}\n              onValueChange={() => toggleNotification('emergencyAlerts')}"}, {"id": "app/(tabs)/profile.tsx_6", "file": "app/(tabs)/profile.tsx", "content": "onValueChange={() => toggleNotification('emergencyAlerts')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n\n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <Shield size={20} color=\"#22C55E\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Evacuation Updates</Text>\n                <Text style={styles.settingDescription}>\n                  Zone changes and route updates\n                </Text>\n              </View>\n            </View>\n            <Switch\n              value={notificationSettings.evacuationUpdates}\n              onValueChange={() => toggleNotification('evacuationUpdates')}"}, {"id": "app/(tabs)/profile.tsx_7", "file": "app/(tabs)/profile.tsx", "content": "onValueChange={() => toggleNotification('evacuationUpdates')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n\n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <Moon size={20} color=\"#8B5CF6\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Air Quality Warnings</Text>\n                <Text style={styles.settingDescription}>\n                  Unhealthy air quality notifications\n                </Text>\n              </View>\n            </View>\n            <Switch\n              value={notificationSettings.airQualityWarnings}"}, {"id": "app/(tabs)/profile.tsx_8", "file": "app/(tabs)/profile.tsx", "content": "<Switch\n              value={notificationSettings.airQualityWarnings}\n              onValueChange={() => toggleNotification('airQualityWarnings')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n\n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <User size={20} color=\"#3B82F6\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Community Updates</Text>\n                <Text style={styles.settingDescription}>\n                  Nearby community posts and reports\n                </Text>\n              </View>\n            </View>\n            <Switch"}, {"id": "app/(tabs)/profile.tsx_9", "file": "app/(tabs)/profile.tsx", "content": "</Text>\n              </View>\n            </View>\n            <Switch\n              value={notificationSettings.communityUpdates}\n              onValueChange={() => toggleNotification('communityUpdates')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n\n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <Smartphone size={20} color=\"#10B981\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Push Notifications</Text>\n                <Text style={styles.settingDescription}>\n                  Allow notifications on this device\n                </Text>\n              </View>\n            </View>"}, {"id": "app/(tabs)/profile.tsx_10", "file": "app/(tabs)/profile.tsx", "content": "</Text>\n              </View>\n            </View>\n            <Switch\n              value={notificationSettings.pushNotifications}\n              onValueChange={() => toggleNotification('pushNotifications')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Location & Privacy</Text>\n          \n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <MapPin size={20} color=\"#F97316\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Precise Location</Text>"}, {"id": "app/(tabs)/profile.tsx_11", "file": "app/(tabs)/profile.tsx", "content": "<Text style={styles.settingName}>Precise Location</Text>\n                <Text style={styles.settingDescription}>\n                  Accurate location for emergency services\n                </Text>\n              </View>\n            </View>\n            <Switch\n              value={locationSettings.preciseLocation}\n              onValueChange={() => toggleLocation('preciseLocation')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n\n          <View style={styles.settingItem}>\n            <View style={styles.settingInfo}>\n              <Shield size={20} color=\"#EAB308\" />\n              <View style={styles.settingText}>\n                <Text style={styles.settingName}>Background Location</Text>"}, {"id": "app/(tabs)/profile.tsx_12", "file": "app/(tabs)/profile.tsx", "content": "<Text style={styles.settingName}>Background Location</Text>\n                <Text style={styles.settingDescription}>\n                  Location updates when app is closed\n                </Text>\n              </View>\n            </View>\n            <Switch\n              value={locationSettings.backgroundLocation}\n              onValueChange={() => toggleLocation('backgroundLocation')}\n              trackColor={{ false: '#333', true: '#FF6B35' }}\n              thumbColor=\"#FFFFFF\"\n            />\n          </View>\n        </View>\n\n        <View style={styles.section}>\n          <Text style={styles.sectionTitle}>Support</Text>\n          \n          <TouchableOpacity style={styles.menuItem}>\n            <Heart size={20} color=\"#EF4444\" />"}, {"id": "app/(tabs)/profile.tsx_13", "file": "app/(tabs)/profile.tsx", "content": "<Heart size={20} color=\"#EF4444\" />\n            <Text style={styles.menuText}>Emergency Contacts</Text>\n            <ChevronRight size={20} color=\"#666\" />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.menuItem}>\n            <Shield size={20} color=\"#3B82F6\" />\n            <Text style={styles.menuText}>Privacy Policy</Text>\n            <ChevronRight size={20} color=\"#666\" />\n          </TouchableOpacity>\n\n          <TouchableOpacity style={styles.menuItem}>\n            <Settings size={20} color=\"#10B981\" />\n            <Text style={styles.menuText}>Help & Support</Text>\n            <ChevronRight size={20} color=\"#666\" />\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.section}>"}, {"id": "app/(tabs)/profile.tsx_14", "file": "app/(tabs)/profile.tsx", "content": "</TouchableOpacity>\n        </View>\n\n        <View style={styles.section}>\n          <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\n            <LogOut size={20} color=\"#EF4444\" />\n            <Text style={styles.logoutText}>Sign Out</Text>\n          </TouchableOpacity>\n        </View>\n\n        <View style={styles.footer}>\n          <Text style={styles.footerText}>WildSafe Emergency Response v1.0.0</Text>\n          <Text style={styles.footerText}>Built for community safety</Text>\n        </View>\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  scrollView: {\n    flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',"}, {"id": "app/(tabs)/profile.tsx_15", "file": "app/(tabs)/profile.tsx", "content": "flex: 1,\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 8 : 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  settingsButton: {\n    padding: 4,\n  },\n  profileCard: {\n    backgroundColor: '#1A1A1A',\n    margin: 20,\n    marginTop: 0,\n    borderRadius: 16,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  avatarContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 16,\n  },\n  avatar: {\n    width: 64,\n    height: 64,\n    borderRadius: 32,\n    backgroundColor: '#FF6B35',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 16,\n  },\n  profileInfo: {\n    flex: 1,\n  },"}, {"id": "app/(tabs)/profile.tsx_16", "file": "app/(tabs)/profile.tsx", "content": "justifyContent: 'center',\n    marginRight: 16,\n  },\n  profileInfo: {\n    flex: 1,\n  },\n  userName: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 4,\n  },\n  userEmail: {\n    fontSize: 14,\n    color: '#888',\n    marginBottom: 4,\n  },\n  userRole: {\n    fontSize: 12,\n    color: '#666',\n  },\n  locationInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 8,\n  },\n  locationText: {\n    fontSize: 14,\n    color: '#888',\n  },\n  emergencySection: {\n    margin: 20,\n    marginTop: 0,\n  },\n  emergencyButton: {\n    backgroundColor: '#DC2626',\n    borderRadius: 12,\n    padding: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 12,\n  },\n  emergencyText: {\n    color: '#FFFFFF',\n    fontSize: 16,"}, {"id": "app/(tabs)/profile.tsx_17", "file": "app/(tabs)/profile.tsx", "content": "gap: 12,\n  },\n  emergencyText: {\n    color: '#FFFFFF',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n  section: {\n    margin: 20,\n    marginTop: 0,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  settingItem: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  settingInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flex: 1,\n    gap: 12,\n  },\n  settingText: {\n    flex: 1,\n  },\n  settingName: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginBottom: 2,\n  },\n  settingDescription: {\n    fontSize: 12,"}, {"id": "app/(tabs)/profile.tsx_18", "file": "app/(tabs)/profile.tsx", "content": "color: '#FFFFFF',\n    marginBottom: 2,\n  },\n  settingDescription: {\n    fontSize: 12,\n    color: '#888',\n    lineHeight: 16,\n  },\n  menuItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 16,\n    marginBottom: 8,\n    borderWidth: 1,\n    borderColor: '#333',\n    gap: 12,\n  },\n  menuText: {\n    flex: 1,\n    fontSize: 16,\n    color: '#FFFFFF',\n    fontWeight: '500',\n  },\n  logoutButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#1A1A1A',\n    borderRadius: 12,\n    padding: 16,\n    borderWidth: 1,\n    borderColor: '#333',\n    gap: 12,\n  },\n  logoutText: {\n    fontSize: 16,\n    color: '#EF4444',\n    fontWeight: '600',\n  },\n  footer: {"}, {"id": "app/(tabs)/profile.tsx_19", "file": "app/(tabs)/profile.tsx", "content": "logoutText: {\n    fontSize: 16,\n    color: '#EF4444',\n    fontWeight: '600',\n  },\n  footer: {\n    alignItems: 'center',\n    padding: 20,\n    paddingBottom: 40,\n  },\n  footerText: {\n    fontSize: 12,\n    color: '#666',\n    marginBottom: 4,\n  },\n});"}, {"id": "app/(tabs)/updates.tsx_0", "file": "app/(tabs)/updates.tsx", "content": "================================================\nimport React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  TouchableOpacity,\n  ScrollView,\n  TextInput,\n  Platform,\n  Alert,\n} from 'react-native';\nimport { MessageSquare, Plus, MapPin, Clock, TriangleAlert as AlertTriangle, CircleCheck as CheckCircle, User, Send } from 'lucide-react-native';\n\ninterface Update {\n  id: string;\n  author: string;\n  role: 'citizen' | 'official' | 'responder';\n  content: string;\n  location: string;\n  latitude: number;\n  longitude: number;\n  timestamp: string;\n  verified: boolean;\n  category: 'road_closure' | 'fire_sighting' | 'evacuation' | 'safety' | 'resources';\n  likes: number;\n  reports: number;\n}\n\nexport default function UpdatesScreen() {"}, {"id": "app/(tabs)/updates.tsx_1", "file": "app/(tabs)/updates.tsx", "content": "likes: number;\n  reports: number;\n}\n\nexport default function UpdatesScreen() {\n  const [updates, setUpdates] = useState<Update[]>([]);\n  const [selectedCategory, setSelectedCategory] = useState<string>('all');\n  const [isComposing, setIsComposing] = useState(false);\n  const [newUpdate, setNewUpdate] = useState({\n    content: '',\n    category: 'safety' as Update['category'],\n    location: '',\n  });\n\n  useEffect(() => {\n    loadUpdates();\n  }, []);\n\n  const loadUpdates = async () => {\n    // Simulate API call to get community updates\n    const mockUpdates: Update[] = [\n      {\n        id: '1',\n        author: 'LA Fire Department',\n        role: 'official',"}, {"id": "app/(tabs)/updates.tsx_2", "file": "app/(tabs)/updates.tsx", "content": "{\n        id: '1',\n        author: 'LA Fire Department',\n        role: 'official',\n        content: 'Palisades Fire containment increased to 23%. Evacuation orders remain in effect for zones A-C. Residents in zone D should prepare for possible evacuation.',\n        location: 'Pacific Palisades',\n        latitude: 34.0522,\n        longitude: -118.2437,\n        timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n        verified: true,\n        category: 'evacuation',\n        likes: 156,\n        reports: 0,\n      },\n      {\n        id: '2',\n        author: 'Sarah Martinez',\n        role: 'citizen',\n        content: 'PCH is completely blocked between Topanga and Malibu Canyon. Emergency vehicles only. Heavy smoke, zero visibility.',\n        location: 'Pacific Coast Highway',"}, {"id": "app/(tabs)/updates.tsx_3", "file": "app/(tabs)/updates.tsx", "content": "location: 'Pacific Coast Highway',\n        latitude: 34.0359,\n        longitude: -118.6847,\n        timestamp: new Date(Date.now() - 45 * 60 * 1000).toISOString(),\n        verified: true,\n        category: 'road_closure',\n        likes: 89,\n        reports: 2,\n      },\n      {\n        id: '3',\n        author: 'Emergency Responder',\n        role: 'responder',\n        content: 'New spot fire reported near Will Rogers State Park. Crews are responding. Hikers should evacuate the area immediately.',\n        location: 'Will Rogers State Park',\n        latitude: 34.0522,\n        longitude: -118.5014,\n        timestamp: new Date(Date.now() - 20 * 60 * 1000).toISOString(),\n        verified: true,\n        category: 'fire_sighting',\n        likes: 203,\n        reports: 0,\n      },\n      {"}, {"id": "app/(tabs)/updates.tsx_4", "file": "app/(tabs)/updates.tsx", "content": "category: 'fire_sighting',\n        likes: 203,\n        reports: 0,\n      },\n      {\n        id: '4',\n        author: 'Mike Chen',\n        role: 'citizen',\n        content: 'Santa Monica Civic Center shelter has space available. They have pet accommodations and medical support on site.',\n        location: 'Santa Monica',\n        latitude: 34.0195,\n        longitude: -118.4912,\n        timestamp: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\n        verified: false,\n        category: 'resources',\n        likes: 67,\n        reports: 0,\n      },\n    ];\n    setUpdates(mockUpdates);\n  };\n\n  const categories = [\n    { key: 'all', label: 'All Updates', icon: MessageSquare },\n    { key: 'evacuation', label: 'Evacuation', icon: AlertTriangle },"}, {"id": "app/(tabs)/updates.tsx_5", "file": "app/(tabs)/updates.tsx", "content": "{ key: 'evacuation', label: 'Evacuation', icon: AlertTriangle },\n    { key: 'road_closure', label: 'Road Closures', icon: MapPin },\n    { key: 'fire_sighting', label: 'Fire Sightings', icon: AlertTriangle },\n    { key: 'safety', label: 'Safety', icon: CheckCircle },\n    { key: 'resources', label: 'Resources', icon: CheckCircle },\n  ];\n\n  const getRoleColor = (role: Update['role']) => {\n    switch (role) {\n      case 'official': return '#3B82F6';\n      case 'responder': return '#10B981';\n      case 'citizen': return '#8B5CF6';\n      default: return '#6B7280';\n    }\n  };\n\n  const getCategoryColor = (category: Update['category']) => {\n    switch (category) {\n      case 'evacuation': return '#DC2626';\n      case 'road_closure': return '#EA580C';"}, {"id": "app/(tabs)/updates.tsx_6", "file": "app/(tabs)/updates.tsx", "content": "case 'evacuation': return '#DC2626';\n      case 'road_closure': return '#EA580C';\n      case 'fire_sighting': return '#EF4444';\n      case 'safety': return '#22C55E';\n      case 'resources': return '#3B82F6';\n      default: return '#6B7280';\n    }\n  };\n\n  const handleSubmitUpdate = () => {\n    if (!newUpdate.content.trim()) {\n      Alert.alert('Error', 'Please enter update content');\n      return;\n    }\n\n    const update: Update = {\n      id: Date.now().toString(),\n      author: 'You',\n      role: 'citizen',\n      content: newUpdate.content,\n      location: newUpdate.location || 'Your Location',\n      latitude: 34.0522,\n      longitude: -118.2437,\n      timestamp: new Date().toISOString(),\n      verified: false,\n      category: newUpdate.category,\n      likes: 0,\n      reports: 0,"}, {"id": "app/(tabs)/updates.tsx_7", "file": "app/(tabs)/updates.tsx", "content": "verified: false,\n      category: newUpdate.category,\n      likes: 0,\n      reports: 0,\n    };\n\n    setUpdates(prev => [update, ...prev]);\n    setNewUpdate({ content: '', category: 'safety', location: '' });\n    setIsComposing(false);\n    \n    Alert.alert('Success', 'Your update has been posted and is pending verification.');\n  };\n\n  const filteredUpdates = selectedCategory === 'all' \n    ? updates \n    : updates.filter(update => update.category === selectedCategory);\n\n  const timeAgo = (timestamp: string) => {\n    const now = new Date().getTime();\n    const updateTime = new Date(timestamp).getTime();\n    const diffMinutes = Math.floor((now - updateTime) / (1000 * 60));\n    \n    if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;"}, {"id": "app/(tabs)/updates.tsx_8", "file": "app/(tabs)/updates.tsx", "content": "if (diffMinutes < 1) return 'Just now';\n    if (diffMinutes < 60) return `${diffMinutes}m ago`;\n    const diffHours = Math.floor(diffMinutes / 60);\n    if (diffHours < 24) return `${diffHours}h ago`;\n    const diffDays = Math.floor(diffHours / 24);\n    return `${diffDays}d ago`;\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Community Updates</Text>\n        <TouchableOpacity\n          style={styles.composeButton}\n          onPress={() => setIsComposing(true)}\n        >\n          <Plus size={20} color=\"#FFFFFF\" />\n        </TouchableOpacity>\n      </View>\n\n      <ScrollView \n        horizontal \n        style={styles.categorySelector}\n        showsHorizontalScrollIndicator={false}\n      >"}, {"id": "app/(tabs)/updates.tsx_9", "file": "app/(tabs)/updates.tsx", "content": "style={styles.categorySelector}\n        showsHorizontalScrollIndicator={false}\n      >\n        {categories.map((category) => {\n          const IconComponent = category.icon;\n          return (\n            <TouchableOpacity\n              key={category.key}\n              style={[\n                styles.categoryButton,\n                selectedCategory === category.key && styles.categoryButtonActive,\n              ]}\n              onPress={() => setSelectedCategory(category.key)}\n            >\n              <IconComponent \n                size={16} \n                color={selectedCategory === category.key ? '#FFFFFF' : '#666'} \n              />\n              <Text\n                style={[\n                  styles.categoryText,"}, {"id": "app/(tabs)/updates.tsx_10", "file": "app/(tabs)/updates.tsx", "content": "<Text\n                style={[\n                  styles.categoryText,\n                  selectedCategory === category.key && styles.categoryTextActive,\n                ]}\n              >\n                {category.label}\n              </Text>\n            </TouchableOpacity>\n          );\n        })}\n      </ScrollView>\n\n      {isComposing && (\n        <View style={styles.composeCard}>\n          <Text style={styles.composeTitle}>Post Update</Text>\n          \n          <View style={styles.categoryPicker}>\n            <Text style={styles.fieldLabel}>Category</Text>\n            <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n              {categories.slice(1).map((category) => (\n                <TouchableOpacity\n                  key={category.key}"}, {"id": "app/(tabs)/updates.tsx_11", "file": "app/(tabs)/updates.tsx", "content": "<TouchableOpacity\n                  key={category.key}\n                  style={[\n                    styles.categoryChip,\n                    newUpdate.category === category.key && styles.categoryChipActive,\n                  ]}\n                  onPress={() => setNewUpdate(prev => ({ ...prev, category: category.key as Update['category'] }))}\n                >\n                  <Text\n                    style={[\n                      styles.categoryChipText,\n                      newUpdate.category === category.key && styles.categoryChipTextActive,\n                    ]}\n                  >\n                    {category.label}\n                  </Text>\n                </TouchableOpacity>\n              ))}\n            </ScrollView>\n          </View>"}, {"id": "app/(tabs)/updates.tsx_12", "file": "app/(tabs)/updates.tsx", "content": "</TouchableOpacity>\n              ))}\n            </ScrollView>\n          </View>\n\n          <View style={styles.inputGroup}>\n            <Text style={styles.fieldLabel}>Location (Optional)</Text>\n            <TextInput\n              style={styles.locationInput}\n              value={newUpdate.location}\n              onChangeText={(text) => setNewUpdate(prev => ({ ...prev, location: text }))}\n              placeholder=\"Enter location...\"\n              placeholderTextColor=\"#666\"\n            />\n          </View>\n\n          <View style={styles.inputGroup}>\n            <Text style={styles.fieldLabel}>Update Content</Text>\n            <TextInput\n              style={styles.contentInput}\n              value={newUpdate.content}"}, {"id": "app/(tabs)/updates.tsx_13", "file": "app/(tabs)/updates.tsx", "content": "style={styles.contentInput}\n              value={newUpdate.content}\n              onChangeText={(text) => setNewUpdate(prev => ({ ...prev, content: text }))}\n              placeholder=\"What's happening in your area? Be specific and factual...\"\n              placeholderTextColor=\"#666\"\n              multiline\n              numberOfLines={4}\n            />\n          </View>\n\n          <View style={styles.composeActions}>\n            <TouchableOpacity\n              style={styles.cancelButton}\n              onPress={() => setIsComposing(false)}\n            >\n              <Text style={styles.cancelButtonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.submitButton}\n              onPress={handleSubmitUpdate}"}, {"id": "app/(tabs)/updates.tsx_14", "file": "app/(tabs)/updates.tsx", "content": "style={styles.submitButton}\n              onPress={handleSubmitUpdate}\n            >\n              <Send size={16} color=\"#FFFFFF\" />\n              <Text style={styles.submitButtonText}>Post Update</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n      )}\n\n      <ScrollView style={styles.updatesList} showsVerticalScrollIndicator={false}>\n        {filteredUpdates.map((update) => (\n          <View key={update.id} style={styles.updateCard}>\n            <View style={styles.updateHeader}>\n              <View style={styles.authorInfo}>\n                <View style={[styles.roleIndicator, { backgroundColor: getRoleColor(update.role) }]}>\n                  <User size={16} color=\"#FFFFFF\" />\n                </View>"}, {"id": "app/(tabs)/updates.tsx_15", "file": "app/(tabs)/updates.tsx", "content": "<User size={16} color=\"#FFFFFF\" />\n                </View>\n                <View style={styles.authorDetails}>\n                  <View style={styles.authorNameRow}>\n                    <Text style={styles.authorName}>{update.author}</Text>\n                    {update.verified && (\n                      <CheckCircle size={16} color=\"#22C55E\" />\n                    )}\n                  </View>\n                  <Text style={styles.authorRole}>{update.role.charAt(0).toUpperCase() + update.role.slice(1)}</Text>\n                </View>\n              </View>\n              <Text style={styles.timestamp}>{timeAgo(update.timestamp)}</Text>\n            </View>\n\n            <View style={styles.updateContent}>\n              <View style={styles.categoryBadge}>"}, {"id": "app/(tabs)/updates.tsx_16", "file": "app/(tabs)/updates.tsx", "content": "<View style={styles.updateContent}>\n              <View style={styles.categoryBadge}>\n                <View style={[styles.categoryDot, { backgroundColor: getCategoryColor(update.category) }]} />\n                <Text style={styles.categoryLabel}>\n                  {update.category.replace('_', ' ').toUpperCase()}\n                </Text>\n              </View>\n              \n              <Text style={styles.updateText}>{update.content}</Text>\n\n              {update.location && (\n                <View style={styles.locationInfo}>\n                  <MapPin size={14} color=\"#888\" />\n                  <Text style={styles.locationText}>{update.location}</Text>\n                </View>\n              )}\n            </View>\n\n            <View style={styles.updateActions}>"}, {"id": "app/(tabs)/updates.tsx_17", "file": "app/(tabs)/updates.tsx", "content": ")}\n            </View>\n\n            <View style={styles.updateActions}>\n              <TouchableOpacity style={styles.actionItem}>\n                <Text style={styles.actionCount}>{update.likes}</Text>\n                <Text style={styles.actionLabel}>Helpful</Text>\n              </TouchableOpacity>\n              \n              <TouchableOpacity style={styles.actionItem}>\n                <MapPin size={16} color=\"#666\" />\n                <Text style={styles.actionLabel}>View on Map</Text>\n              </TouchableOpacity>\n\n              {update.reports > 0 && (\n                <TouchableOpacity style={styles.actionItem}>\n                  <AlertTriangle size={16} color=\"#EAB308\" />\n                  <Text style={styles.actionLabel}>{update.reports} reports</Text>"}, {"id": "app/(tabs)/updates.tsx_18", "file": "app/(tabs)/updates.tsx", "content": "<Text style={styles.actionLabel}>{update.reports} reports</Text>\n                </TouchableOpacity>\n              )}\n            </View>\n          </View>\n        ))}\n      </ScrollView>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0F0F0F',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 20,\n    paddingTop: Platform.OS === 'ios' ? 8 : 20,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  composeButton: {\n    backgroundColor: '#FF6B35',\n    borderRadius: 20,\n    width: 40,\n    height: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  categorySelector: {\n    paddingHorizontal: 20,"}, {"id": "app/(tabs)/updates.tsx_19", "file": "app/(tabs)/updates.tsx", "content": "justifyContent: 'center',\n  },\n  categorySelector: {\n    paddingHorizontal: 20,\n    paddingBottom: 16,\n    maxHeight: 60,\n  },\n  categoryButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#1A1A1A',\n    borderRadius: 20,\n    paddingVertical: 8,\n    paddingHorizontal: 12,\n    marginRight: 8,\n    borderWidth: 1,\n    borderColor: '#333',\n    gap: 6,\n  },\n  categoryButtonActive: {\n    backgroundColor: '#FF6B35',\n    borderColor: '#FF6B35',\n  },\n  categoryText: {\n    color: '#666',\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  categoryTextActive: {\n    color: '#FFFFFF',\n  },\n  composeCard: {\n    backgroundColor: '#1A1A1A',\n    margin: 20,\n    marginTop: 0,\n    borderRadius: 16,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#333',\n  },"}, {"id": "app/(tabs)/updates.tsx_20", "file": "app/(tabs)/updates.tsx", "content": "borderRadius: 16,\n    padding: 20,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  composeTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n    marginBottom: 16,\n  },\n  categoryPicker: {\n    marginBottom: 16,\n  },\n  fieldLabel: {\n    fontSize: 14,\n    fontWeight: '600',\n    color: '#FFFFFF',\n    marginBottom: 8,\n  },\n  categoryChip: {\n    backgroundColor: '#2A2A2A',\n    borderRadius: 16,\n    paddingVertical: 6,\n    paddingHorizontal: 12,\n    marginRight: 8,\n  },\n  categoryChipActive: {\n    backgroundColor: '#FF6B35',\n  },\n  categoryChipText: {\n    color: '#888',\n    fontSize: 12,\n    fontWeight: '500',\n  },\n  categoryChipTextActive: {\n    color: '#FFFFFF',\n  },\n  inputGroup: {\n    marginBottom: 16,\n  },\n  locationInput: {\n    backgroundColor: '#2A2A2A',"}, {"id": "app/(tabs)/updates.tsx_21", "file": "app/(tabs)/updates.tsx", "content": "},\n  inputGroup: {\n    marginBottom: 16,\n  },\n  locationInput: {\n    backgroundColor: '#2A2A2A',\n    borderColor: '#333',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 14,\n    color: '#FFFFFF',\n  },\n  contentInput: {\n    backgroundColor: '#2A2A2A',\n    borderColor: '#333',\n    borderWidth: 1,\n    borderRadius: 8,\n    padding: 12,\n    fontSize: 14,\n    color: '#FFFFFF',\n    minHeight: 80,\n    textAlignVertical: 'top',\n  },\n  composeActions: {\n    flexDirection: 'row',\n    gap: 12,\n  },\n  cancelButton: {\n    flex: 1,\n    backgroundColor: '#2A2A2A',\n    borderRadius: 8,\n    padding: 12,\n    alignItems: 'center',\n  },\n  cancelButtonText: {\n    color: '#888',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  submitButton: {\n    flex: 1,\n    flexDirection: 'row',"}, {"id": "app/(tabs)/updates.tsx_22", "file": "app/(tabs)/updates.tsx", "content": "fontWeight: '600',\n  },\n  submitButton: {\n    flex: 1,\n    flexDirection: 'row',\n    backgroundColor: '#FF6B35',\n    borderRadius: 8,\n    padding: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    gap: 8,\n  },\n  submitButtonText: {\n    color: '#FFFFFF',\n    fontSize: 14,\n    fontWeight: '600',\n  },\n  updatesList: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  updateCard: {\n    backgroundColor: '#1A1A1A',\n    borderRadius: 16,\n    padding: 16,\n    marginBottom: 16,\n    borderWidth: 1,\n    borderColor: '#333',\n  },\n  updateHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'flex-start',\n    marginBottom: 12,\n  },\n  authorInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 12,\n    flex: 1,\n  },\n  roleIndicator: {"}, {"id": "app/(tabs)/updates.tsx_23", "file": "app/(tabs)/updates.tsx", "content": "alignItems: 'center',\n    gap: 12,\n    flex: 1,\n  },\n  roleIndicator: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  authorDetails: {\n    flex: 1,\n  },\n  authorNameRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 6,\n  },\n  authorName: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: '#FFFFFF',\n  },\n  authorRole: {\n    fontSize: 12,\n    color: '#888',\n    textTransform: 'capitalize',\n  },\n  timestamp: {\n    fontSize: 12,\n    color: '#666',\n  },\n  updateContent: {\n    marginBottom: 12,\n  },\n  categoryBadge: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginBottom: 8,\n    gap: 6,\n  },\n  categoryDot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n  categoryLabel: {"}, {"id": "app/(tabs)/updates.tsx_24", "file": "app/(tabs)/updates.tsx", "content": "},\n  categoryDot: {\n    width: 8,\n    height: 8,\n    borderRadius: 4,\n  },\n  categoryLabel: {\n    fontSize: 12,\n    color: '#888',\n    fontWeight: '500',\n  },\n  updateText: {\n    fontSize: 14,\n    color: '#FFFFFF',\n    lineHeight: 20,\n    marginBottom: 8,\n  },\n  locationInfo: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  locationText: {\n    fontSize: 12,\n    color: '#888',\n  },\n  updateActions: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 16,\n    paddingTop: 12,\n    borderTopWidth: 1,\n    borderTopColor: '#333',\n  },\n  actionItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    gap: 4,\n  },\n  actionCount: {\n    fontSize: 12,\n    color: '#888',\n    fontWeight: '600',\n  },\n  actionLabel: {\n    fontSize: 12,\n    color: '#666',\n  },\n});"}, {"id": "app/(tabs)/updates.tsx_25", "file": "app/(tabs)/updates.tsx", "content": "fontWeight: '600',\n  },\n  actionLabel: {\n    fontSize: 12,\n    color: '#666',\n  },\n});"}, {"id": "hooks/useFrameworkReady.ts_0", "file": "hooks/useFrameworkReady.ts", "content": "================================================\nimport { useEffect } from 'react';\n\ndeclare global {\n  interface Window {\n    frameworkReady?: () => void;\n  }\n}\n\nexport function useFrameworkReady() {\n  useEffect(() => {\n    window.frameworkReady?.();\n  });\n}"}, {"id": "types/env.d.ts_0", "file": "types/env.d.ts", "content": "================================================\ndeclare global {\n  namespace NodeJS {\n    interface ProcessEnv {\n      EXPO_PUBLIC_GOOGLE_MAPS_API_KEY: string;\n    }\n  }\n}\n\nexport {};"}, {"id": ".bolt/config.json_0", "file": ".bolt/config.json", "content": "================================================\n{\n  \"template\": \"bolt-expo\"\n}"}]