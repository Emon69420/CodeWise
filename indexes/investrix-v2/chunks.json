[{"id": "Directory structure:_0", "file": "Directory structure:", "content": "\u2514\u2500\u2500 adithyanotfound-investrix-v2/\n    \u251c\u2500\u2500 README.md\n    \u251c\u2500\u2500 components.json\n    \u251c\u2500\u2500 eslint.config.mjs\n    \u251c\u2500\u2500 next.config.ts\n    \u251c\u2500\u2500 package.json\n    \u251c\u2500\u2500 postcss.config.mjs\n    \u251c\u2500\u2500 tailwind.config.ts\n    \u251c\u2500\u2500 tsconfig.json\n    \u2514\u2500\u2500 src/\n        \u251c\u2500\u2500 app/\n        \u2502   \u251c\u2500\u2500 firebase.ts\n        \u2502   \u251c\u2500\u2500 globals.css\n        \u2502   \u251c\u2500\u2500 layout.tsx\n        \u2502   \u251c\u2500\u2500 page.tsx\n        \u2502   \u251c\u2500\u2500 api/\n        \u2502   \u2502   \u2514\u2500\u2500 edgestore/\n        \u2502   \u2502       \u2514\u2500\u2500 [...edgestore]/\n        \u2502   \u2502           \u2514\u2500\u2500 route.ts\n        \u2502   \u251c\u2500\u2500 dashboard/\n        \u2502   \u2502   \u251c\u2500\u2500 investee/\n        \u2502   \u2502   \u2502   \u251c\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u251c\u2500\u2500 application/\n        \u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 documents/\n        \u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u251c\u2500\u2500 bidconfirmation/"}, {"id": "Directory structure:_1", "file": "Directory structure:", "content": "\u2502   \u2502   \u2502   \u2502       \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u251c\u2500\u2500 bidconfirmation/\n        \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u251c\u2500\u2500 bids/\n        \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u251c\u2500\u2500 viewapplication/\n        \u2502   \u2502   \u2502   \u2502   \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2502   \u2514\u2500\u2500 viewdetails/\n        \u2502   \u2502   \u2502       \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502   \u2514\u2500\u2500 investor/\n        \u2502   \u2502       \u251c\u2500\u2500 page.tsx\n        \u2502   \u2502       \u251c\u2500\u2500 bid/\n        \u2502   \u2502       \u2502   \u2514\u2500\u2500 [id]/\n        \u2502   \u2502       \u2502       \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502       \u251c\u2500\u2500 MyBids/\n        \u2502   \u2502       \u2502   \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502       \u251c\u2500\u2500 preferences/\n        \u2502   \u2502       \u2502   \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502       \u251c\u2500\u2500 recom/\n        \u2502   \u2502       \u2502   \u2514\u2500\u2500 [id]/\n        \u2502   \u2502       \u2502       \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502       \u2514\u2500\u2500 viewapplication/"}, {"id": "Directory structure:_2", "file": "Directory structure:", "content": "\u2502   \u2502       \u2502       \u2514\u2500\u2500 page.tsx\n        \u2502   \u2502       \u2514\u2500\u2500 viewapplication/\n        \u2502   \u2502           \u2514\u2500\u2500 page.tsx\n        \u2502   \u251c\u2500\u2500 login/\n        \u2502   \u2502   \u2514\u2500\u2500 page.tsx\n        \u2502   \u2514\u2500\u2500 signup/\n        \u2502       \u2514\u2500\u2500 page.tsx\n        \u251c\u2500\u2500 components/\n        \u2502   \u251c\u2500\u2500 ChatToggleButton.tsx\n        \u2502   \u251c\u2500\u2500 clientProviders.tsx\n        \u2502   \u251c\u2500\u2500 Navbar.tsx\n        \u2502   \u251c\u2500\u2500 magicui/\n        \u2502   \u2502   \u251c\u2500\u2500 interactive-grid-pattern.tsx\n        \u2502   \u2502   \u251c\u2500\u2500 retro-grid.tsx\n        \u2502   \u2502   \u2514\u2500\u2500 sparkles-text.tsx\n        \u2502   \u2514\u2500\u2500 ui/\n        \u2502       \u251c\u2500\u2500 button.tsx\n        \u2502       \u251c\u2500\u2500 input.tsx\n        \u2502       \u2514\u2500\u2500 percentage-circle.tsx\n        \u2514\u2500\u2500 lib/\n            \u251c\u2500\u2500 contracts.ts\n            \u251c\u2500\u2500 edgestore.ts\n            \u2514\u2500\u2500 utils.ts"}, {"id": "README.md_0", "file": "README.md", "content": "================================================\nThis is a [Next.js](https://nextjs.org) project bootstrapped with [`create-next-app`](https://nextjs.org/docs/app/api-reference/cli/create-next-app).\n\n## Getting Started\n\nFirst, run the development server:\n\n```bash\nnpm run dev\n# or\nyarn dev\n# or\npnpm dev\n# or\nbun dev\n```\n\nOpen [http://localhost:3000](http://localhost:3000) with your browser to see the result.\n\nYou can start editing the page by modifying `app/page.tsx`. The page auto-updates as you edit the file.\n\nThis project uses [`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to automatically optimize and load [Geist](https://vercel.com/font), a new font family for Vercel."}, {"id": "README.md_1", "file": "README.md", "content": "## Learn More\n\nTo learn more about Next.js, take a look at the following resources:\n\n- [Next.js Documentation](https://nextjs.org/docs) - learn about Next.js features and API.\n- [Learn Next.js](https://nextjs.org/learn) - an interactive Next.js tutorial.\n\nYou can check out [the Next.js GitHub repository](https://github.com/vercel/next.js) - your feedback and contributions are welcome!\n\n## Deploy on Vercel\n\nThe easiest way to deploy your Next.js app is to use the [Vercel Platform](https://vercel.com/new?utm_medium=default-template&filter=next.js&utm_source=create-next-app&utm_campaign=create-next-app-readme) from the creators of Next.js.\n\nCheck out our [Next.js deployment documentation](https://nextjs.org/docs/app/building-your-application/deploying) for more details."}, {"id": "components.json_0", "file": "components.json", "content": "================================================\n{\n  \"$schema\": \"https://ui.shadcn.com/schema.json\",\n  \"style\": \"new-york\",\n  \"rsc\": true,\n  \"tsx\": true,\n  \"tailwind\": {\n    \"config\": \"tailwind.config.ts\",\n    \"css\": \"src/app/globals.css\",\n    \"baseColor\": \"neutral\",\n    \"cssVariables\": true,\n    \"prefix\": \"\"\n  },\n  \"aliases\": {\n    \"components\": \"@/components\",\n    \"utils\": \"@/lib/utils\",\n    \"ui\": \"@/components/ui\",\n    \"lib\": \"@/lib\",\n    \"hooks\": \"@/hooks\"\n  },\n  \"iconLibrary\": \"lucide\"\n}"}, {"id": "eslint.config.mjs_0", "file": "eslint.config.mjs", "content": "================================================\nimport { dirname } from \"path\";\nimport { fileURLToPath } from \"url\";\nimport { FlatCompat } from \"@eslint/eslintrc\";\n\nconst __filename = fileURLToPath(import.meta.url);\nconst __dirname = dirname(__filename);\n\nconst compat = new FlatCompat({\n  baseDirectory: __dirname,\n});\n\nconst eslintConfig = [\n  ...compat.extends(\"next/core-web-vitals\", \"next/typescript\"),\n];\n\nexport default eslintConfig;"}, {"id": "next.config.ts_0", "file": "next.config.ts", "content": "================================================\nimport type { NextConfig } from \"next\";\n\nconst nextConfig: NextConfig = {\n  /* config options here */\n};\n\nexport default nextConfig;"}, {"id": "package.json_0", "file": "package.json", "content": "================================================\n{\n  \"name\": \"investrix\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@aptos-labs/ts-sdk\": \"^1.35.0\",\n    \"@aptos-labs/wallet-adapter-react\": \"^4.1.0\",\n    \"@edgestore/react\": \"^0.3.2\",\n    \"@edgestore/server\": \"^0.3.2\",\n    \"@radix-ui/react-slot\": \"^1.1.2\",\n    \"@react-google-maps/api\": \"^2.20.6\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"firebase\": \"^11.3.1\",\n    \"lucide-react\": \"^0.475.0\",\n    \"motion\": \"^12.4.5\",\n    \"next\": \"^15.2.3\",\n    \"next-themes\": \"^0.4.4\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-hot-toast\": \"^2.5.2\","}, {"id": "package.json_1", "file": "package.json", "content": "\"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-hot-toast\": \"^2.5.2\",\n    \"recharts\": \"^2.15.1\",\n    \"tailwind-merge\": \"^3.0.1\",\n    \"tailwindcss-animate\": \"^1.0.7\"\n  },\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.1.7\",\n    \"postcss\": \"^8\",\n    \"tailwindcss\": \"^3.4.1\",\n    \"typescript\": \"^5\"\n  }\n}"}, {"id": "postcss.config.mjs_0", "file": "postcss.config.mjs", "content": "================================================\n/** @type {import('postcss-load-config').Config} */\nconst config = {\n  plugins: {\n    tailwindcss: {},\n  },\n};\n\nexport default config;"}, {"id": "tailwind.config.ts_0", "file": "tailwind.config.ts", "content": "================================================\nimport type { Config } from \"tailwindcss\";\n\nexport default {\n    darkMode: [\"class\"],\n    content: [\n    \"./src/pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./src/components/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./src/app/**/*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n  \textend: {\n  \t\tcolors: {\n  \t\t\tbackground: 'hsl(var(--background))',\n  \t\t\tforeground: 'hsl(var(--foreground))',\n  \t\t\tcard: {\n  \t\t\t\tDEFAULT: 'hsl(var(--card))',\n  \t\t\t\tforeground: 'hsl(var(--card-foreground))'\n  \t\t\t},\n  \t\t\tpopover: {\n  \t\t\t\tDEFAULT: 'hsl(var(--popover))',\n  \t\t\t\tforeground: 'hsl(var(--popover-foreground))'\n  \t\t\t},\n  \t\t\tprimary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--primary))',\n  \t\t\t\tforeground: 'hsl(var(--primary-foreground))'\n  \t\t\t},\n  \t\t\tsecondary: {"}, {"id": "tailwind.config.ts_1", "file": "tailwind.config.ts", "content": "foreground: 'hsl(var(--primary-foreground))'\n  \t\t\t},\n  \t\t\tsecondary: {\n  \t\t\t\tDEFAULT: 'hsl(var(--secondary))',\n  \t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\n  \t\t\t},\n  \t\t\tmuted: {\n  \t\t\t\tDEFAULT: 'hsl(var(--muted))',\n  \t\t\t\tforeground: 'hsl(var(--muted-foreground))'\n  \t\t\t},\n  \t\t\taccent: {\n  \t\t\t\tDEFAULT: 'hsl(var(--accent))',\n  \t\t\t\tforeground: 'hsl(var(--accent-foreground))'\n  \t\t\t},\n  \t\t\tdestructive: {\n  \t\t\t\tDEFAULT: 'hsl(var(--destructive))',\n  \t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\n  \t\t\t},\n  \t\t\tborder: 'hsl(var(--border))',\n  \t\t\tinput: 'hsl(var(--input))',\n  \t\t\tring: 'hsl(var(--ring))',\n  \t\t\tchart: {\n  \t\t\t\t'1': 'hsl(var(--chart-1))',\n  \t\t\t\t'2': 'hsl(var(--chart-2))',\n  \t\t\t\t'3': 'hsl(var(--chart-3))',\n  \t\t\t\t'4': 'hsl(var(--chart-4))',"}, {"id": "tailwind.config.ts_2", "file": "tailwind.config.ts", "content": "'3': 'hsl(var(--chart-3))',\n  \t\t\t\t'4': 'hsl(var(--chart-4))',\n  \t\t\t\t'5': 'hsl(var(--chart-5))'\n  \t\t\t}\n  \t\t},\n  \t\tborderRadius: {\n  \t\t\tlg: 'var(--radius)',\n  \t\t\tmd: 'calc(var(--radius) - 2px)',\n  \t\t\tsm: 'calc(var(--radius) - 4px)'\n  \t\t},\n  \t\tanimation: {\n  \t\t\tgrid: 'grid 15s linear infinite'\n  \t\t},\n  \t\tkeyframes: {\n  \t\t\tgrid: {\n  \t\t\t\t'0%': {\n  \t\t\t\t\ttransform: 'translateY(-50%)'\n  \t\t\t\t},\n  \t\t\t\t'100%': {\n  \t\t\t\t\ttransform: 'translateY(0)'\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n} satisfies Config;"}, {"id": "tsconfig.json_0", "file": "tsconfig.json", "content": "================================================\n{\n  \"compilerOptions\": {\n    \"target\": \"ES2017\",\n    \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"strict\": true,\n    \"noEmit\": true,\n    \"esModuleInterop\": true,\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"bundler\",\n    \"resolveJsonModule\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"preserve\",\n    \"incremental\": true,\n    \"plugins\": [\n      {\n        \"name\": \"next\"\n      }\n    ],\n    \"paths\": {\n      \"@/*\": [\"./src/*\"]\n    }\n  },\n  \"include\": [\"next-env.d.ts\", \"**/*.ts\", \"**/*.tsx\", \".next/types/**/*.ts\"],\n  \"exclude\": [\"node_modules\"]\n}"}, {"id": "src/app/firebase.ts_0", "file": "src/app/firebase.ts", "content": "================================================\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from 'firebase/firestore';\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst db = getFirestore(app);\n\nexport  {auth ,  db};"}, {"id": "src/app/globals.css_0", "file": "src/app/globals.css", "content": "================================================\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 0 0% 3.9%;\n    --card: 0 0% 100%;\n    --card-foreground: 0 0% 3.9%;\n    --popover: 0 0% 100%;\n    --popover-foreground: 0 0% 3.9%;\n    --primary: 0 0% 9%;\n    --primary-foreground: 0 0% 98%;\n    --secondary: 0 0% 96.1%;\n    --secondary-foreground: 0 0% 9%;\n    --muted: 0 0% 96.1%;\n    --muted-foreground: 0 0% 45.1%;\n    --accent: 0 0% 96.1%;\n    --accent-foreground: 0 0% 9%;\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 89.8%;\n    --input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;"}, {"id": "src/app/globals.css_1", "file": "src/app/globals.css", "content": "--input: 0 0% 89.8%;\n    --ring: 0 0% 3.9%;\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n  }\n  .dark {\n    --background: 0 0% 3.9%;\n    --foreground: 0 0% 98%;\n    --card: 0 0% 3.9%;\n    --card-foreground: 0 0% 98%;\n    --popover: 0 0% 3.9%;\n    --popover-foreground: 0 0% 98%;\n    --primary: 0 0% 98%;\n    --primary-foreground: 0 0% 9%;\n    --secondary: 0 0% 14.9%;\n    --secondary-foreground: 0 0% 98%;\n    --muted: 0 0% 14.9%;\n    --muted-foreground: 0 0% 63.9%;\n    --accent: 0 0% 14.9%;\n    --accent-foreground: 0 0% 98%;\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;"}, {"id": "src/app/globals.css_2", "file": "src/app/globals.css", "content": "--border: 0 0% 14.9%;\n    --input: 0 0% 14.9%;\n    --ring: 0 0% 83.1%;\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n\n@keyframes gradientMove {\n  0% {\n    background-position: 0% 50%;\n  }\n  100% {\n    background-position: 100% 50%;\n  }\n}\n\n@keyframes blob {\n  0% {\n    transform: translate(0px, 0px) scale(1);\n  }\n  33% {\n    transform: translate(30px, -50px) scale(1.1);\n  }\n  66% {\n    transform: translate(-20px, 20px) scale(0.9);\n  }\n  100% {\n    transform: translate(0px, 0px) scale(1);\n  }\n}\n\n.animate-blob {\n  animation: blob 7s infinite;\n}\n\n.animation-delay-2000 {"}, {"id": "src/app/globals.css_3", "file": "src/app/globals.css", "content": "}\n}\n\n.animate-blob {\n  animation: blob 7s infinite;\n}\n\n.animation-delay-2000 {\n  animation-delay: 2s;\n}\n\n.animation-delay-4000 {\n  animation-delay: 4s;\n}"}, {"id": "src/app/layout.tsx_0", "file": "src/app/layout.tsx", "content": "================================================\nimport type { Metadata } from \"next\";\nimport { Suspense } from \"react\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { ChatToggleButton } from \"@/components/ChatToggleButton\";\nimport { ClientProviders } from \"@/components/clientProviders\";\n\nconst geistSans = Geist({\n  subsets: [\"latin\"],\n  variable: \"--font-geist-sans\",\n  display: \"swap\",\n});\n\nconst geistMono = Geist_Mono({\n  subsets: [\"latin\"],\n  variable: \"--font-geist-mono\",\n  display: \"swap\",\n});\n\nexport const metadata: Metadata = {\n  title: \"Investrix - Where Innovation Meets Investment\",\n  description: \"AI-powered investment platform connecting investors with opportunities\",\n  icons: {\n    icon: \"/favicon.ico\",\n  },\n};\n\nexport const viewport = {"}, {"id": "src/app/layout.tsx_1", "file": "src/app/layout.tsx", "content": "icons: {\n    icon: \"/favicon.ico\",\n  },\n};\n\nexport const viewport = {\n  width: \"device-width\",\n  initialScale: 1,\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <Suspense fallback={<div>Loading...</div>}>\n          <ClientProviders>\n            {children}\n            <ChatToggleButton />\n          </ClientProviders>\n        </Suspense>\n      </body>\n    </html>\n  );\n}"}, {"id": "src/app/page.tsx_0", "file": "src/app/page.tsx", "content": "================================================\n\"use client\";\nimport { Button } from \"@/components/ui/button\";\nimport { RetroGrid } from \"@/components/magicui/retro-grid\";\nimport { useRouter } from \"next/navigation\";\nimport { motion } from \"framer-motion\";\nimport { Sparkles, Shield, Rocket, ChartBar, ArrowRight } from \"lucide-react\";\n\nexport default function Home() {\n  const router = useRouter();\n\n  const features = [\n    {\n      icon: <Sparkles className=\"w-6 h-6\" />,\n      title: \"Smart Investments\",\n      description: \"AI-powered matching with verified investors\"\n    },\n    {\n      icon: <Shield className=\"w-6 h-6\" />,\n      title: \"Secure Platform\",\n      description: \"Enterprise-grade security for your investments\"\n    },\n    {\n      icon: <ChartBar className=\"w-6 h-6\" />,"}, {"id": "src/app/page.tsx_1", "file": "src/app/page.tsx", "content": "},\n    {\n      icon: <ChartBar className=\"w-6 h-6\" />,\n      title: \"Real-time Analytics\",\n      description: \"Track your investment performance live\"\n    }\n  ];\n\n  // Add error boundaries around router pushes\n  const handleNavigation = (path: string) => {\n    try {\n      router.push(path);\n    } catch (error) {\n      console.error('Navigation error:', error);\n    }\n  };\n\n  return (\n    <div className=\"relative min-h-screen w-full bg-black overflow-hidden\">\n      {/* Animated Background Grid */}\n      <motion.div \n        initial={{ opacity: 0 }}\n        animate={{ opacity: 0.4 }}\n        transition={{ duration: 1 }}\n        className=\"absolute inset-0 -z-10\"\n      >\n        <RetroGrid className=\"stroke-white\" />\n      </motion.div>"}, {"id": "src/app/page.tsx_2", "file": "src/app/page.tsx", "content": ">\n        <RetroGrid className=\"stroke-white\" />\n      </motion.div>\n      <RetroGrid className=\"stroke-white opacity-0.9 \" />\n      {/* Navigation */}\n      <motion.nav \n        initial={{ y: -100 }}\n        animate={{ y: 0 }}\n        transition={{ duration: 0.5 }}\n        className=\"fixed top-0 w-full z-50 px-6 py-4 backdrop-blur-sm border-b border-white/10\"\n      >\n        <div className=\"max-w-7xl mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center gap-2\">\n            <Rocket className=\"w-8 h-8 text-white\" />\n            <span className=\"text-white text-xl font-medium\">Investrix</span>\n          </div>\n          <div className=\"flex gap-4\">\n            <Button \n              variant=\"ghost\""}, {"id": "src/app/page.tsx_3", "file": "src/app/page.tsx", "content": "<div className=\"flex gap-4\">\n            <Button \n              variant=\"ghost\" \n              className=\"text-white hover:text-black hover:bg-white/90 transition-all duration-300\"\n              onClick={() => handleNavigation('/login')}\n            >\n              Log in\n            </Button>\n            <Button \n              className=\"bg-white text-black hover:bg-gray-100 transition-all duration-300\"\n              onClick={() => handleNavigation('/signup')}\n            >\n              Sign up\n            </Button>\n          </div>\n        </div>\n      </motion.nav>\n\n      {/* Main Content */}\n      <main className=\"relative flex min-h-screen flex-col items-center justify-center px-4\">\n        <motion.div \n          initial={{ opacity: 0, y: 20 }}"}, {"id": "src/app/page.tsx_4", "file": "src/app/page.tsx", "content": "<motion.div \n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          transition={{ duration: 0.5 }}\n          className=\"relative z-10 max-w-5xl text-center space-y-8\"\n        >\n          {/* Main Heading */}\n          <div className=\"space-y-6\">\n            <div className=\"relative inline-block\">\n              <motion.h1 \n                initial={{ scale: 0.9 }}\n                animate={{ scale: 1 }}\n                transition={{ duration: 0.5 }}\n                className=\"text-7xl md:text-8xl font-bold tracking-tight\"\n              >\n                <span className=\"relative\">\n                  <span className=\"text-white\">Invest</span>\n                  {/* Animated underline for \"Invest\" */}\n                  <motion.div"}, {"id": "src/app/page.tsx_5", "file": "src/app/page.tsx", "content": "{/* Animated underline for \"Invest\" */}\n                  <motion.div\n                    initial={{ scaleX: 0 }}\n                    animate={{ scaleX: 1 }}\n                    transition={{\n                      duration: 1,\n                      delay: 0.5,\n                      ease: \"easeInOut\",\n                      repeat: Infinity,\n                      repeatType: \"reverse\",\n                      repeatDelay: 0.5\n                    }}\n                    className=\"absolute bottom-2 left-0 w-full h-0.5 origin-left \"\n                    style={{\n                      background: \"linear-gradient(90deg, #22c55e, #10b981, #22c55e)\",\n                      backgroundSize: \"200% 100%\",\n                      animation: \"gradientMove 2s linear infinite\""}, {"id": "src/app/page.tsx_6", "file": "src/app/page.tsx", "content": "animation: \"gradientMove 2s linear infinite\"\n                    }}\n                  />\n                </span>\n                <span className=\"text-white\">rix</span>\n              </motion.h1>\n            </div>\n            <motion.p \n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.5, delay: 0.3 }}\n              className=\"text-xl md:text-2xl text-gray-400\"\n            >\n              Where Innovation Meets Investment\n            </motion.p>\n\n            {/* Make in India line */}\n            <motion.p\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n              transition={{ duration: 0.5, delay: 0.6 }}"}, {"id": "src/app/page.tsx_7", "file": "src/app/page.tsx", "content": "animate={{ opacity: 1 }}\n              transition={{ duration: 0.5, delay: 0.6 }}\n              className=\"text-lg md:text-xl font-medium text-white\"\n            >\n              Support{\" \"}\n              <span className=\"text-[#FF9933]\">#Ma</span>\n              <span className=\"text-[#FFFFFF]\">ke</span>\n              <span className=\"text-[#138808]\">In</span>\n              <span className=\"text-[#0cb1cf]\">India</span>\n              {\" \"}by Investing today!\n            </motion.p>\n          </div>\n\n          {/* Features Grid */}\n          <motion.div \n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.8, delay: 0.2 }}\n            className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-12\"\n          >"}, {"id": "src/app/page.tsx_8", "file": "src/app/page.tsx", "content": "className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mt-12\"\n          >\n            {features.map((feature, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 + 0.5 }}\n                className=\"bg-white/5 backdrop-blur-sm rounded-xl p-6 border border-white/10 hover:border-white/20 transition-all duration-300\"\n              >\n                <div className=\"text-white mb-4\">{feature.icon}</div>\n                <h3 className=\"text-white text-lg font-medium mb-2\">{feature.title}</h3>\n                <p className=\"text-gray-400 text-sm\">{feature.description}</p>\n              </motion.div>\n            ))}"}, {"id": "src/app/page.tsx_9", "file": "src/app/page.tsx", "content": "</motion.div>\n            ))}\n          </motion.div>\n\n          {/* CTA Button */}\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ duration: 0.5, delay: 1 }}\n            className=\"mt-12\"\n          >\n            <Button \n              className=\"bg-gradient-to-r from-green-500 to-emerald-600 text-white hover:opacity-90 px-8 py-6 text-lg rounded-full group transition-all duration-300\"\n              onClick={() => handleNavigation('/signup')}\n            >\n              Get Started for free\n              <ArrowRight className=\"w-5 h-5 ml-2 group-hover:translate-x-1 transition-transform\" />\n            </Button>\n          </motion.div>\n        </motion.div>\n      </main>"}, {"id": "src/app/page.tsx_10", "file": "src/app/page.tsx", "content": "</Button>\n          </motion.div>\n        </motion.div>\n      </main>\n\n      {/* Floating Elements */}\n      <div className=\"absolute top-1/4 left-1/4 w-72 h-72 bg-green-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob\" />\n      <div className=\"absolute top-1/3 right-1/4 w-72 h-72 bg-emerald-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\" />\n      <div className=\"absolute bottom-1/4 left-1/3 w-72 h-72 bg-green-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-4000\" />\n\n      {/* Background Gradients */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/80 to-transparent\" />"}, {"id": "src/app/page.tsx_11", "file": "src/app/page.tsx", "content": "<div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/80 to-transparent\" />\n      <div className=\"absolute bottom-0 left-0 w-full h-1/3 bg-gradient-to-t from-black to-transparent\" />\n    </div>\n  );\n}"}, {"id": "src/app/api/edgestore/[...edgestore]/route.ts_0", "file": "src/app/api/edgestore/[...edgestore]/route.ts", "content": "================================================\nimport { initEdgeStore } from '@edgestore/server';\nimport { createEdgeStoreNextHandler } from '@edgestore/server/adapters/next/app';\n\u00c2\u00a0\nconst es = initEdgeStore.create();\n\u00c2\u00a0\n/**\n * This is the main router for the Edge Store buckets.\n */\nconst edgeStoreRouter = es.router({\n  publicFiles: es.fileBucket(),\n});\n\u00c2\u00a0\nconst handler = createEdgeStoreNextHandler({\n  router: edgeStoreRouter,\n});\n\u00c2\u00a0\nexport { handler as GET, handler as POST };\n\u00c2\u00a0\n/**\n * This type is used to create the type-safe client for the frontend.\n */\nexport type EdgeStoreRouter = typeof edgeStoreRouter;"}, {"id": "src/app/dashboard/investee/page.tsx_0", "file": "src/app/dashboard/investee/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { useEffect, useState } from \"react\";\nimport Navbar from \"@/components/Navbar\";\nimport { auth, db } from '@/app/firebase';\nimport { collection, getDocs, query, where, doc, getDoc } from \"firebase/firestore\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { toast } from 'react-hot-toast';\n\ntype LoanApplication = {\n  businessType: String;\n  id: string;\n  userId: string;\n  companyName: string;\n  loanAmount: number;\n  loanAmountInINR: number;\n  fundingStatus: 'pending' | 'approved' | 'finalized';\n  purpose: string;\n  interestRateExpected: string;\n  tenure: string;\n  date: string;"}, {"id": "src/app/dashboard/investee/page.tsx_1", "file": "src/app/dashboard/investee/page.tsx", "content": "purpose: string;\n  interestRateExpected: string;\n  tenure: string;\n  date: string;\n  isSpecial: boolean;\n  acceptedBid?: {\n    interestRate: string;\n    tenure: string;\n  };\n};\n\nexport default function InvesteeDashboard() {\n  const router = useRouter();\n  const [loanApplications, setLoanApplications] = useState<LoanApplication[]>([]);\n  const [finalizedLoans, setFinalizedLoans] = useState<LoanApplication[]>([]);\n  const [loggedInUser, setLoggedInUser] = useState<string>('');\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setLoggedInUser(user.uid);\n      } else {\n        router.push('/');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  useEffect(() => {\n    if (loggedInUser) {\n      fetchLoanApplications();"}, {"id": "src/app/dashboard/investee/page.tsx_2", "file": "src/app/dashboard/investee/page.tsx", "content": "}, [router]);\n\n  useEffect(() => {\n    if (loggedInUser) {\n      fetchLoanApplications();\n    }\n  }, [loggedInUser]);\n\n  const fetchAcceptedBidForApplication = async (applicationId: string) => {\n    try {\n      const q = query(\n        collection(db, 'bids'), \n        where('applicationId', '==', applicationId),\n        where('status', '==', 'accepted')\n      );\n      const querySnapshot = await getDocs(q);\n      \n      if (!querySnapshot.empty) {\n        const acceptedBid = querySnapshot.docs[0].data();\n        return {\n          interestRate: acceptedBid.interestRate,\n          tenure: acceptedBid.tenure\n        };\n      }\n      return null;\n    } catch (error) {\n      console.error('Error fetching accepted bid:', error);\n      return null;\n    }\n  };"}, {"id": "src/app/dashboard/investee/page.tsx_3", "file": "src/app/dashboard/investee/page.tsx", "content": "console.error('Error fetching accepted bid:', error);\n      return null;\n    }\n  };\n\n  const fetchLoanApplications = async () => {\n    try {\n      const docRef = getDocs(collection(db, \"applications\"));\n      if (docRef) {\n        const applications: LoanApplication[] = [];\n        const finalized: LoanApplication[] = [];\n        \n        const docs = await docRef;\n        \n        for (const doc of docs.docs) {\n          const application = { id: doc.id, ...doc.data() } as LoanApplication;\n          if (application.userId === loggedInUser) {\n            if (application.fundingStatus === 'finalized') {\n              // Fetch accepted bid for finalized applications\n              const acceptedBid = await fetchAcceptedBidForApplication(application.id);\n              if (acceptedBid) {"}, {"id": "src/app/dashboard/investee/page.tsx_4", "file": "src/app/dashboard/investee/page.tsx", "content": "if (acceptedBid) {\n                application.acceptedBid = acceptedBid;\n              }\n              finalized.push(application);\n            } else {\n              applications.push(application);\n            }\n          }\n        }\n        \n        const sortedApplications = applications.sort((a, b) => {\n          if (a.isSpecial === b.isSpecial) return 0;\n          return a.isSpecial ? -1 : 1;\n        });\n        \n        setLoanApplications(sortedApplications);\n        setFinalizedLoans(finalized);\n      } else {\n        toast(\"No applications found!\");\n        setLoanApplications([]);\n        setFinalizedLoans([]);\n      }\n    } catch (error) {\n      toast.error(\"Error fetching loan applications!\");\n      console.error('Error fetching loan applications:', error);"}, {"id": "src/app/dashboard/investee/page.tsx_5", "file": "src/app/dashboard/investee/page.tsx", "content": "console.error('Error fetching loan applications:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <Navbar />\n      {/* Main Content */}\n      <div className=\"p-6\">\n        {/* Header Actions */}\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-2xl font-bold\">Investee Dashboard</h1>\n          <Button \n            variant=\"outline\" \n            className=\"border-white text-black hover:bg-white hover:text-black\"\n            onClick={() => router.push('/dashboard/investee/application')}\n          >\n            Create New Application\n          </Button>\n        </div>\n\n        {/* Two Column Layout */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">"}, {"id": "src/app/dashboard/investee/page.tsx_6", "file": "src/app/dashboard/investee/page.tsx", "content": "{/* Two Column Layout */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Active Loan Applications */}\n          <div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold mb-4\">Your Active Applications</h2>\n            <div className=\"space-y-4 max-h-[600px] overflow-y-auto\">\n              {loanApplications.length === 0 ? (\n                <div className=\"p-4 rounded-lg border border-[#333333] bg-black text-center\">\n                  No Active Loan Applications Found\n                </div>\n              ) : (\n                loanApplications.map((app) => (\n                  <div \n                    key={app.id}"}, {"id": "src/app/dashboard/investee/page.tsx_7", "file": "src/app/dashboard/investee/page.tsx", "content": "<div \n                    key={app.id} \n                    className={`p-4 rounded-lg border ${app.isSpecial ? 'border-green-500' : 'border-[#333333]'} bg-black hover:border-white transition-colors`}\n                  >\n                    <div className=\"flex justify-between items-start mb-4\">\n                      <div className=\"flex items-center gap-2\">\n                        <h3 className=\"text-lg font-medium\">{app.companyName}</h3>\n                        {app.isSpecial && (\n                          <span title=\"No transaction fees for this application!\" className=\"text-green-500\">\n                            \u00f0\u0178\u0152\u00b1\n                          </span>\n                        )}\n                      </div>"}, {"id": "src/app/dashboard/investee/page.tsx_8", "file": "src/app/dashboard/investee/page.tsx", "content": "</span>\n                        )}\n                      </div>\n                      <span className={`px-3 py-1 text-black text-sm rounded-full ${\n                        app.fundingStatus === 'pending' ? 'bg-yellow-500' : \n                        app.fundingStatus === 'approved' ? 'bg-green-500' : 'bg-blue-500'\n                      }`}>\n                        {app.fundingStatus.charAt(0).toUpperCase() + app.fundingStatus.slice(1)}\n                      </span>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                      <div>\n                        <p className=\"text-sm text-gray-400\">Amount</p>"}, {"id": "src/app/dashboard/investee/page.tsx_9", "file": "src/app/dashboard/investee/page.tsx", "content": "<div>\n                        <p className=\"text-sm text-gray-400\">Amount</p>\n                        <p className=\"text-white font-medium\">{app.loanAmount} APT</p>\n                        <p className=\"text-sm text-gray-500\">\u00e2\u201a\u00b9{app.loanAmountInINR}</p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm text-gray-400\">Purpose</p>\n                        <p className=\"text-white font-medium\">{app.businessType}</p>\n                      </div>\n                    </div>\n\n                    <div className=\"mt-4 flex gap-3\">\n                      <Button \n                        className=\"bg-white text-black hover:bg-gray-200\""}, {"id": "src/app/dashboard/investee/page.tsx_10", "file": "src/app/dashboard/investee/page.tsx", "content": "className=\"bg-white text-black hover:bg-gray-200\"\n                        onClick={() => router.push(`/dashboard/investee/viewapplication?id=${app.id}`)}\n                      >\n                        View Details\n                      </Button>\n                      {app.fundingStatus !== 'finalized' && (\n                        <Button \n                          className=\"bg-white text-black hover:bg-gray-200\"\n                          onClick={() => router.push(`/dashboard/investee/bids?id=${app.id}`)}\n                        >\n                          View Bids\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n                ))\n              )}\n            </div>\n          </div>"}, {"id": "src/app/dashboard/investee/page.tsx_11", "file": "src/app/dashboard/investee/page.tsx", "content": "</div>\n                ))\n              )}\n            </div>\n          </div>\n\n          {/* Active Loans and Chatbot */}\n          <div className=\"space-y-8\">\n            {/* Active Loans Section */}\n            <div className=\"space-y-4\">\n              <div className=\"flex justify-between items-center mb-4\">\n                <h2 className=\"text-xl font-semibold\">Your Active Loans</h2>\n                <p className=\"text-gray-400\">\n                  Total Borrowed: {finalizedLoans.reduce((sum, loan) => sum + loan.loanAmount, 0)} APT\n                </p>\n              </div>\n              \n              <div className=\"space-y-4 max-h-[600px] overflow-y-auto\">\n                {finalizedLoans.length === 0 ? ("}, {"id": "src/app/dashboard/investee/page.tsx_12", "file": "src/app/dashboard/investee/page.tsx", "content": "{finalizedLoans.length === 0 ? (\n                  <div className=\"p-4 rounded-lg border border-[#333333] bg-black text-center\">\n                    No Active Loans Found\n                  </div>\n                ) : (\n                  finalizedLoans.map((loan) => (\n                    <div \n                      key={loan.id}\n                      className=\"p-4 rounded-lg border border-[#333333] bg-black hover:border-white transition-colors\"\n                    >\n                      <div className=\"flex items-center gap-4\">\n                        <div className=\"w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold\">\n                          {loan.companyName.split(' ').map(word => word[0]).join('')}\n                        </div>"}, {"id": "src/app/dashboard/investee/page.tsx_13", "file": "src/app/dashboard/investee/page.tsx", "content": "</div>\n                        <div className=\"flex-1\">\n                          <div className=\"flex justify-between items-start\">\n                            <div>\n                              <h3 className=\"font-medium text-white text-lg\">{loan.companyName}</h3>\n                              <p className=\"text-sm text-gray-400\">{loan.businessType}</p>\n                            </div>\n                            <span className=\"px-3 py-1 bg-green-500 text-black text-sm rounded-full\">\n                              Active\n                            </span>\n                          </div>\n                          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mt-4\">\n                            <div>"}, {"id": "src/app/dashboard/investee/page.tsx_14", "file": "src/app/dashboard/investee/page.tsx", "content": "<div>\n                              <p className=\"text-sm text-gray-400\">Amount</p>\n                              <p className=\"text-white font-medium\">{loan.loanAmount} APT</p>\n                              <p className=\"text-sm text-gray-500\">\u00e2\u201a\u00b9{loan.loanAmountInINR}</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-gray-400\">Interest Rate</p>\n                              <p className=\"text-white font-medium\">10 %</p>\n                            </div>\n                            <div>\n                              <p className=\"text-sm text-gray-400\">Tenure</p>\n                              <p className=\"text-white font-medium\">12 Months</p>\n                            </div>"}, {"id": "src/app/dashboard/investee/page.tsx_15", "file": "src/app/dashboard/investee/page.tsx", "content": "</div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investee/application/page.tsx_0", "file": "src/app/dashboard/investee/application/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter } from \"next/navigation\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { toast } from 'react-hot-toast';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { auth, db } from '@/app/firebase';\n\ninterface FormData {\n  companyName: string;\n  ownerName: string;\n  contactNumber: string;\n  businessType: string;\n  yearsInOperation: string;\n  annualRevenue: string;\n  loanAmount: string;\n  purpose: string;\n  companyDescription: string;\n  agreeToTerms: boolean;\n}\n\nexport default function NewApplication() {\n  const router = useRouter();"}, {"id": "src/app/dashboard/investee/application/page.tsx_1", "file": "src/app/dashboard/investee/application/page.tsx", "content": "}\n\nexport default function NewApplication() {\n  const router = useRouter();\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  const [submittedApplicationId, setSubmittedApplicationId] = useState(0);\n  \n  const [formData, setFormData] = useState<FormData>({\n    companyName: \"\",\n    ownerName: \"\",\n    contactNumber: \"\",\n    businessType: \"\",\n    yearsInOperation: \"\",\n    annualRevenue: \"\",\n    loanAmount: \"\",\n    purpose: \"\",\n    companyDescription: \"\",\n    agreeToTerms: false\n  });\n\n  const [errors, setErrors] = useState<Record<string, string>>({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  // Authentication check\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setLoggedInUser(user.uid);\n      } else {"}, {"id": "src/app/dashboard/investee/application/page.tsx_2", "file": "src/app/dashboard/investee/application/page.tsx", "content": "if (user) {\n        setLoggedInUser(user.uid);\n      } else {\n        router.push(\"/login\");\n      }\n    });\n  }, [router]);\n\n  const businessTypes = [\n    \"Manufacturing\",\n    \"Retail\",\n    \"Technology\",\n    \"Services\",\n    \"Healthcare\",\n    \"Food & Beverage\",\n    \"Construction\",\n    \"Other\",\n  ];\n\n  const loanPurposes = [\n    \"Working Capital\",\n    \"Equipment Purchase\",\n    \"Expansion\",\n    \"Inventory\",\n    \"Debt Refinancing\",\n    \"Other\",\n  ];\n\n  const handleInputChange = (\n    e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>\n  ) => {\n    const { name, value, type } = e.target as HTMLInputElement;\n    const inputValue = type === 'checkbox' ? (e.target as HTMLInputElement).checked : value;\n    \n    setFormData((prev) => ({\n      ...prev,\n      [name]: inputValue,"}, {"id": "src/app/dashboard/investee/application/page.tsx_3", "file": "src/app/dashboard/investee/application/page.tsx", "content": "setFormData((prev) => ({\n      ...prev,\n      [name]: inputValue,\n    }));\n    if (errors[name]) {\n      setErrors((prev) => ({\n        ...prev,\n        [name]: \"\",\n      }));\n    }\n  };\n\n  const validateForm = () => {\n    const newErrors: Record<string, string> = {};\n\n    if (!formData.companyName) newErrors.companyName = \"Company name is required\";\n    if (!formData.ownerName) newErrors.ownerName = \"Owner name is required\";\n    if (!formData.contactNumber) {\n      newErrors.contactNumber = \"Contact number is required\";\n    } else if (!/^\\d{10}$/.test(formData.contactNumber)) {\n      newErrors.contactNumber = \"Please enter a valid 10-digit number\";\n    }\n    if (!formData.businessType) newErrors.businessType = \"Business type is required\";"}, {"id": "src/app/dashboard/investee/application/page.tsx_4", "file": "src/app/dashboard/investee/application/page.tsx", "content": "}\n    if (!formData.businessType) newErrors.businessType = \"Business type is required\";\n    if (!formData.yearsInOperation) newErrors.yearsInOperation = \"Years in operation is required\";\n    if (!formData.annualRevenue) newErrors.annualRevenue = \"Annual revenue is required\";\n    if (!formData.loanAmount) newErrors.loanAmount = \"Loan amount is required\";\n    if (!formData.purpose) newErrors.purpose = \"Loan purpose is required\";\n    if (!formData.companyDescription) newErrors.companyDescription = \"Company description is required\";\n    if (!formData.agreeToTerms) newErrors.agreeToTerms = \"You must agree to the terms and conditions\";\n\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n\n  const randomID = () => {"}, {"id": "src/app/dashboard/investee/application/page.tsx_5", "file": "src/app/dashboard/investee/application/page.tsx", "content": "return Object.keys(newErrors).length === 0;\n  };\n\n  const randomID = () => {\n    return Math.floor(Math.random() * 1000000000);\n  };\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (validateForm()) {\n      setIsSubmitting(true);\n      try {\n        const applicationId = randomID();\n        setSubmittedApplicationId(applicationId);\n        \n        // Map form data to application data structure\n        const applicationData = {\n          userId: loggedInUser,\n          id: applicationId,\n          applicationId,\n          companyName: formData.companyName,\n          contactPerson: formData.ownerName,\n          phone: formData.contactNumber,\n          businessType: formData.businessType,\n          yearsInOperation: formData.yearsInOperation,"}, {"id": "src/app/dashboard/investee/application/page.tsx_6", "file": "src/app/dashboard/investee/application/page.tsx", "content": "yearsInOperation: formData.yearsInOperation,\n          annualRevenue: formData.annualRevenue,\n          loanAmount: formData.loanAmount,\n          loanPurpose: formData.purpose,\n          companyDescription: formData.companyDescription,\n          loanAmountInINR: parseInt(formData.loanAmount) * 777.36,\n          fundingReceived: 0,\n          fundingStatus: \"pending\",\n          agreeTerms: formData.agreeToTerms\n        };\n\n        // Save to Firestore\n        const applicationRef = doc(db, \"applications\", applicationId.toString());\n        await setDoc(applicationRef, applicationData);\n\n        toast.success(\"Application submitted successfully!\");\n        router.push(`/dashboard/investee/application/documents?id=${applicationId}&userId=${loggedInUser}`);\n      } catch (error) {"}, {"id": "src/app/dashboard/investee/application/page.tsx_7", "file": "src/app/dashboard/investee/application/page.tsx", "content": "} catch (error) {\n        console.error(\"Error submitting application:\", error);\n        toast.error(\"Failed to submit the application. Please try again.\");\n      } finally {\n        setIsSubmitting(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button \n          variant=\"ghost\" \n          className=\"text-gray-300 hover:text-white\"\n          onClick={() => router.push('/dashboard/investee')}\n        >\n          Back to Dashboard\n        </Button>\n      </nav>\n\n      <div className=\"max-w-3xl mx-auto p-6\">"}, {"id": "src/app/dashboard/investee/application/page.tsx_8", "file": "src/app/dashboard/investee/application/page.tsx", "content": "</Button>\n      </nav>\n\n      <div className=\"max-w-3xl mx-auto p-6\">\n        <h1 className=\"text-2xl font-bold mb-6\">New Loan Application</h1>\n        \n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            {/* Company Details */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Company Name</label>\n                <Input\n                  name=\"companyName\"\n                  value={formData.companyName}\n                  onChange={handleInputChange}\n                  className={`bg-transparent border-[#333333] ${\n                    errors.companyName ? 'border-red-500' : ''\n                  }`}\n                />"}, {"id": "src/app/dashboard/investee/application/page.tsx_9", "file": "src/app/dashboard/investee/application/page.tsx", "content": "}`}\n                />\n                {errors.companyName && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.companyName}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Owner Name</label>\n                <Input\n                  name=\"ownerName\"\n                  value={formData.ownerName}\n                  onChange={handleInputChange}\n                  className={`bg-transparent border-[#333333] ${\n                    errors.ownerName ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.ownerName && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.ownerName}</p>\n                )}\n              </div>"}, {"id": "src/app/dashboard/investee/application/page.tsx_10", "file": "src/app/dashboard/investee/application/page.tsx", "content": ")}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Contact Number</label>\n                <Input\n                  name=\"contactNumber\"\n                  value={formData.contactNumber}\n                  onChange={handleInputChange}\n                  type=\"tel\"\n                  className={`bg-transparent border-[#333333] ${\n                    errors.contactNumber ? 'border-red-500' : ''\n                  }`}\n                />\n                {errors.contactNumber && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.contactNumber}</p>\n                )}\n              </div>\n            </div>\n\n            {/* Business Details */}\n            <div className=\"space-y-4\">\n              <div>"}, {"id": "src/app/dashboard/investee/application/page.tsx_11", "file": "src/app/dashboard/investee/application/page.tsx", "content": "{/* Business Details */}\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Business Type</label>\n                <select\n                  name=\"businessType\"\n                  value={formData.businessType}\n                  onChange={handleInputChange}\n                  className={`w-full p-2 bg-transparent border rounded-md border-[#333333] ${\n                    errors.businessType ? 'border-red-500' : ''\n                  }`}\n                >\n                  <option value=\"\" className=\"bg-black\">Select business type</option>\n                  {businessTypes.map((type) => (\n                    <option key={type} value={type} className=\"bg-black\">\n                      {type}"}, {"id": "src/app/dashboard/investee/application/page.tsx_12", "file": "src/app/dashboard/investee/application/page.tsx", "content": "{type}\n                    </option>\n                  ))}\n                </select>\n                {errors.businessType && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.businessType}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Years in Operation</label>\n                <Input\n                  name=\"yearsInOperation\"\n                  value={formData.yearsInOperation}\n                  onChange={handleInputChange}\n                  type=\"number\"\n                  className=\"bg-transparent border-[#333333]\"\n                />\n                {errors.yearsInOperation && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.yearsInOperation}</p>"}, {"id": "src/app/dashboard/investee/application/page.tsx_13", "file": "src/app/dashboard/investee/application/page.tsx", "content": "<p className=\"text-red-500 text-sm mt-1\">{errors.yearsInOperation}</p>\n                )}\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium mb-2\">Annual Revenue (in APT)</label>\n                <Input\n                  name=\"annualRevenue\"\n                  value={formData.annualRevenue}\n                  onChange={handleInputChange}\n                  type=\"number\"\n                  className=\"bg-transparent border-[#333333]\"\n                />\n                {errors.annualRevenue && (\n                  <p className=\"text-red-500 text-sm mt-1\">{errors.annualRevenue}</p>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Loan Details */}\n          <div className=\"space-y-4\">"}, {"id": "src/app/dashboard/investee/application/page.tsx_14", "file": "src/app/dashboard/investee/application/page.tsx", "content": "</div>\n\n          {/* Loan Details */}\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Loan Amount (in APT)</label>\n              <Input\n                name=\"loanAmount\"\n                value={formData.loanAmount}\n                onChange={handleInputChange}\n                type=\"number\"\n                className=\"bg-transparent border-[#333333]\"\n              />\n              {errors.loanAmount && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.loanAmount}</p>\n              )}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Purpose of Loan</label>\n              <select\n                name=\"purpose\""}, {"id": "src/app/dashboard/investee/application/page.tsx_15", "file": "src/app/dashboard/investee/application/page.tsx", "content": "<select\n                name=\"purpose\"\n                value={formData.purpose}\n                onChange={handleInputChange}\n                className={`w-full p-2 bg-transparent border rounded-md border-[#333333] ${\n                  errors.purpose ? 'border-red-500' : ''\n                }`}\n              >\n                <option value=\"\" className=\"bg-black\">Select loan purpose</option>\n                {loanPurposes.map((purpose) => (\n                  <option key={purpose} value={purpose} className=\"bg-black\">\n                    {purpose}\n                  </option>\n                ))}\n              </select>\n              {errors.purpose && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.purpose}</p>\n              )}\n            </div>"}, {"id": "src/app/dashboard/investee/application/page.tsx_16", "file": "src/app/dashboard/investee/application/page.tsx", "content": ")}\n            </div>\n\n            <div>\n              <label className=\"block text-sm font-medium mb-2\">Brief Company Description</label>\n              <Input\n                name=\"companyDescription\"\n                value={formData.companyDescription}\n                onChange={handleInputChange}\n                className=\"bg-transparent border-[#333333]\"\n                placeholder=\"Brief description of your company and business model\"\n              />\n              {errors.companyDescription && (\n                <p className=\"text-red-500 text-sm mt-1\">{errors.companyDescription}</p>\n              )}\n            </div>\n          </div>\n\n          {/* Terms and Conditions */}\n          <div className=\"flex items-center space-x-2\">\n            <input"}, {"id": "src/app/dashboard/investee/application/page.tsx_17", "file": "src/app/dashboard/investee/application/page.tsx", "content": "<div className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              name=\"agreeToTerms\"\n              id=\"agreeToTerms\"\n              checked={formData.agreeToTerms}\n              onChange={handleInputChange}\n              className=\"h-4 w-4\"\n            />\n            <label htmlFor=\"agreeToTerms\" className=\"text-sm text-gray-300\">\n              I agree to the terms and conditions\n            </label>\n          </div>\n          {errors.agreeToTerms && (\n            <p className=\"text-red-500 text-sm\">{errors.agreeToTerms}</p>\n          )}\n\n          {/* Submit Button */}\n          <Button\n            type=\"submit\"\n            className=\"w-full bg-white text-black hover:bg-gray-200\"\n            disabled={isSubmitting}\n          >"}, {"id": "src/app/dashboard/investee/application/page.tsx_18", "file": "src/app/dashboard/investee/application/page.tsx", "content": "disabled={isSubmitting}\n          >\n            {isSubmitting ? \"Submitting...\" : \"Continue to Document Upload\"}\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_0", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Upload, AlertCircle, CheckCircle, Loader2 } from \"lucide-react\";\nimport { toast } from \"react-hot-toast\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { getDocs, collection, updateDoc, DocumentSnapshot } from \"firebase/firestore\";\nimport { auth, db } from \"@/app/firebase\";\nimport { useEdgeStore } from \"@/lib/edgestore\";\n\ninterface DocumentStatus {\n  file: File | null;\n  status: \"idle\" | \"validating\" | \"success\" | \"error\";\n  url: string;\n}\n\nexport default function DocumentUpload() {\n  const router = useRouter();"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_1", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "url: string;\n}\n\nexport default function DocumentUpload() {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const applicationId = searchParams.get(\"id\");\n  const userId = searchParams.get(\"userId\");\n\n  const [loggedInUser, setLoggedInUser] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const { edgestore } = useEdgeStore();\n\n  const [documents, setDocuments] = useState<Record<string, DocumentStatus>>({\n    identityProof: { file: null, status: \"idle\", url: \"\" },\n    bankStatements: { file: null, status: \"idle\", url: \"\" },\n    taxReturns: { file: null, status: \"idle\", url: \"\" },\n    addressProof: { file: null, status: \"idle\", url: \"\" },\n  });\n\n  const [video, setVideo] = useState<File | null>(null);"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_2", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "});\n\n  const [video, setVideo] = useState<File | null>(null);\n  const [videoError, setVideoError] = useState<string | null>(null);\n  const [videoStatus, setVideoStatus] = useState<\"idle\" | \"validating\" | \"success\" | \"error\">(\"idle\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n\n  // Tags state\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n  const [availableTags, setAvailableTags] = useState<string[]>([\n    \"Technology\",\n    \"Manufacturing\",\n    \"Healthcare\",\n    \"Agribusiness\",\n    \"Renewable-Energy\",\n    \"Education\",\n    \"E-commerce\",\n    \"Infrastructure\",\n    \"Financial-Services\",\n    \"Consumer-Goods\",\n    \"Artisanal-and-Handicrafts\",\n    \"Sustainable-and-Social-Enterprises\",\n    \"Green Buildings\",\n    \"Sustainable Agriculture\",\n    \"Sustainable Forestry\","}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_3", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "\"Green Buildings\",\n    \"Sustainable Agriculture\",\n    \"Sustainable Forestry\",\n    \"Green Transportation\",\n    \"Waste Management\",\n    \"Recycling\",\n  ]);\n  const [customTag, setCustomTag] = useState(\"\");\n\n  // Authentication check\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setLoggedInUser(user.uid);\n        // If there's a userId in the URL and it doesn't match the logged-in user, redirect\n        if (userId && userId !== user.uid) {\n          toast.error(\"Unauthorized access\");\n          router.push(\"/dashboard/investee\");\n        }\n      } else {\n        router.push(\"/login\");\n      }\n    });\n  }, [router, userId]);\n\n  const validateFile = async (file: File, type: string): Promise<boolean> => {\n    // For documents"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_4", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "const validateFile = async (file: File, type: string): Promise<boolean> => {\n    // For documents\n    if (type !== \"video\") {\n      // Validate file size (max 5MB for documents)\n      if (file.size > 5 * 1024 * 1024) {\n        toast.error(`File size should be less than 5MB`);\n        return false;\n      }\n\n      // Validate file type\n      const allowedTypes = [\"application/pdf\", \"image/jpeg\", \"image/png\"];\n      if (!allowedTypes.includes(file.type)) {\n        toast.error(\"Only PDF, JPEG, and PNG files are allowed\");\n        return false;\n      }\n    } else {\n      // For video\n      // Validate video size (max 50MB)\n      if (file.size > 50 * 1024 * 1024) {\n        toast.error(\"Video size should be less than 50MB\");\n        return false;\n      }\n\n      // Validate video type"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_5", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "return false;\n      }\n\n      // Validate video type\n      const allowedTypes = [\"video/mp4\", \"video/quicktime\"];\n      if (!allowedTypes.includes(file.type)) {\n        toast.error(\"Only MP4 and MOV formats are allowed\");\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const handleFileChange = async (documentId: string, file: File | null) => {\n    if (!file) return;\n\n    // Update state to show validating\n    setDocuments((prev) => ({\n      ...prev,\n      [documentId]: {\n        ...prev[documentId],\n        file,\n        status: \"validating\",\n      },\n    }));\n\n    // Validate the file\n    const isValid = await validateFile(file, \"document\");\n    if (!isValid) {\n      setDocuments((prev) => ({\n        ...prev,\n        [documentId]: {\n          ...prev[documentId],"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_6", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "...prev,\n        [documentId]: {\n          ...prev[documentId],\n          status: \"error\",\n        },\n      }));\n      return;\n    }\n\n    try {\n      if (!edgestore) {\n        toast.error(\"Upload service unavailable\");\n        setDocuments((prev) => ({\n          ...prev,\n          [documentId]: { ...prev[documentId], status: \"error\" },\n        }));\n        return;\n      }\n\n      // Upload to EdgeStore\n      const res = await edgestore.publicFiles.upload({\n        file,\n        onProgressChange: (progress) => {\n          console.log(`${documentId} upload progress:`, progress);\n        },\n      });\n\n      // Update state with success\n      setDocuments((prev) => ({\n        ...prev,\n        [documentId]: {\n          file,\n          status: \"success\",\n          url: res.url,"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_7", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "[documentId]: {\n          file,\n          status: \"success\",\n          url: res.url,\n        },\n      }));\n      toast.success(\n        `${documentId.replace(/([A-Z])/g, \" $1\").trim()} uploaded successfully!`\n      );\n    } catch (error) {\n      console.error(`Error uploading ${documentId}:`, error);\n      setDocuments((prev) => ({\n        ...prev,\n        [documentId]: { ...prev[documentId], status: \"error\" },\n      }));\n      toast.error(\n        `Failed to upload ${documentId.replace(/([A-Z])/g, \" $1\").trim()}`\n      );\n    }\n  };\n\n  const handleVideoUpload = async (file: File | null) => {\n    if (!file) return;\n\n    setVideoStatus(\"validating\");\n    setVideoError(null);\n\n    // Validate the video\n    const isValid = await validateFile(file, \"video\");\n    if (!isValid) {"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_8", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "const isValid = await validateFile(file, \"video\");\n    if (!isValid) {\n      setVideoStatus(\"error\");\n      return;\n    }\n\n    try {\n      if (!edgestore) {\n        throw new Error(\"Upload service unavailable\");\n      }\n\n      // Upload to EdgeStore\n      const res = await edgestore.publicFiles.upload({\n        file,\n        onProgressChange: (progress) => {\n          console.log(\"Video upload progress:\", progress);\n        },\n      });\n\n      setVideo(file);\n      setVideoStatus(\"success\");\n      setVideoUrl(res.url);\n      toast.success(\"Pitch video uploaded successfully!\");\n    } catch (error) {\n      console.error(\"Error uploading video:\", error);\n      setVideoStatus(\"error\");\n      setVideoError(\"Failed to upload video. Please try again.\");\n    }\n  };"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_9", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "setVideoError(\"Failed to upload video. Please try again.\");\n    }\n  };\n\n  const handleDragOver = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = useCallback(\n    async (e: React.DragEvent<HTMLDivElement>, documentId: string) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const droppedFile = e.dataTransfer.files[0];\n      if (!droppedFile) return;\n\n      await handleFileChange(documentId, droppedFile);\n    },\n    []\n  );\n\n  const handleSubmit = async () => {\n    // Validate that all required documents, video, and at least one tag are provided\n    const allDocumentsUploaded = Object.values(documents).every(\n      (doc) => doc.status === \"success\"\n    );"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_10", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "(doc) => doc.status === \"success\"\n    );\n    if (!allDocumentsUploaded || videoStatus !== \"success\" || selectedTags.length === 0) {\n      toast.error(\n        \"Please upload all required documents, pitch video, and select at least one tag\"\n      );\n      return;\n    }\n\n    setIsSubmitting(true);\n    try {\n      if (!applicationId || !loggedInUser) {\n        throw new Error(\"Missing application ID or user information\");\n      }\n\n      // Get all document URLs\n      const documentUrls = Object.entries(documents).reduce((acc, [key, value]) => {\n        acc[key] = value.url;\n        return acc;\n      }, {} as Record<string, string>);\n\n      // Find the application document and update it\n      const applicationsRef = collection(db, \"applications\");"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_11", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "const applicationsRef = collection(db, \"applications\");\n      const querySnapshot = await getDocs(applicationsRef);\n      let applicationDoc: DocumentSnapshot<any> | null = null;\n\n      querySnapshot.forEach((doc) => {\n        const data = doc.data();\n        if (data.id.toString() === applicationId) {\n          applicationDoc = doc;\n        }\n      });\n\n      if (!applicationDoc) {\n        throw new Error(\"Application not found\");\n      }\n      //@ts-ignore\n      await updateDoc(applicationDoc.ref as any, {\n        documents: documentUrls,\n        videoLink: videoUrl,\n        tags: selectedTags,\n      });\n\n      toast.success(\"Application submitted successfully!\");\n      router.push(`/dashboard/investee/viewapplication?id=${applicationId}`);\n    } catch (error) {"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_12", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "router.push(`/dashboard/investee/viewapplication?id=${applicationId}`);\n    } catch (error) {\n      console.error(\"Error submitting application:\", error);\n      toast.error(\"Failed to submit application. Please try again.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button\n          variant=\"ghost\"\n          className=\"text-white bg-black hover:bg-white hover:text-black\"\n          onClick={() => router.back()}\n        >\n          Back\n        </Button>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto p-6\">"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_13", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "Back\n        </Button>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto p-6\">\n        <h1 className=\"text-2xl font-bold mb-6\">Upload Documents</h1>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Document Upload Section */}\n          <div className=\"space-y-6\">\n            {Object.entries(documents).map(([docId, status]) => (\n              <div key={docId} className=\"p-4 border border-[#333333] rounded-lg\">\n                <div className=\"flex justify-between items-start mb-2\">\n                  <div>\n                    <h3 className=\"font-medium capitalize\">\n                      {docId.replace(/([A-Z])/g, \" $1\").trim()}\n                    </h3>\n                    <p className=\"text-sm text-gray-400\">"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_14", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "</h3>\n                    <p className=\"text-sm text-gray-400\">\n                      PDF, JPEG or PNG (max. 5MB)\n                    </p>\n                  </div>\n                  {status.status === \"success\" && (\n                    <CheckCircle className=\"text-green-500 h-5 w-5\" />\n                  )}\n                  {status.status === \"validating\" && (\n                    <Loader2 className=\"text-yellow-500 h-5 w-5 animate-spin\" />\n                  )}\n                  {status.status === \"error\" && (\n                    <AlertCircle className=\"text-red-500 h-5 w-5\" />\n                  )}\n                </div>\n\n                <div\n                  className={`mt-4 border-2 border-dashed rounded-lg p-4 text-center cursor-pointer transition-colors"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_15", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "${status.status === \"idle\"\n                      ? \"border-gray-500 hover:border-white\"\n                      : \"\"\n                    }\n                    ${status.status === \"validating\" ? \"border-yellow-500\" : \"\"}\n                    ${status.status === \"success\" ? \"border-green-500\" : \"\"}\n                    ${status.status === \"error\" ? \"border-red-500\" : \"\"}`}\n                  onDragOver={handleDragOver}\n                  onDrop={(e) => handleDrop(e, docId)}\n                >\n                  <input\n                    type=\"file\"\n                    id={docId}\n                    className=\"hidden\"\n                    accept=\".pdf,.jpg,.jpeg,.png\"\n                    onChange={(e) =>\n                      handleFileChange(docId, e.target.files?.[0] || null)"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_16", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "handleFileChange(docId, e.target.files?.[0] || null)\n                    }\n                  />\n                  <label\n                    htmlFor={docId}\n                    className=\"flex flex-col items-center justify-center gap-2 cursor-pointer\"\n                  >\n                    <Upload className=\"h-6 w-6\" />\n                    {status.file ? \"Change File\" : \"Drag & drop or click to upload\"}\n                  </label>\n                  {status.file && (\n                    <p className=\"text-sm text-gray-400 mt-2\">\n                      {status.file.name}\n                    </p>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n          {/* Video Upload Section */}\n          <div className=\"space-y-6\">"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_17", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "</div>\n          {/* Video Upload Section */}\n          <div className=\"space-y-6\">\n            <div className=\"p-4 border border-[#333333] rounded-lg\">\n              <div className=\"flex justify-between items-start mb-2\">\n                <div>\n                  <h3 className=\"font-medium\">Pitch Video</h3>\n                  <p className=\"text-sm text-gray-400\">\n                    Upload a short video (max. 50MB) pitching your business and loan requirement\n                  </p>\n                </div>\n                {videoStatus === \"success\" && (\n                  <CheckCircle className=\"text-green-500 h-5 w-5\" />\n                )}\n                {videoStatus === \"validating\" && (\n                  <Loader2 className=\"text-yellow-500 h-5 w-5 animate-spin\" />"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_18", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "<Loader2 className=\"text-yellow-500 h-5 w-5 animate-spin\" />\n                )}\n                {videoStatus === \"error\" && (\n                  <AlertCircle className=\"text-red-500 h-5 w-5\" />\n                )}\n              </div>\n\n              <div\n                className={`mt-4 border-2 border-dashed rounded-lg p-4 text-center cursor-pointer transition-colors\n                  ${videoStatus === \"idle\"\n                    ? \"border-gray-500 hover:border-white\"\n                    : \"\"\n                  }\n                  ${videoStatus === \"validating\" ? \"border-yellow-500\" : \"\"}\n                  ${videoStatus === \"success\" ? \"border-green-500\" : \"\"}\n                  ${videoStatus === \"error\" ? \"border-red-500\" : \"\"}`}\n              >\n                <input"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_19", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": ">\n                <input\n                  type=\"file\"\n                  id=\"pitchVideo\"\n                  className=\"hidden\"\n                  accept=\"video/mp4,video/quicktime\"\n                  onChange={(e) =>\n                    handleVideoUpload(e.target.files?.[0] || null)\n                  }\n                />\n                <label\n                  htmlFor=\"pitchVideo\"\n                  className=\"flex flex-col items-center justify-center gap-2 cursor-pointer\"\n                >\n                  <Upload className=\"h-6 w-6\" />\n                  {video ? \"Change Video\" : \"Drag & drop or click to upload\"}\n                </label>\n                {video && (\n                  <p className=\"text-sm text-gray-400 mt-2\">{video.name}</p>\n                )}"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_20", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "<p className=\"text-sm text-gray-400 mt-2\">{video.name}</p>\n                )}\n                {videoError && (\n                  <p className=\"text-red-500 text-sm mt-2\">{videoError}</p>\n                )}\n              </div>\n\n              {video && videoStatus === \"success\" && (\n                <video\n                  className=\"mt-4 w-full rounded-lg\"\n                  controls\n                  src={videoUrl || URL.createObjectURL(video)}\n                />\n              )}\n            </div>\n            {/* Tags Section */}\n          <div className=\"mt-8\">\n            <h2 className=\"text-2xl font-bold mb-4\">Tags</h2>\n            <p className=\"text-sm text-gray-400 mb-4\">\n              Select tags that best describe your business:\n            </p>"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_21", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "Select tags that best describe your business:\n            </p>\n            <div className=\"flex flex-wrap gap-2 mb-4\">\n              {availableTags.map((tag) => (\n                <button\n                  key={tag}\n                  type=\"button\"\n                  onClick={() => {\n                    setSelectedTags((prev) => [...prev, tag]);\n                    setAvailableTags((prev) => prev.filter((t) => t !== tag));\n                  }}\n                  className=\"px-3 py-1 rounded-full text-sm bg-gray-700 hover:bg-gray-600\"\n                >\n                  {tag}\n                </button>\n              ))}\n            </div>\n            <div className=\"flex gap-2 mb-4\">\n              <input\n                type=\"text\"\n                value={customTag}"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_22", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": "<input\n                type=\"text\"\n                value={customTag}\n                onChange={(e) => setCustomTag(e.target.value)}\n                placeholder=\"Enter custom tag\"\n                className=\"flex-1 px-3 py-2 border rounded-lg border-gray-600 bg-black text-white placeholder-gray-400 focus:ring-2 focus:ring-purple-500 focus:border-transparent\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => {\n                  if (customTag.trim()) {\n                    setSelectedTags((prev) => [...prev, customTag.trim()]);\n                    setCustomTag(\"\");\n                  }\n                }}\n                className=\"px-4 py-2 text-white bg-blue-800 rounded-lg\"\n              >\n                Add"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_23", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": ">\n                Add\n              </button>\n            </div>\n            <div>\n              <h3 className=\"font-semibold mb-2\">Selected Tags:</h3>\n              <div className=\"flex flex-wrap gap-2\">\n                {selectedTags.map((tag, index) => (\n                  <div\n                    key={index}\n                    className=\"px-3 py-1 rounded-full text-sm bg-gray-800 text-white flex items-center gap-1\"\n                  >\n                    {tag}\n                    <button\n                      type=\"button\"\n                      onClick={() => {\n                        setSelectedTags((prev) =>\n                          prev.filter((t) => t !== tag)\n                        );\n                        setAvailableTags((prev) => [...prev, tag]);"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_24", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": ");\n                        setAvailableTags((prev) => [...prev, tag]);\n                      }}\n                      className=\"text-red-400 hover:text-red-300\"\n                    >\n                      \u00c3\u2014\n                    </button>\n                  </div>\n                ))}\n              </div>\n\n            </div>\n          </div>\n          </div>\n          \n        </div>\n\n        {/* Submit Button */}\n        <div className=\"mt-8 flex justify-end gap-4\">\n          <Button\n            variant=\"outline\"\n            className=\"border-white text-white bg-black hover:bg-white hover:text-black\"\n            onClick={() => router.back()}\n          >\n            Back\n          </Button>\n          <Button"}, {"id": "src/app/dashboard/investee/application/documents/page.tsx_25", "file": "src/app/dashboard/investee/application/documents/page.tsx", "content": ">\n            Back\n          </Button>\n          <Button\n            className=\"bg-white text-black hover:bg-gray-200\"\n            onClick={handleSubmit}\n            disabled={\n              isSubmitting ||\n              !Object.values(documents).every((doc) => doc.status === \"success\") ||\n              videoStatus !== \"success\" ||\n              selectedTags.length === 0\n            }\n          >\n            {isSubmitting ? \"Submitting...\" : \"Submit Application\"}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_0", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "================================================\n\"use client\";\nimport { useRouter } from \"next/navigation\";\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  CheckCircle,\n  Building,\n  Calendar,\n  DollarSign,\n  TrendingUp,\n  Clock,\n  ArrowRight,\n  FileText,\n  Shield,\n  AlertCircle\n} from \"lucide-react\";\n\n// Mock selected bid data - replace with actual data from your state management\nconst selectedBid = {\n  id: \"BID001\",\n  investorName: \"Harshit\",\n  investorType: \"Individual Investor\",\n  bidAmount: \"120\",\n  currency: \"APT\",\n  inrValue: \"\u00e2\u201a\u00b993,283\",\n  interestRate: \"10.5%\",\n  tenure: \"12 months\",\n  monthlyPayment: \"11 APT\",\n  disbursementDate: \"2024-03-15\",\n  firstPaymentDate: \"2024-04-15\",\n  documents: [\n    \"Loan Agreement\","}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_1", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "firstPaymentDate: \"2024-04-15\",\n  documents: [\n    \"Loan Agreement\",\n    \"Payment Schedule\",\n    \"Terms & Conditions\"\n  ]\n};\n\n\nexport default function BidConfirmation() {\n  const router = useRouter();\n  const [isConfirming, setIsConfirming] = useState(false);\n  const [showSuccess, setShowSuccess] = useState(false);\n  const [countdown, setCountdown] = useState(5);\n\n  useEffect(() => {\n    if (showSuccess) {\n      const timer = setInterval(() => {\n        setCountdown((prev) => {\n          if (prev <= 1) {\n            clearInterval(timer);\n            router.push('/dashboard/investee');\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [showSuccess, router]);\n\n  const handleConfirm = async () => {"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_2", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "}\n  }, [showSuccess, router]);\n\n  const handleConfirm = async () => {\n    setIsConfirming(true);\n    try {\n      // API call to confirm bid would go here\n      await new Promise(resolve => setTimeout(resolve, 1500)); // Simulate API call\n      setShowSuccess(true);\n    } catch (error) {\n      console.error('Error confirming bid:', error);\n    } finally {\n      setIsConfirming(false);\n    }\n  };\n\n  if (showSuccess) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"text-center space-y-4 p-6\">\n          <CheckCircle className=\"w-16 h-16 text-green-500 mx-auto\" />\n          <h1 className=\"text-2xl font-bold\">Bid Successfully Confirmed!</h1>\n          <p className=\"text-gray-400\">"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_3", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<p className=\"text-gray-400\">\n            Your investment agreement has been finalized with {selectedBid.investorName}\n          </p>\n          <p className=\"text-sm text-gray-500\">\n            Redirecting to dashboard in {countdown} seconds...\n          </p>\n          <Button\n            onClick={() => router.push('/dashboard/investee')}\n            className=\"bg-white text-black hover:bg-gray-200\"\n          >\n            Go to Dashboard Now\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button \n          variant=\"ghost\""}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_4", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<Button \n          variant=\"ghost\" \n          className=\"text-gray-300 hover:text-white\"\n          onClick={() => router.push('/dashboard/investee/bids')}\n        >\n          Back to Bids\n        </Button>\n      </nav>\n\n      <div className=\"max-w-4xl mx-auto p-6\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-2xl font-bold mb-2\">Confirm Investment Agreement</h1>\n          <p className=\"text-gray-400\">\n            Please review the final terms before confirming the investment\n          </p>\n        </div>\n\n        {/* Investor Details */}\n        <div className=\"bg-[#111111] rounded-lg border border-[#333333] p-6 mb-6\">\n          <div className=\"flex items-start justify-between mb-6\">\n            <div className=\"flex items-center gap-2\">"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_5", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<div className=\"flex items-center gap-2\">\n              <Building className=\"w-5 h-5 text-gray-400\" />\n              <div>\n                <h2 className=\"text-lg font-medium\">{selectedBid.investorName}</h2>\n                <p className=\"text-sm text-gray-400\">{selectedBid.investorType}</p>\n              </div>\n            </div>\n            <Shield className=\"w-5 h-5 text-green-500\" />\n          </div>\n\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n            <div>\n              <p className=\"text-sm text-gray-400\">Investment Amount</p>\n              <div className=\"flex items-center mt-1\">\n                <DollarSign className=\"w-4 h-4 mr-1 text-gray-400\" />\n                <p className=\"font-medium\">"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_6", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<p className=\"font-medium\">\n                  {selectedBid.bidAmount} {selectedBid.currency}\n                </p>\n              </div>\n              <p className=\"text-sm text-gray-500\">{selectedBid.inrValue}</p>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-400\">Interest Rate</p>\n              <div className=\"flex items-center mt-1\">\n                <TrendingUp className=\"w-4 h-4 mr-1 text-gray-400\" />\n                <p className=\"font-medium\">{selectedBid.interestRate}</p>\n              </div>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-400\">Tenure</p>\n              <div className=\"flex items-center mt-1\">\n                <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_7", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                <p className=\"font-medium\">{selectedBid.tenure}</p>\n              </div>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-400\">Monthly Payment</p>\n              <p className=\"font-medium mt-1\">{selectedBid.monthlyPayment}</p>\n            </div>\n          </div>\n        </div>\n\n        {/* Important Dates */}\n        <div className=\"bg-[#111111] rounded-lg border border-[#333333] p-6 mb-6\">\n          <h3 className=\"text-lg font-medium mb-4\">Important Dates</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n            <div>\n              <p className=\"text-sm text-gray-400\">Disbursement Date</p>\n              <div className=\"flex items-center mt-1\">"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_8", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<div className=\"flex items-center mt-1\">\n                <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                <p className=\"font-medium\">{selectedBid.disbursementDate}</p>\n              </div>\n            </div>\n            <div>\n              <p className=\"text-sm text-gray-400\">First Payment Due</p>\n              <div className=\"flex items-center mt-1\">\n                <Clock className=\"w-4 h-4 mr-1 text-gray-400\" />\n                <p className=\"font-medium\">{selectedBid.firstPaymentDate}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Documents */}\n        <div className=\"bg-[#111111] rounded-lg border border-[#333333] p-6 mb-8\">\n          <h3 className=\"text-lg font-medium mb-4\">Required Documents</h3>"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_9", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<h3 className=\"text-lg font-medium mb-4\">Required Documents</h3>\n          <div className=\"space-y-3\">\n            {selectedBid.documents.map((doc, index) => (\n              <div key={index} className=\"flex items-center gap-2\">\n                <FileText className=\"w-4 h-4 text-gray-400\" />\n                <span>{doc}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Warning */}\n        <div className=\"bg-yellow-500/10 rounded-lg p-4 mb-8\">\n          <div className=\"flex items-start gap-3\">\n            <AlertCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n            <div>\n              <p className=\"font-medium text-yellow-500\">Important Notice</p>\n              <p className=\"text-sm text-gray-400 mt-1\">"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_10", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "<p className=\"text-sm text-gray-400 mt-1\">\n                By confirming this agreement, you are entering into a legally binding contract.\n                Please ensure you have reviewed all terms and conditions.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"flex justify-end gap-4\">\n          <Button\n            variant=\"outline\"\n            className=\"border-[#333333] text-black hover:bg-[#222222]\"\n            onClick={() => router.push('/dashboard/investee/bids')}\n          >\n            Cancel\n          </Button>\n          <Button\n            onClick={handleConfirm}\n            disabled={isConfirming}\n            className=\"bg-green-500 text-white hover:bg-green-600\"\n          >"}, {"id": "src/app/dashboard/investee/bidconfirmation/page.tsx_11", "file": "src/app/dashboard/investee/bidconfirmation/page.tsx", "content": "className=\"bg-green-500 text-white hover:bg-green-600\"\n          >\n            {isConfirming ? (\n              'Confirming...'\n            ) : (\n              <>\n                Confirm Agreement\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </>\n            )}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investee/bids/page.tsx_0", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "================================================\n'use client';\n/* eslint-disable */\nimport { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams } from 'next/navigation';\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Building,\n  DollarSign,\n  Calendar,\n  TrendingUp,\n  CheckCircle,\n  Shield,\n  AlertCircle,\n  ChevronDown,\n  ChevronUp,\n} from \"lucide-react\";\nimport { db, auth } from '@/app/firebase';\nimport { collection, query, where, getDocs, doc, getDoc, updateDoc } from 'firebase/firestore';\n\n// Types\ninterface Bid {\n  bidId: string;\n  userId: string;\n  applicationId: string;\n  interestRate: string;\n  tenure: string;\n  status: string;\n  loanAmount: string;\n  currency: string;\n  inrValue: string;\n  monthlyPayment: string;\n  bidDate: string;"}, {"id": "src/app/dashboard/investee/bids/page.tsx_1", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "currency: string;\n  inrValue: string;\n  monthlyPayment: string;\n  bidDate: string;\n  smeuserId?: string;\n  investorDetails?: {\n    portfolioSize: string;\n    successfulInvestments: number;\n    averageInvestmentSize: string;\n    verificationStatus: string;\n    description: string;\n    previousInvestments: string[];\n  };\n}\n\ninterface UserData {\n  displayName: string;\n  finalizedBid?: {\n    applicationId: string;\n    finalized: boolean;\n  };\n  portfolioSize?: string;\n  successfulInvestments?: number;\n  averageInvestmentSize?: string;\n  verificationStatus?: string;\n  description?: string;\n  previousInvestments?: string[];\n}\n\nexport default function BidsOverview() {\n  const [filteredBids, setFilteredBids] = useState<Bid[]>([]);"}, {"id": "src/app/dashboard/investee/bids/page.tsx_2", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "const [filteredBids, setFilteredBids] = useState<Bid[]>([]);\n  const [names, setNames] = useState<{ [key: string]: string }>({});\n  const [showModal, setShowModal] = useState(false);\n  const [selectedBid, setSelectedBid] = useState<Bid | null>(null);\n  const [expandedBid, setExpandedBid] = useState<string | null>(null);\n  const [currentUserId, setCurrentUserId] = useState<string | null>(null);\n  const [currentAptosKey, setCurrentAptosKey] = useState<string | null>(null);\n  const search = useSearchParams();\n  const router = useRouter();\n  const id = search.get(\"id\");\n\n  useEffect(() => {\n    // Get current user ID\n    const unsubscribe = auth.onAuthStateChanged(async (user) => {\n      if (user) {\n        setCurrentUserId(user.uid);\n        setCurrentAptosKey(user.phoneNumber);"}, {"id": "src/app/dashboard/investee/bids/page.tsx_3", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "if (user) {\n        setCurrentUserId(user.uid);\n        setCurrentAptosKey(user.phoneNumber);\n        const userRef = doc(db, \"users\", user.uid); // Assuming uid is the document ID\n        const userSnap = await getDoc(userRef);\n\n        if (userSnap.exists()) {\n          console.log(\"Phone Number:\", userSnap.data().phoneNumber);\n          setCurrentAptosKey(userSnap.data().phoneNumber);\n        } else {\n          console.log(\"No such user!\");\n          return null;\n        }\n      }\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  useEffect(() => {\n    const fetchFilteredBids = async () => {\n      if (!id) return;\n\n      try {\n        const q = query(collection(db, 'bids'), where('applicationId', '==', id));\n        const querySnapshot = await getDocs(q);"}, {"id": "src/app/dashboard/investee/bids/page.tsx_4", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "const querySnapshot = await getDocs(q);\n\n        const bidsPromises = querySnapshot.docs.map(async (document) => {\n          const bid = { ...document.data(), bidId: document.id } as Bid;\n          const userRef = doc(db, 'users', bid.userId.toString());\n          const userSnap = await getDoc(userRef);\n\n          if (userSnap.exists()) {\n            const userData = userSnap.data() as UserData;\n            setNames(prevNames => ({ ...prevNames, [bid.userId]: userData.displayName }));\n\n            // Add investor details to bid\n            bid.investorDetails = {\n              portfolioSize: userData.portfolioSize || \"N/A\",\n              successfulInvestments: userData.successfulInvestments || 0,\n              averageInvestmentSize: userData.averageInvestmentSize || \"N/A\","}, {"id": "src/app/dashboard/investee/bids/page.tsx_5", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "averageInvestmentSize: userData.averageInvestmentSize || \"N/A\",\n              verificationStatus: userData.verificationStatus || \"unverified\",\n              description: userData.description || \"No description available\",\n              previousInvestments: userData.previousInvestments || []\n            };\n          }\n          return bid;\n        });\n\n        const bidsData = await Promise.all(bidsPromises);\n        setFilteredBids(bidsData);\n      } catch (error) {\n        console.error('Error fetching filtered bids:', error);\n      }\n    };\n\n    fetchFilteredBids();\n  }, [id]);\n\n  const toggleBidDetails = (bidId: string) => {\n    setExpandedBid(expandedBid === bidId ? null : bidId);\n  };\n\n  const handleFinalizeBid = async (bid: Bid) => {\n    try {"}, {"id": "src/app/dashboard/investee/bids/page.tsx_6", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "};\n\n  const handleFinalizeBid = async (bid: Bid) => {\n    try {\n      // Add smeuserId to the selected bid\n      const selectedBidRef = doc(db, 'bids', bid.bidId);\n      await updateDoc(selectedBidRef, {\n        smeuserId: currentAptosKey,\n        status: 'payment'\n      });\n\n      // Update all other bids for this application to 'payment' status\n      const querySnapshot = await getDocs(\n        query(collection(db, 'bids'), where('applicationId', '==', bid.applicationId))\n      );\n\n      const updatePromises = querySnapshot.docs.map(async (document) => {\n        if (document.id !== bid.bidId) {  // Skip the selected bid as we've already updated it\n          await updateDoc(doc(db, 'bids', document.id), { status: 'payment' });\n        }\n      });"}, {"id": "src/app/dashboard/investee/bids/page.tsx_7", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "}\n      });\n\n      await Promise.all(updatePromises);\n\n      // Update application status\n      const applicationRef = doc(db, 'applications', bid.applicationId);\n      await updateDoc(applicationRef, { fundingStatus: 'payment' });\n\n      // Update user document\n      const userRef = doc(db, 'users', bid.userId.toString());\n      const userSnap = await getDoc(userRef);\n      if (userSnap.exists()) {\n        await updateDoc(userRef, {\n          finalizedBid: {\n            applicationId: bid.applicationId,\n            finalized: true,\n          },\n        });\n      }\n\n      //send email\n\n      setShowModal(false);\n      router.push('/dashboard/investee/bidconfirmation');\n    } catch (error) {\n      console.error('Error finalizing bid:', error);\n    }\n  };\n\n  return ("}, {"id": "src/app/dashboard/investee/bids/page.tsx_8", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "} catch (error) {\n      console.error('Error finalizing bid:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button\n          variant=\"outline\"\n          className=\"text-gray-300 bg-black hover:text-black hover:bg-white\"\n          onClick={() => router.push('/dashboard/investee')}\n        >\n          Back to Dashboard\n        </Button>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto p-6\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <h1 className=\"text-2xl font-bold mb-2\">Active Bids</h1>"}, {"id": "src/app/dashboard/investee/bids/page.tsx_9", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "<div>\n            <h1 className=\"text-2xl font-bold mb-2\">Active Bids</h1>\n            <p className=\"text-gray-400\">Review and finalize investment bids for your application</p>\n          </div>\n          {selectedBid && (\n            <Button\n              onClick={() => setShowModal(true)}\n              className=\"bg-green-500 text-white hover:bg-green-600\"\n            >\n              <CheckCircle className=\"w-4 h-4 mr-2\" />\n              Finalize Selected Bid\n            </Button>\n          )}\n        </div>\n\n        {/* Bids List */}\n        <div className=\"space-y-4\">\n          {filteredBids.map((bid) => (\n            <div\n              key={bid.bidId}\n              className={`bg-[#111111] rounded-lg border ${selectedBid?.bidId === bid.bidId"}, {"id": "src/app/dashboard/investee/bids/page.tsx_10", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "className={`bg-[#111111] rounded-lg border ${selectedBid?.bidId === bid.bidId\n                  ? 'border-green-500'\n                  : 'border-[#333333]'\n                }`}\n            >\n              {/* Bid Header */}\n              <div className=\"p-6\">\n                <div className=\"flex justify-between items-start\">\n                  <div className=\"space-y-1\">\n                    <div className=\"flex items-center gap-2\">\n                      <Building className=\"w-5 h-5 text-gray-400\" />\n                      <h3 className=\"text-lg font-medium\">{names[bid.userId] || \"Unknown\"}</h3>\n                      {bid.investorDetails?.verificationStatus === \"verified\" && (\n                        <Shield className=\"w-4 h-4 text-green-500\" />\n                      )}"}, {"id": "src/app/dashboard/investee/bids/page.tsx_11", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "<Shield className=\"w-4 h-4 text-green-500\" />\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-4\">\n                    <Button\n                      variant=\"outline\"\n                      className={`border-[#333333] ${selectedBid?.bidId === bid.bidId\n                          ? 'bg-green-500 text-black hover:bg-green-600'\n                          : 'text-black hover:bg-black hover:text-white ]'\n                        }`}\n                      onClick={() => setSelectedBid(selectedBid?.bidId === bid.bidId ? null : bid)}\n                    >\n                      {selectedBid?.bidId === bid.bidId ? 'Selected' : 'Select Bid'}\n                    </Button>"}, {"id": "src/app/dashboard/investee/bids/page.tsx_12", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "</Button>\n                    <button\n                      onClick={() => toggleBidDetails(bid.bidId)}\n                      className=\"text-gray-400 hover:text-white\"\n                    >\n                      {expandedBid === bid.bidId ? (\n                        <ChevronUp className=\"w-5 h-5\" />\n                      ) : (\n                        <ChevronDown className=\"w-5 h-5\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                {/* Bid Summary */}\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-4\">\n                  <div>\n                    <p className=\"text-sm text-gray-400\">Bid Amount</p>\n                    <div className=\"flex items-center mt-1\">"}, {"id": "src/app/dashboard/investee/bids/page.tsx_13", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "<div className=\"flex items-center mt-1\">\n                      <DollarSign className=\"w-4 h-4 mr-1 text-gray-400\" />\n                      <p className=\"font-medium\">{bid.loanAmount} {bid.currency}</p>\n                    </div>\n                    <p className=\"text-sm text-gray-500\">{bid.inrValue}</p>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-400\">Interest Rate</p>\n                    <div className=\"flex items-center mt-1\">\n                      <TrendingUp className=\"w-4 h-4 mr-1 text-gray-400\" />\n                      <p className=\"font-medium\">{bid.interestRate}</p>\n                    </div>\n                  </div>\n                  <div>"}, {"id": "src/app/dashboard/investee/bids/page.tsx_14", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "</div>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-400\">Tenure</p>\n                    <div className=\"flex items-center mt-1\">\n                      <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                      <p className=\"font-medium\">{bid.tenure}</p>\n                    </div>\n                  </div>\n                  <div>\n                    <p className=\"text-sm text-gray-400\">Monthly Payment</p>\n                    <p className=\"font-medium mt-1\">{bid.monthlyPayment}</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Expanded Details */}\n              {expandedBid === bid.bidId && bid.investorDetails && ("}, {"id": "src/app/dashboard/investee/bids/page.tsx_15", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "{expandedBid === bid.bidId && bid.investorDetails && (\n                <div className=\"px-6 pb-6 border-t border-[#333333] mt-4 pt-4\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-medium\">Investor Profile</h4>\n                      <div className=\"space-y-2\">\n                        <div>\n                          <p className=\"text-sm text-gray-400\">Portfolio Size</p>\n                          <p className=\"font-medium\">{bid.investorDetails.portfolioSize}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-400\">Successful Investments</p>"}, {"id": "src/app/dashboard/investee/bids/page.tsx_16", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "<p className=\"text-sm text-gray-400\">Successful Investments</p>\n                          <p className=\"font-medium\">{bid.investorDetails.successfulInvestments}</p>\n                        </div>\n                        <div>\n                          <p className=\"text-sm text-gray-400\">Average Investment</p>\n                          <p className=\"font-medium\">{bid.investorDetails.averageInvestmentSize}</p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-medium\">Previous Investments</h4>\n                      <div className=\"flex flex-wrap gap-2\">\n                        {bid.investorDetails.previousInvestments.map((company) => ("}, {"id": "src/app/dashboard/investee/bids/page.tsx_17", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "{bid.investorDetails.previousInvestments.map((company) => (\n                          <span\n                            key={company}\n                            className=\"px-3 py-1 rounded-full bg-[#333333] text-sm\"\n                          >\n                            {company}\n                          </span>\n                        ))}\n                      </div>\n                      <p className=\"text-sm text-gray-400\">\n                        {bid.investorDetails.description}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {filteredBids.length === 0 && (\n          <div className=\"text-center py-12\">"}, {"id": "src/app/dashboard/investee/bids/page.tsx_18", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "{filteredBids.length === 0 && (\n          <div className=\"text-center py-12\">\n            <AlertCircle className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n            <h3 className=\"text-lg font-medium mb-2\">No Active Bids</h3>\n            <p className=\"text-gray-400\">\n              There are currently no bids on your application.\n              Check back later or adjust your application details.\n            </p>\n          </div>\n        )}\n      </div>\n\n      {/* Confirmation Modal */}\n      {showModal && selectedBid && (\n        <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50\">\n          <div className=\"bg-[#111111] p-8 rounded-lg border border-[#333333]\">\n            <h3 className=\"text-xl font-medium mb-4\">Confirm Bid Finalization</h3>"}, {"id": "src/app/dashboard/investee/bids/page.tsx_19", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "<h3 className=\"text-xl font-medium mb-4\">Confirm Bid Finalization</h3>\n            <p className=\"text-gray-400 mb-6\">\n              Are you sure you want to finalize this bid? This action cannot be undone.\n            </p>\n            <div className=\"flex justify-end gap-4\">\n              <Button\n                variant=\"outline\"\n                onClick={() => setShowModal(false)}\n                className=\"border-[#333333] text-black\"\n              >\n                Cancel\n              </Button>\n              <Button\n                onClick={() => handleFinalizeBid(selectedBid)}\n                className=\"bg-green-500 hover:bg-green-600\"\n              >\n                Confirm Finalization\n              </Button>\n            </div>\n          </div>\n        </div>\n      )}"}, {"id": "src/app/dashboard/investee/bids/page.tsx_20", "file": "src/app/dashboard/investee/bids/page.tsx", "content": "</Button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_0", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "================================================\n\"use client\"\n/* eslint-disable */\nimport { useState, useEffect } from \"react\"\nimport { useRouter, useSearchParams } from \"next/navigation\"\nimport { db } from \"@/app/firebase\"\nimport { doc, getDoc } from \"firebase/firestore\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Calendar,\n  DollarSign,\n  Phone,\n  X,\n  Building,\n  Briefcase,\n  Clock,\n  AlertCircle,\n  CheckCircle,\n  Users,\n} from \"lucide-react\"\nimport toast from \"react-hot-toast\"\n\n// Types\ninterface Application {\n  id: string | number\n  companyName: string\n  businessType: string\n  tags?: string[] // Simplified to just string array since Firebase data shows no special tags\n  loanPurpose: string\n  yearsInOperation: number | string\n  annualRevenue: number | string"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_1", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "loanPurpose: string\n  yearsInOperation: number | string\n  annualRevenue: number | string\n  phone: string\n  fundingStatus: string\n  fundingReceived: number\n  loanAmount: number | string\n  loanAmountInINR: number\n  pitch?: string\n  videoLink?: string\n  videoUrl?: string\n  companyDescription?: string\n  status?: string\n  contact?: {\n    companyEmail: string\n    companyPhone: string\n  }\n  documents?: {\n    identityProof: string\n    bankStatements: string\n    taxReturns: string\n    addressProof: string\n  }\n  contactPerson?: string\n  submittedDate?: string\n}\n\ninterface ShowGraphs {\n  revenue: boolean\n  customers: boolean\n  market: boolean\n  burnRate: boolean\n}\n\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"]\n\n// Default categories if none are provided"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_2", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "// Default categories if none are provided\nconst DEFAULT_CATEGORIES = [\"Financial Services\", \"Technology\"]\n\nexport default function ApplicationView() {\n  const router = useRouter()\n  const search = useSearchParams()\n  const applicationId = search.get(\"id\")\n  const [application, setApplication] = useState<Application | null>(null)\n  const [showGraphs, setShowGraphs] = useState<ShowGraphs>({\n    revenue: false,\n    customers: false,\n    market: false,\n    burnRate: false,\n  })\n  const [showContactCard, setShowContactCard] = useState(false)\n\n  // Generate current date if submittedDate is not available\n  const currentDate = new Date().toISOString().split(\"T\")[0]\n\n  useEffect(() => {\n    const fetchApplication = async () => {\n      if (!applicationId) return\n\n      try {"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_3", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "const fetchApplication = async () => {\n      if (!applicationId) return\n\n      try {\n        const appRef = doc(db, \"applications\", applicationId)\n        const appSnap = await getDoc(appRef)\n\n        if (appSnap.exists()) {\n          const appData = appSnap.data() as Application\n          // Calculate INR value if not already present\n          if (!appData.loanAmountInINR && appData.loanAmount) {\n            appData.loanAmountInINR = Number(appData.loanAmount) * 777.36\n          }\n          // Set default status if none exists\n          if (!appData.status) {\n            appData.status = appData.fundingStatus || \"Under Review\"\n          }\n          // Set pitch from companyDescription if pitch is not available\n          if (!appData.pitch && appData.companyDescription) {"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_4", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "if (!appData.pitch && appData.companyDescription) {\n            appData.pitch = appData.companyDescription\n          }\n          // Set videoLink from videoUrl if needed\n          if (!appData.videoLink && appData.videoUrl) {\n            appData.videoLink = appData.videoUrl\n          }\n          // Add default tags if none exist\n          if (!appData.tags) {\n            appData.tags = DEFAULT_CATEGORIES.map((cat) => cat)\n          }\n          // Add submission date if missing\n          if (!appData.submittedDate) {\n            appData.submittedDate = currentDate\n          }\n\n          setApplication(appData)\n          toast.success(\"Application found!\")\n        } else {\n          toast.error(\"Application not found!\")\n        }\n      } catch (error) {"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_5", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "} else {\n          toast.error(\"Application not found!\")\n        }\n      } catch (error) {\n        console.error(\"Error fetching application:\", error)\n        toast.error(\"Error fetching application!\")\n      }\n    }\n\n    fetchApplication()\n  }, [applicationId, currentDate])\n\n  const toggleGraph = (metric: keyof ShowGraphs) => {\n    setShowGraphs((prev) => ({\n      ...prev,\n      [metric]: !prev[metric],\n    }))\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"approved\":\n        return \"bg-green-500\"\n      case \"rejected\":\n        return \"bg-red-500\"\n      case \"under review\":\n        return \"bg-yellow-500\"\n      case \"pending\":\n        return \"bg-blue-500\"\n      default:\n        return \"bg-blue-500\"\n    }\n  }"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_6", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "return \"bg-blue-500\"\n      default:\n        return \"bg-blue-500\"\n    }\n  }\n\n  const getDocumentStatus = (status: string) => {\n    // Just check if URL exists\n    if (status && status.startsWith(\"https://\")) {\n      return <CheckCircle className=\"w-5 h-5 text-green-500\" />\n    }\n    return <Clock className=\"w-5 h-5 text-yellow-500\" />\n  }\n\n  if (!application) {\n    return (\n      <div className=\"min-h-screen bg-black text-white p-6 flex items-center justify-center\">\n        <p className=\"text-xl\">Loading application details...</p>\n      </div>\n    )\n  }\n\n  // Extract loan details for clear presentation\n  const loanDetails = {\n    amount: typeof application.loanAmount === \"number\" ? application.loanAmount.toString() : application.loanAmount,\n    currency: \"APT\","}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_7", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "currency: \"APT\",\n    inrValue: `\u00e2\u201a\u00b9${application.loanAmountInINR.toLocaleString(\"en-IN\", { maximumFractionDigits: 0 })}`,\n    purpose: application.loanPurpose,\n    tenure: \"12 months\", // Default value\n    interestRate: \"12%\", // Default value\n    repaymentSchedule: \"Monthly\", // Default value\n    expectedMonthlyPayment: `${(Number(application.loanAmount) * 0.095).toFixed(1)} APT`, // Approximation\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button\n          variant=\"outline\"\n          className=\"text-white bg-black hover:text-black hover:bg-white\""}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_8", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "className=\"text-white bg-black hover:text-black hover:bg-white\"\n          onClick={() => router.push(\"/dashboard/investee\")}\n        >\n          Back to Dashboard\n        </Button>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Main content area - Loan Details and Video */}\n          <div className=\"md:col-span-2 space-y-6\">\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Loan Details</h2>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Amount</p>"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_9", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<div>\n                  <p className=\"text-gray-400 text-sm\">Amount</p>\n                  <div className=\"flex items-center mt-1\">\n                    <DollarSign className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{loanDetails.amount} APT</p>\n                  </div>\n                  <p className=\"text-sm text-gray-500\">{loanDetails.inrValue}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Purpose</p>\n                  <div className=\"flex items-center mt-1\">\n                    <Briefcase className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{loanDetails.purpose}</p>\n                  </div>\n                </div>\n                <div>"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_10", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "</div>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Founded Since</p>\n                  <div className=\"flex items-center mt-1\">\n                    <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{application.yearsInOperation} years</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Video Pitch Section */}\n            {application.videoLink || application.videoUrl ? (\n              <div className=\"border border-[#333333] rounded-xl p-6\">\n                <h2 className=\"text-xl font-bold mb-4\">Company Pitch</h2>\n                <div className=\"relative aspect-video w-full bg-black rounded-lg overflow-hidden\">"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_11", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<div className=\"relative aspect-video w-full bg-black rounded-lg overflow-hidden\">\n                  <iframe\n                    src={application.videoLink || application.videoUrl}\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    className=\"absolute inset-0 w-full h-full\"\n                  />\n                </div>\n              </div>\n            ) : null}\n          </div>\n\n          {/* Sidebar - Company Info & Documents */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Company Information</h2>"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_12", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<h2 className=\"text-xl font-semibold mb-4\">Company Information</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex items-center mb-2\">\n                    <Building className=\"w-4 h-4 mr-2 text-gray-400\" />\n                    <p className=\"font-medium\">{application.companyName}</p>\n                  </div>\n                  <p className=\"text-sm text-gray-400\">{application.businessType}</p>\n                </div>\n\n                <div className=\"pt-2\">\n                  <p className=\"text-sm text-gray-400 mb-2\">Tags</p>\n                  {/* Tags */}\n                  <div className=\"flex flex-wrap gap-2 mb-3\">\n                    {Array.isArray(application.tags) ? ("}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_13", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "{Array.isArray(application.tags) ? (\n                      application.tags.map((tag, index) => (\n                        <span key={index} className=\"px-3 py-1 rounded-full text-sm bg-[#333333] text-white\">\n                          {tag}\n                        </span>\n                      ))\n                    ) : (\n                      <span className=\"text-sm text-gray-400\">No tags available</span>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"pt-4\">\n                  <p className=\"text-sm text-gray-400 mb-3\">Document Verification</p>\n                  <div className=\"space-y-3\">\n                    {application.documents && (\n                      <>"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_14", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "{application.documents && (\n                      <>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Identity Proof</p>\n                          {getDocumentStatus(application.documents.identityProof)}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Bank Statements</p>\n                          {getDocumentStatus(application.documents.bankStatements)}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Tax Returns</p>"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_15", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<p className=\"text-sm\">Tax Returns</p>\n                          {getDocumentStatus(application.documents.taxReturns)}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Address Proof</p>\n                          {getDocumentStatus(application.documents.addressProof)}\n                        </div>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {application.fundingStatus === \"pending\" && (\n              <div className=\"bg-yellow-500/10 p-4 rounded-lg border border-yellow-500/20\">\n                <div className=\"flex items-start gap-3\">"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_16", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<div className=\"flex items-start gap-3\">\n                  <AlertCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                  <div>\n                    <p className=\"font-medium text-yellow-500\">Application Under Review</p>\n                    <p className=\"text-sm text-gray-400 mt-1\">\n                      Your application is currently under review. You will be notified once a decision is made.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Contact Card Modal */}\n        {showContactCard && (\n          <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-4 z-50\">"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_17", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-black border border-[#333333] rounded-xl p-6 max-w-md w-full relative\">\n              <button\n                onClick={() => setShowContactCard(false)}\n                className=\"absolute top-4 right-4 text-gray-400 hover:text-white\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n\n              <h2 className=\"text-xl font-bold mb-6\">Contact Information</h2>\n\n              <div className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-gray-400\">Company</h3>\n                  <div className=\"flex items-center gap-3\">"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_18", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "<div className=\"flex items-center gap-3\">\n                    <Phone className=\"w-5 h-5 text-gray-400\" />\n                    <div>\n                      <p className=\"text-sm text-gray-400\">Phone</p>\n                      <p className=\"text-white\">{application.phone}</p>\n                    </div>\n                  </div>\n                  {application.contactPerson && (\n                    <div className=\"flex items-center gap-3\">\n                      <Users className=\"w-5 h-5 text-gray-400\" />\n                      <div>\n                        <p className=\"text-sm text-gray-400\">Contact Person</p>\n                        <p className=\"text-white\">{application.contactPerson}</p>\n                      </div>\n                    </div>\n                  )}"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_19", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": "</div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <Button\n                className=\"w-full mt-6 bg-white text-black hover:bg-gray-200\"\n                onClick={() => setShowContactCard(false)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex gap-4 mt-6\">\n          <Button\n            variant=\"outline\"\n            className=\"flex-1 bg-black text-white border-white hover:bg-white hover:text-black py-6 text-lg\"\n            onClick={() => router.push(`/dashboard/investor/bid/${application.id}`)}\n          >\n            Place Bid\n          </Button>\n          <Button"}, {"id": "src/app/dashboard/investee/viewapplication/page.tsx_20", "file": "src/app/dashboard/investee/viewapplication/page.tsx", "content": ">\n            Place Bid\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"flex-1 border-white bg-black text-white hover:bg-white hover:text-black py-6 text-lg\"\n            onClick={() => setShowContactCard(true)}\n          >\n            Contact Company\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_0", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Calendar,\n  DollarSign,\n  Clock,\n  Briefcase,\n  Building,\n  AlertCircle,\n  CheckCircle,\n  XCircle,\n  Users,\n  LineChart\n} from \"lucide-react\";\n\nconst mockApplication = {\n  id: \"APP123\",\n  status: \"Under Review\", // Can be: \"Pending\", \"Under Review\", \"Approved\", \"Rejected\"\n  submittedDate: \"2024-02-20\",\n  loanDetails: {\n    amount: \"100\",\n    currency: \"APT\",\n    inrValue: \"\u00e2\u201a\u00b977,736\",\n    purpose: \"Working Capital\",\n    tenure: \"12 months\",\n    interestRate: \"12%\",\n    repaymentSchedule: \"Monthly\",\n    expectedMonthlyPayment: \"9.5 APT\"\n  },\n  companyDetails: {"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_1", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "repaymentSchedule: \"Monthly\",\n    expectedMonthlyPayment: \"9.5 APT\"\n  },\n  companyDetails: {\n    name: \"Tech Solutions Inc\",\n    industry: \"Technology\",\n    yearsInOperation: 3,\n    annualRevenue: \"\u00e2\u201a\u00b95 Cr\",\n    employeeCount: \"50-100\",\n    categories: [\n      \"B2B\",\n      \"SaaS\",\n      \"Enterprise Software\",\n      \"Cloud Services\",\n      \"AI/ML\",\n      \"Tech-enabled\"\n    ],\n    businessModel: \"Subscription-based\",\n    marketSize: \"\u00e2\u201a\u00b91000 Cr\",\n    growthRate: \"40% YoY\"\n  },\n  documents: {\n    identityProof: \"verified\",\n    bankStatements: \"verified\",\n    taxReturns: \"pending\",\n    addressProof: \"verified\"\n  }\n};\n\nexport default function ApplicationDetails() {\n  const router = useRouter();\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_2", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'approved':\n        return 'bg-green-500';\n      case 'rejected':\n        return 'bg-red-500';\n      case 'under review':\n        return 'bg-yellow-500';\n      default:\n        return 'bg-blue-500';\n    }\n  };\n\n  const getDocumentStatus = (status: string) => {\n    switch (status) {\n      case 'verified':\n        return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n      case 'rejected':\n        return <XCircle className=\"w-5 h-5 text-red-500\" />;\n      default:\n        return <Clock className=\"w-5 h-5 text-yellow-500\" />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_3", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "}\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button \n          variant=\"ghost\" \n          className=\"text-gray-300 hover:text-white\"\n          onClick={() => router.push('/dashboard/investee')}\n        >\n          Back to Dashboard\n        </Button>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto p-6\">\n        {/* Header Section */}\n        <div className=\"flex justify-between items-start mb-8\">\n          <div>\n            <div className=\"flex items-center gap-4 mb-2\">\n              <h1 className=\"text-2xl font-bold\">Loan Application #{mockApplication.id}</h1>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_4", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<h1 className=\"text-2xl font-bold\">Loan Application #{mockApplication.id}</h1>\n              <span className={`px-3 py-1 rounded-full text-sm ${getStatusColor(mockApplication.status)} text-black`}>\n                {mockApplication.status}\n              </span>\n            </div>\n            <p className=\"text-gray-400\">\n              Submitted on {new Date(mockApplication.submittedDate).toLocaleDateString()}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Loan Details */}\n          <div className=\"md:col-span-2 space-y-6\">\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Loan Details</h2>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_5", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<h2 className=\"text-xl font-semibold mb-4\">Loan Details</h2>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Amount</p>\n                  <div className=\"flex items-center mt-1\">\n                    <DollarSign className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{mockApplication.loanDetails.amount} APT</p>\n                  </div>\n                  <p className=\"text-sm text-gray-500\">{mockApplication.loanDetails.inrValue}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Purpose</p>\n                  <div className=\"flex items-center mt-1\">"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_6", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<div className=\"flex items-center mt-1\">\n                    <Briefcase className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{mockApplication.loanDetails.purpose}</p>\n                  </div>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Tenure</p>\n                  <div className=\"flex items-center mt-1\">\n                    <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{mockApplication.loanDetails.tenure}</p>\n                  </div>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Interest Rate</p>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_7", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<div>\n                  <p className=\"text-gray-400 text-sm\">Interest Rate</p>\n                  <p className=\"font-medium mt-1\">{mockApplication.loanDetails.interestRate}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Repayment</p>\n                  <p className=\"font-medium mt-1\">{mockApplication.loanDetails.repaymentSchedule}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Monthly Payment</p>\n                  <p className=\"font-medium mt-1\">{mockApplication.loanDetails.expectedMonthlyPayment}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Document Status */}"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_8", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "</div>\n              </div>\n            </div>\n\n            {/* Document Status */}\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Document Status</h2>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {Object.entries(mockApplication.documents).map(([doc, status]) => (\n                  <div key={doc} className=\"flex items-center justify-between p-3 border border-[#333333] rounded-lg\">\n                    <span className=\"capitalize\">{doc.replace(/([A-Z])/g, ' $1').trim()}</span>\n                    {getDocumentStatus(status)}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_9", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "))}\n              </div>\n            </div>\n          </div>\n\n          {/* Company Categories and Details */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Company Categories</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex items-center mb-2\">\n                    <Building className=\"w-4 h-4 mr-2 text-gray-400\" />\n                    <p className=\"font-medium\">{mockApplication.companyDetails.name}</p>\n                  </div>\n                  <p className=\"text-sm text-gray-400\">{mockApplication.companyDetails.industry}</p>\n                </div>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_10", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "</div>\n\n                <div className=\"pt-4\">\n                  <p className=\"text-sm text-gray-400 mb-3\">Business Categories</p>\n                  <div className=\"flex flex-wrap gap-2\">\n                    {mockApplication.companyDetails.categories.map((category, index) => (\n                      <span\n                        key={index}\n                        className=\"px-3 py-1 rounded-full text-sm bg-[#333333] text-white hover:bg-[#444444] transition-colors\"\n                      >\n                        {category}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"space-y-3 pt-4 border-t border-[#333333]\">\n                  <div>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_11", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<div className=\"space-y-3 pt-4 border-t border-[#333333]\">\n                  <div>\n                    <p className=\"text-sm text-gray-400\">Business Model</p>\n                    <p className=\"font-medium\">{mockApplication.companyDetails.businessModel}</p>\n                  </div>\n                  <div>\n                    <div className=\"flex items-center gap-2\">\n                      <Users className=\"w-4 h-4 text-gray-400\" />\n                      <p className=\"text-sm text-gray-400\">Team Size</p>\n                    </div>\n                    <p className=\"font-medium\">{mockApplication.companyDetails.employeeCount}</p>\n                  </div>\n                  <div>\n                    <div className=\"flex items-center gap-2\">"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_12", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<div>\n                    <div className=\"flex items-center gap-2\">\n                      <LineChart className=\"w-4 h-4 text-gray-400\" />\n                      <p className=\"text-sm text-gray-400\">Growth Rate</p>\n                    </div>\n                    <p className=\"font-medium\">{mockApplication.companyDetails.growthRate}</p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {mockApplication.status === 'Under Review' && (\n              <div className=\"bg-yellow-500/10 p-4 rounded-lg border border-yellow-500/20\">\n                <div className=\"flex items-start gap-3\">\n                  <AlertCircle className=\"w-5 h-5 text-yellow-500 mt-0.5\" />\n                  <div>"}, {"id": "src/app/dashboard/investee/viewdetails/page.tsx_13", "file": "src/app/dashboard/investee/viewdetails/page.tsx", "content": "<div>\n                    <p className=\"font-medium text-yellow-500\">Application Under Review</p>\n                    <p className=\"text-sm text-gray-400 mt-1\">\n                      Your application is currently under review. You will be notified once a decision is made.\n                    </p>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investor/page.tsx_0", "file": "src/app/dashboard/investor/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { useState, useEffect } from \"react\";\nimport { MessageCircle, X } from \"lucide-react\";\nimport Navbar from \"@/components/Navbar\";\nimport { doc, collection, getDoc, getDocs, updateDoc } from \"firebase/firestore\";\nimport { db, auth } from '@/app/firebase';\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport toast from 'react-hot-toast';\nimport { fundStartup } from \"@/lib/contracts\";\nimport {\n  Network,\n  AptosConfig,\n  Aptos,\n  APTOS_COIN,\n} from \"@aptos-labs/ts-sdk\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n\n// Types\ntype LoanApplication = {\n  id: string;\n  companyName: string;"}, {"id": "src/app/dashboard/investor/page.tsx_1", "file": "src/app/dashboard/investor/page.tsx", "content": "// Types\ntype LoanApplication = {\n  id: string;\n  companyName: string;\n  loanAmount: number;\n  loanAmountInINR?: number;\n  fundingStatus: string;\n  isSpecial?: boolean;\n};\n\ntype FinalizedBid = {\n  id: string;\n  applicationId: string;\n  additionalDetails?: string;\n  interestRate: string | number;\n  loanAmount: string | number;\n  status: string;\n  tenure: string;\n  userId: string;\n  createdAt?: any;\n  companyName?: string;\n  amount?: string | number;\n  inrValue?: string;\n  date?: string;\n  fundingReceived?: number;\n  smeWalletAddress?: string; // Added for wallet transfer\n};\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  transactionHash: string | null;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, transactionHash }) => {\n  if (!isOpen) return null;"}, {"id": "src/app/dashboard/investor/page.tsx_2", "file": "src/app/dashboard/investor/page.tsx", "content": "if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-gray-900 text-white p-8 rounded-lg max-w-md w-full\">\n        <div className=\"flex justify-between items-center mb-4\">\n          <h2 className=\"text-xl font-bold\">Payment Successful!</h2>\n          <button\n            onClick={onClose}\n            className=\"text-gray-400 hover:text-white\"\n          >\n            <X size={20} />\n          </button>\n        </div>\n        <div className=\"mb-6\">\n          <p className=\"mb-4\">Thank you for using Innvestrix! Your payment is complete.</p>\n\n          {transactionHash && (\n            <a\n              href={`https://explorer.aptoslabs.com/txn/${transactionHash}?network=testnet`}"}, {"id": "src/app/dashboard/investor/page.tsx_3", "file": "src/app/dashboard/investor/page.tsx", "content": "href={`https://explorer.aptoslabs.com/txn/${transactionHash}?network=testnet`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-blue-500 hover:underline block mt-4\"\n            >\n              View transaction on Aptos Labs\n            </a>\n          )}\n        </div>\n        <div className=\"flex justify-end\">\n          <button\n            onClick={onClose}\n            className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-colors\"\n          >\n            Close\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function InvestorDashboard() {\n  const router = useRouter();\n  const [loanApplications, setLoanApplications] = useState<LoanApplication[]>([]);"}, {"id": "src/app/dashboard/investor/page.tsx_4", "file": "src/app/dashboard/investor/page.tsx", "content": "const [loanApplications, setLoanApplications] = useState<LoanApplication[]>([]);\n  const [finalizedBids, setFinalizedBids] = useState<FinalizedBid[]>([]);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [transactionHash, setTransactionHash] = useState<string | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n\n  // Get wallet functions from Aptos wallet adapter\n  const { account, connected, connect, disconnect, wallets, signAndSubmitTransaction, network } = useWallet();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserId(user.uid);\n        fetchFinalizedBids(user.uid);\n        fetchLoanApplications(user.uid);\n      } else {"}, {"id": "src/app/dashboard/investor/page.tsx_5", "file": "src/app/dashboard/investor/page.tsx", "content": "fetchFinalizedBids(user.uid);\n        fetchLoanApplications(user.uid);\n      } else {\n        router.push(\"/login\");\n      }\n    });\n  }, [router]);\n\n  // Check wallet connection\n  useEffect(() => {\n    if (!connected && account === null) {\n      // Optional: You can auto-connect here or prompt user to connect\n      console.log(\"Wallet not connected\");\n    } else if (connected && account) {\n      console.log(\"Connected wallet:\", account.address);\n    }\n  }, [connected, account]);\n\n  const fetchLoanApplications = async (userId: string) => {\n    try {\n      const docRef = getDocs(collection(db, \"applications\"));\n      if (docRef) {\n        const applications: LoanApplication[] = [];\n        (await docRef).forEach((doc) => {"}, {"id": "src/app/dashboard/investor/page.tsx_6", "file": "src/app/dashboard/investor/page.tsx", "content": "const applications: LoanApplication[] = [];\n        (await docRef).forEach((doc) => {\n          applications.push({ id: doc.id, ...doc.data() } as LoanApplication);\n        });\n\n        const sortedApplications = applications.sort((a, b) => {\n          if (a.isSpecial === b.isSpecial) return 0;\n          return a.isSpecial ? -1 : 1;\n        });\n        setLoanApplications(sortedApplications);\n      } else {\n        toast.error(\"No applications found\");\n        setLoanApplications([]);\n      }\n    } catch (error) {\n      toast.error(\"Failed to load applications\");\n      console.error('Error fetching loan applications:', error);\n    }\n  };\n\n  const fetchFinalizedBids = async (userId: string) => {\n    try {\n      const querySnapshot = await getDocs(collection(db, \"bids\"));"}, {"id": "src/app/dashboard/investor/page.tsx_7", "file": "src/app/dashboard/investor/page.tsx", "content": "try {\n      const querySnapshot = await getDocs(collection(db, \"bids\"));\n      const bids: FinalizedBid[] = [];\n\n      for (const docSnapshot of querySnapshot.docs) {\n        const data = docSnapshot.data();\n        if ((data.status === 'finalized' || data.status === 'payment') && data.userId === userId) {\n          // Get company name from application if needed\n          let companyName = data.companyName || \"\";\n          let smeWalletAddress = data.smeWalletAddress || \"\";\n\n          try {\n            if (data.applicationId) {\n              const applicationDoc = await getDoc(doc(db, \"applications\", data.applicationId));\n              if (applicationDoc.exists()) {\n                const appData = applicationDoc.data();\n                companyName = appData.companyName || \"\";"}, {"id": "src/app/dashboard/investor/page.tsx_8", "file": "src/app/dashboard/investor/page.tsx", "content": "companyName = appData.companyName || \"\";\n\n                // Get SME wallet address from user profile if available\n                if (appData.userId) {\n                  const userDoc = await getDoc(doc(db, \"users\", appData.userId));\n                  if (userDoc.exists()) {\n                    smeWalletAddress = userDoc.data().walletAddress || \"\";\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            console.error(\"Error fetching company details:\", err);\n          }\n\n          bids.push({\n            id: docSnapshot.id,\n            applicationId: data.applicationId || \"\",\n            companyName: companyName,\n            amount: data.amount || data.loanAmount || \"0\","}, {"id": "src/app/dashboard/investor/page.tsx_9", "file": "src/app/dashboard/investor/page.tsx", "content": "companyName: companyName,\n            amount: data.amount || data.loanAmount || \"0\",\n            inrValue: data.inrValue || `${(parseFloat(String(data.loanAmount || \"0\")) * 777.36).toFixed(2)}`,\n            date: data.date || (data.createdAt ? new Date(data.createdAt.toDate()).toLocaleDateString() : new Date().toLocaleDateString()),\n            status: data.status || \"unknown\",\n            interestRate: data.interestRate || \"0\",\n            tenure: data.tenure || \"0\",\n            userId: data.userId || \"\",\n            fundingReceived: data.fundingReceived || 0,\n            loanAmount: data.loanAmount || \"0\",\n            smeWalletAddress: smeWalletAddress,\n          });\n        }\n      }\n\n      setFinalizedBids(bids);\n    } catch (error) {"}, {"id": "src/app/dashboard/investor/page.tsx_10", "file": "src/app/dashboard/investor/page.tsx", "content": "});\n        }\n      }\n\n      setFinalizedBids(bids);\n    } catch (error) {\n      console.error('Error fetching finalized bids:', error);\n      toast.error('Failed to load bids');\n    }\n  };\n\n  const handleFund = async (applicationId: string, amount: number) => {\n    try {\n      const transactionHash = await fundStartup(Number(applicationId), amount * 10);\n      setTransactionHash(transactionHash ?? null);\n      setIsModalOpen(true);\n      toast.success(\"Startup funded successfully!\");\n\n      // Find the relevant bid\n      const bidsSnapshot = await getDocs(collection(db, \"bids\"));\n      let targetBid: FinalizedBid | null = null as FinalizedBid | null;\n\n      bidsSnapshot.docs.forEach(docSnapshot => {\n        const data = docSnapshot.data();"}, {"id": "src/app/dashboard/investor/page.tsx_11", "file": "src/app/dashboard/investor/page.tsx", "content": "bidsSnapshot.docs.forEach(docSnapshot => {\n        const data = docSnapshot.data();\n        if (data.applicationId === applicationId && data.userId === userId) {\n          targetBid = {\n            ...data as FinalizedBid,\n            id: docSnapshot.id\n          };\n        }\n      });\n\n      if (targetBid) {\n        const docRef = doc(db, \"bids\", targetBid.id);\n        // Safely convert funding values to numbers\n        const currentFundingReceived = parseFloat(String(targetBid.fundingReceived || 0));\n        const newFundingReceived = currentFundingReceived + amount;\n        const targetLoanAmount = parseFloat(String(targetBid.loanAmount || 0));\n\n        await updateDoc(docRef, { fundingReceived: newFundingReceived });\n\n        if (newFundingReceived >= targetLoanAmount) {"}, {"id": "src/app/dashboard/investor/page.tsx_12", "file": "src/app/dashboard/investor/page.tsx", "content": "if (newFundingReceived >= targetLoanAmount) {\n          await updateDoc(docRef, { status: \"completed\" });\n          if (newFundingReceived > targetLoanAmount) {\n            toast(\"Funding exceeds requested amount\");\n          } else {\n            toast.success(\"Bid fully funded!\");\n          }\n        }\n\n        // Update the application's loan amount\n        const applicationRef = doc(db, \"applications\", applicationId);\n        const applicationSnapshot = await getDoc(applicationRef);\n\n        if (applicationSnapshot.exists()) {\n          const applicationData = applicationSnapshot.data();\n          const currentAppLoanAmount = parseFloat(String(applicationData.loanAmount || 0));\n          const newLoanAmount = Math.max(0, currentAppLoanAmount - amount);"}, {"id": "src/app/dashboard/investor/page.tsx_13", "file": "src/app/dashboard/investor/page.tsx", "content": "const newLoanAmount = Math.max(0, currentAppLoanAmount - amount);\n          await updateDoc(applicationRef, { loanAmount: newLoanAmount });\n          fetchLoanApplications(userId!);\n        }\n      }\n\n      fetchFinalizedBids(userId!);\n    } catch (error) {\n      console.error(\"Error funding the startup:\", error);\n      toast.error(\"Failed to fund startup\");\n    }\n  };\n\n  // Connect wallet function\n  const handleConnectWallet = async () => {\n    try {\n      // If wallet is already connected, disconnect it\n      if (connected && account) {\n        await disconnect();\n        toast.success(\"Wallet disconnected\");\n        return;\n      }\n\n      // If wallets are available, connect to the first one or show options\n      if (wallets && wallets.length > 0) {"}, {"id": "src/app/dashboard/investor/page.tsx_14", "file": "src/app/dashboard/investor/page.tsx", "content": "if (wallets && wallets.length > 0) {\n        // You might want to let the user choose which wallet to connect\n        // For simplicity, we'll connect to the first available wallet\n        await connect(wallets[0].name);\n        toast.success(\"Wallet connected successfully\");\n      } else {\n        toast.error(\"No wallets found. Please install an Aptos wallet extension\");\n      }\n    } catch (error: any) {\n      console.error(\"Wallet connection error:\", error);\n      toast.error(error.message || \"Failed to connect wallet\");\n    }\n  };\n  // Disconnect wallet function\n  const handleDisconnectWallet = async () => {\n    try {\n      await disconnect();\n    } catch (error) {\n      console.error(\"Failed to disconnect wallet:\", error);\n      toast.error(\"Failed to disconnect wallet\");\n    }"}, {"id": "src/app/dashboard/investor/page.tsx_15", "file": "src/app/dashboard/investor/page.tsx", "content": "toast.error(\"Failed to disconnect wallet\");\n    }\n  };\n\n  // New implementation of proceedToPayment using Aptos wallet\n  async function proceedToPayment(bid: FinalizedBid) {\n    try {\n      // Show loading toast\n      const loadingToast = toast.loading(\"Processing payment...\");\n\n      const bidRef = doc(db, \"bids\", bid.id);\n      const bidSnap = await getDoc(bidRef);\n      const appRef = doc(db, \"applications\", bidSnap.data()?.applicationId);\n      const receiverId = bidSnap.data()?.smeuserId;\n      const amount = safeParseFloat(bidSnap.data()?.loanAmount);\n\n      const config = new AptosConfig({ network: Network.TESTNET });\n      const aptos = new Aptos(config);\n\n      if (!bidSnap.exists()) {\n        toast.dismiss(loadingToast);\n        toast.error(\"Bid not found\");"}, {"id": "src/app/dashboard/investor/page.tsx_16", "file": "src/app/dashboard/investor/page.tsx", "content": "toast.dismiss(loadingToast);\n        toast.error(\"Bid not found\");\n        return;\n      }\n\n      const response = await signAndSubmitTransaction({\n        data: {\n          function: \"0x1::coin::transfer\",\n          typeArguments: [APTOS_COIN],\n          functionArguments: [receiverId, amount * 100000000], // 1 is in Octas\n        },\n      });\n      // if you want to wait for transaction\n      try {\n        await aptos.waitForTransaction({ transactionHash: response.hash });\n        setTransactionHash(String(response.hash));\n      } catch (error) {\n        console.error(error);\n      }\n\n      await updateDoc(bidRef, {\n        status: 'finalized',\n        // transactionHash: pendingTransaction.hash\n      });\n      await updateDoc(appRef, {\n        fundingStatus: 'finalized'"}, {"id": "src/app/dashboard/investor/page.tsx_17", "file": "src/app/dashboard/investor/page.tsx", "content": "});\n      await updateDoc(appRef, {\n        fundingStatus: 'finalized'\n      });\n\n      // Dismiss loading toast and show success\n      toast.dismiss(loadingToast);\n      toast.success(\"Payment completed successfully!\");\n\n      setIsModalOpen(true);\n    } catch (e) {\n      toast.error(\"An error occurred. Try Again.\")\n    }\n  }\n\n  const safeParseFloat = (value: any): number => {\n    if (value === undefined || value === null) return 0;\n    if (typeof value === 'number') return value;\n    try {\n      return parseFloat(value.toString()) || 0;\n    } catch (e) {\n      return 0;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <Navbar />\n\n      <Modal\n        isOpen={isModalOpen}"}, {"id": "src/app/dashboard/investor/page.tsx_18", "file": "src/app/dashboard/investor/page.tsx", "content": "<Navbar />\n\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => { setIsModalOpen(false); router.push('/dashboard/investor'); }}\n        transactionHash={transactionHash}\n      />\n\n      <div className=\"p-6\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <div>\n            <Button\n              variant=\"outline\"\n              className=\"border-white bg-black text-white hover:bg-white hover:text-black mr-4\"\n              onClick={() => router.push('/dashboard/investor/MyBids')}\n            >\n              View My Bids\n            </Button>\n\n            {!connected && (\n              <Button\n                variant=\"outline\"\n                className=\"border-green-500 bg-black text-green-500 hover:bg-green-500 hover:text-black\""}, {"id": "src/app/dashboard/investor/page.tsx_19", "file": "src/app/dashboard/investor/page.tsx", "content": "onClick={handleConnectWallet}\n              >\n                Connect Wallet\n              </Button>\n            )}\n\n            {connected && account && (\n              <Button\n                variant=\"outline\"\n                className=\"border-red-500 bg-black text-red-500 hover:bg-red-500 hover:text-black\"\n                onClick={handleDisconnectWallet}\n              >\n                Disconnect Wallet\n              </Button>\n            )}\n          </div>\n\n          <h1 className=\"text-2xl font-bold\">Investor Dashboard</h1>\n\n          <Button\n            variant=\"outline\"\n            className=\"border-white bg-black text-white hover:bg-white hover:text-black\"\n            onClick={() => router.push('/dashboard/investor/preferences')}\n          >"}, {"id": "src/app/dashboard/investor/page.tsx_20", "file": "src/app/dashboard/investor/page.tsx", "content": "onClick={() => router.push('/dashboard/investor/preferences')}\n          >\n            View Personalised Preferences\n          </Button>\n        </div>\n\n        {connected && account && (\n          <div className=\"mb-6 p-4 rounded-lg border border-green-500 bg-green-500 bg-opacity-10\">\n            <p className=\"text-green-400\">\n              Connected: <span className=\"font-mono\">{String(account.address).substring(0, 6)}...{String(account.address).substring(String(account.address).length - 4)}</span>\n            </p>\n            <p className=\"text-sm text-gray-400 mt-1\">Network: {network?.name || 'Unknown'}</p>\n          </div>\n        )}\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <div className=\"space-y-4\">"}, {"id": "src/app/dashboard/investor/page.tsx_21", "file": "src/app/dashboard/investor/page.tsx", "content": "<div className=\"space-y-4\">\n            <h2 className=\"text-xl font-semibold mb-4\">SMEs looking for funding</h2>\n            <div className=\"space-y-4 max-h-[600px] overflow-y-auto\">\n              {loanApplications.map((application) => (\n                <div\n                  key={application.id}\n                  className={`p-4 rounded-lg border ${application.isSpecial ? 'border-green-500' : 'border-[#333333]'} bg-black hover:border-white transition-colors`}\n                >\n                  <div className=\"relative group\">\n                    <h3 className=\"text-lg font-medium mb-2\">\n                      {application.companyName}\n                      {application.isSpecial && ("}, {"id": "src/app/dashboard/investor/page.tsx_22", "file": "src/app/dashboard/investor/page.tsx", "content": "{application.companyName}\n                      {application.isSpecial && (\n                        <span className=\"ml-2\" title=\"No transaction fees for this application!\">\u00f0\u0178\u0152\u00b1</span>\n                      )}\n                    </h3>\n                  </div>\n                  <p className=\"text-gray-400 mb-2\">\n                    Amount: {application.loanAmount} APT (\u00e2\u201a\u00b9{application.loanAmountInINR || (application.loanAmount * 777.36)})\n                  </p>\n                  <p className=\"text-gray-400 mb-3\">Status: {application.fundingStatus}</p>\n                  <div className=\"flex gap-3\">\n                    <Button\n                      className=\"bg-white text-black hover:bg-gray-200\""}, {"id": "src/app/dashboard/investor/page.tsx_23", "file": "src/app/dashboard/investor/page.tsx", "content": "<Button\n                      className=\"bg-white text-black hover:bg-gray-200\"\n                      onClick={() => router.push(`/dashboard/investor/viewapplication/?id=${application.id}`)}\n                    >\n                      View Application\n                    </Button>\n                    <Button\n                      className=\"bg-white text-black hover:bg-gray-200\"\n                      onClick={() => router.push(`/dashboard/investor/bid/${application.id}`)}\n                    >\n                      Bid\n                    </Button>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"space-y-4\">\n            <div className=\"flex justify-between items-center mb-4\">"}, {"id": "src/app/dashboard/investor/page.tsx_24", "file": "src/app/dashboard/investor/page.tsx", "content": "<div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-semibold\">Your Finalized Bids</h2>\n              <p className=\"text-gray-400\">\n                Total Invested: {finalizedBids.reduce((acc, bid) => acc + safeParseFloat(bid.amount || bid.loanAmount), 0).toFixed(2)} APT\n              </p>\n            </div>\n\n            {finalizedBids.length === 0 ? (\n              <div className=\"text-gray-400 text-center py-6\">\n                No finalized bids found.\n              </div>\n            ) : (\n              <div className=\"space-y-4\">\n                {finalizedBids.map((bid) => (\n                  <div key={bid.id} className=\"p-4 rounded-lg border border-[#333333] bg-black hover:border-white transition-colors\">"}, {"id": "src/app/dashboard/investor/page.tsx_25", "file": "src/app/dashboard/investor/page.tsx", "content": "<div className=\"flex items-center gap-4\">\n                      <div className=\"w-12 h-12 rounded-full bg-blue-500 flex items-center justify-center text-white font-bold\">\n                        {bid.companyName && bid.companyName.length > 0\n                          ? bid.companyName.slice(0, 2).toUpperCase()\n                          : \"SM\"}\n                      </div>\n                      <div className=\"flex-1\">\n                        <div className=\"flex justify-between items-start\">\n                          <div>\n                            <h3 className=\"font-medium text-white text-lg\">{bid.companyName || \"Unknown Company\"}</h3>\n                            <p className=\"text-sm text-gray-400\">Amount: {bid.amount || bid.loanAmount || \"0\"} APT</p>"}, {"id": "src/app/dashboard/investor/page.tsx_26", "file": "src/app/dashboard/investor/page.tsx", "content": "</div>\n                          <span className={`px-3 py-1 ${bid.status === 'payment' ? 'bg-yellow-500' : 'bg-green-500'} text-black text-sm rounded-full`}>\n                            {bid.status}\n                          </span>\n                        </div>\n                        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 mt-4\">\n                          <div>\n                            <p className=\"text-sm text-gray-400\">Interest Rate</p>\n                            <p className=\"text-white font-medium\">{bid.interestRate}%</p>\n                          </div>\n                          <div>\n                            <p className=\"text-sm text-gray-400\">Tenure</p>"}, {"id": "src/app/dashboard/investor/page.tsx_27", "file": "src/app/dashboard/investor/page.tsx", "content": "<p className=\"text-sm text-gray-400\">Tenure</p>\n                            <p className=\"text-white font-medium\">{bid.tenure}</p>\n                          </div>\n                          <div>\n                            <p className=\"text-sm text-gray-400\">Status</p>\n                            <p className=\"text-white font-medium\">{bid.status}</p>\n                          </div>\n                        </div>\n\n                        {bid.status === 'payment' && (\n                          <div className=\"mt-4\">\n                            <p className=\"text-sm text-red-400 mb-2\">\n                              Failure to complete payment within 7 days will result in account suspension.\n                            </p>\n                            <Button"}, {"id": "src/app/dashboard/investor/page.tsx_28", "file": "src/app/dashboard/investor/page.tsx", "content": "</p>\n                            <Button\n                              className=\"bg-yellow-500 text-black hover:bg-yellow-600\"\n                              onClick={() => proceedToPayment(bid)}\n                              disabled={isProcessing || !connected}\n                            >\n                              {isProcessing ? \"Processing...\" : \"Proceed to Payment\"}\n                            </Button>\n                            {!connected && (\n                              <p className=\"text-sm text-yellow-400 mt-2\">\n                                Please connect your wallet to make a payment\n                              </p>\n                            )}\n                          </div>\n                        )}\n                      </div>"}, {"id": "src/app/dashboard/investor/page.tsx_29", "file": "src/app/dashboard/investor/page.tsx", "content": "</div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_0", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useState, useEffect } from \"react\";\nimport { useParams, useRouter, useSearchParams } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { db, auth } from '@/app/firebase';\nimport { doc, getDoc, addDoc, collection } from 'firebase/firestore';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport toast, { Toaster } from 'react-hot-toast';\n\ninterface BidDetails {\n  amount: string;\n  interestRate: string;\n  tenure: string;\n  additionalDetails: string;\n}\n\ninterface Company {\n  id: string;\n  name: string;\n  type: string;\n  industry: string;\n  foundedYear: string;\n  teamSize: string;\n  location: string;\n  purpose: string;\n  requestedAmount: string;\n  inrValue: string;"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_1", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "location: string;\n  purpose: string;\n  requestedAmount: string;\n  inrValue: string;\n  description: string;\n  workDescription: string;\n  highlights: string[];\n  annualRevenue: string;\n  businessType: string;\n  contactPerson: string;\n  phone: string;\n  documents: string[];\n  fundingReceived: number;\n  fundingStatus: string;\n  videoLink: string;\n  tags: Array<{ tag: string; isSpecial: boolean }>;\n  yearsInOperation: string;\n}\n\ninterface ModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onConfirm: () => void;\n}\n\nconst Modal: React.FC<ModalProps> = ({ isOpen, onClose, onConfirm }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_2", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "<div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n      <div className=\"bg-gray-900 text-white p-8 rounded-lg max-w-md w-full\">\n        <h2 className=\"text-xl font-bold mb-4\">Confirm Bid Placement</h2>\n        <div className=\"mb-6\">\n          <p className=\"mb-4\">By proceeding, you agree to the following terms:</p>\n          <ul className=\"list-disc pl-6 space-y-2\">\n            <li>Your bid will be evaluated by the startup</li>\n            <li>You will receive a notification if your bid is finalized</li>\n            <li>Once finalized, payment must be made within 7 days</li>\n            <li className='text-red-700'>Failure to make payment will result in account suspension</li>\n          </ul>"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_3", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "</ul>\n          <a href=\"https://github.com/adithyanotfound/Investrix/blob/main/frontend/TermsandConditions.md\" className=\"text-blue-500 hover:underline block mt-4\">\n            View Full Terms and Conditions\n          </a>\n        </div>\n        <div className=\"flex justify-end gap-4\">\n          <button onClick={onClose} className=\"px-4 py-2 border border-gray-300 rounded hover:bg-gray-700\">\n            Cancel\n          </button>\n          <button onClick={onConfirm} className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\">\n            I Agree\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default function BidPage() {\n  const router = useRouter();\n  const searchParams = useParams();\n  const applicationId = searchParams.id;"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_4", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "const searchParams = useParams();\n  const applicationId = searchParams.id;\n\n  const [showNotification, setShowNotification] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [company, setCompany] = useState<Company | null>(null);\n  const [bidDetails, setBidDetails] = useState<BidDetails>({\n    amount: \"\",\n    interestRate: \"\",\n    tenure: \"\",\n    additionalDetails: \"\"\n  });\n  const [currentAptosKey, setCurrentAptosKey] = useState<string | null>(null);\n\n  // Check authentication status\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        setUserId(user.uid);"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_5", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "if (user) {\n        setUserId(user.uid);\n        const userRef = doc(db, \"users\", user.uid); // Assuming uid is the document ID\n        const userSnap = await getDoc(userRef);\n\n        if (userSnap.exists()) {\n          console.log(\"Phone Number:\", userSnap.data().phoneNumber);\n          setCurrentAptosKey(userSnap.data().phoneNumber);\n        } else {\n          console.log(\"No such user!\");\n          return null;\n        }\n      } else {\n        toast.error('Please login to continue');\n        router.push('/login');\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  // Fetch application/company details\n\n  useEffect(() => {\n    const fetchApplication = async () => {\n      if (!applicationId) {\n        toast.error('Application ID not found');"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_6", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "if (!applicationId) {\n        toast.error('Application ID not found');\n        router.push('/dashboard/investor');\n        return;\n      }\n\n      try {\n        const appRef = doc(db, 'applications', applicationId as string);\n        const appSnap = await getDoc(appRef);\n\n        if (appSnap.exists()) {\n          const appData = appSnap.data();\n          setCompany({\n            id: Array.isArray(applicationId) ? applicationId[0] : applicationId,\n            name: appData.companyName || \"\",\n            type: appData.companyType || \"\",\n            industry: appData.industry || \"\",\n            foundedYear: appData.foundedYear || \"\",\n            teamSize: appData.teamSize || \"\",\n            location: appData.location || \"\",\n            purpose: appData.loanPurpose || \"\","}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_7", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "location: appData.location || \"\",\n            purpose: appData.loanPurpose || \"\",\n            requestedAmount: `${Math.abs(appData.loanAmount) || \"\"} APT`,\n            inrValue: `\u00e2\u201a\u00b9${appData.loanAmountInINR?.toLocaleString() || \"\"}`,\n            description: appData.pitch || \"\",\n            workDescription: appData.workDescription || \"\",\n            highlights: appData.highlights || [],\n            annualRevenue: appData.annualRevenue || \"\",\n            businessType: appData.businessType || \"\",\n            contactPerson: appData.contactPerson || \"\",\n            phone: appData.phone || \"\",\n            documents: appData.documents || [],\n            fundingReceived: appData.fundingReceived || 0,\n            fundingStatus: appData.fundingStatus || \"\","}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_8", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "fundingStatus: appData.fundingStatus || \"\",\n            videoLink: appData.videoLink || \"\",\n            tags: appData.tags || [],\n            yearsInOperation: appData.yearsInOperation || \"\"\n          });\n          toast.success('Application details loaded');\n        } else {\n          toast.error('Application not found');\n          router.push('/dashboard/investor');\n        }\n      } catch (error) {\n        console.error('Error fetching application:', error);\n        toast.error('Failed to load application details');\n        router.push('/dashboard/investor');\n      }\n    };\n\n    fetchApplication();\n  }, [applicationId, router]);\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!company) {"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_9", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!company) {\n      toast.error('Cannot submit bid: Company details not available');\n      return;\n    }\n    setShowModal(true);\n  };\n\n  const handleConfirmedSubmit = async () => {\n    if (!userId || !applicationId) {\n      toast.error('User ID or Application ID is missing');\n      return;\n    }\n\n    setIsSubmitting(true);\n    setShowModal(false);\n\n    try {\n      // Add document to Firestore\n      const bidRef = await addDoc(collection(db, 'bids'), {\n        userId: userId,\n        investorUserId: currentAptosKey,\n        applicationId: applicationId,\n        loanAmount: bidDetails.amount,\n        interestRate: bidDetails.interestRate,\n        tenure: bidDetails.tenure,"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_10", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "interestRate: bidDetails.interestRate,\n        tenure: bidDetails.tenure,\n        additionalDetails: bidDetails.additionalDetails,\n        status: 'pending',\n        createdAt: new Date()\n      });\n\n      console.log(\"Bid submitted with ID:\", bidRef.id);\n\n      // Show success notification\n      setShowNotification(true);\n\n      // Reset form\n      setBidDetails({\n        amount: \"\",\n        interestRate: \"\",\n        tenure: \"\",\n        additionalDetails: \"\"\n      });\n\n      // Hide notification and redirect after 5 seconds\n      setTimeout(() => {\n        setShowNotification(false);\n        router.push('/dashboard/investor');\n      }, 5000);\n\n    } catch (error) {\n      console.error(\"Error submitting bid:\", error);\n      toast.error('Failed to place bid');\n    } finally {"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_11", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "toast.error('Failed to place bid');\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  // If company data is not loaded yet, show loading state\n  if (!company) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"inline-block h-8 w-8 animate-spin rounded-full border-4 border-solid border-white border-r-transparent\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </div>\n          <p className=\"mt-4\">Loading application details...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6 relative\">\n      {/* Success Notification */}\n      {showNotification && ("}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_12", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "{/* Success Notification */}\n      {showNotification && (\n        <div className=\"fixed top-6 right-6 bg-green-500 text-black px-6 py-3 rounded-md shadow-lg flex items-center gap-2 transition-all duration-300\">\n          <svg\n            className=\"w-5 h-5\"\n            fill=\"none\"\n            stroke=\"currentColor\"\n            viewBox=\"0 0 24 24\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M5 13l4 4L19 7\"\n            />\n          </svg>\n          <span className=\"font-medium\">Bid made successfully!</span>\n        </div>\n      )}\n\n      {/* Confirmation Modal */}\n      <Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_13", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "<Modal\n        isOpen={showModal}\n        onClose={() => setShowModal(false)}\n        onConfirm={handleConfirmedSubmit}\n      />\n\n      <div className=\"max-w-6xl mx-auto\">\n        <Button\n          className=\"mb-6 bg-white text-black hover:bg-gray-200\"\n          onClick={() => router.back()}\n        >\n          Back\n        </Button>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Company Details Section */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Company Header */}\n            <div className=\"border border-[#333333] rounded-xl p-6\">\n              <div className=\"flex justify-between items-start mb-4\">\n                <div>\n                  <h1 className=\"text-3xl font-bold mb-2\">{company.name}</h1>"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_14", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "<div>\n                  <h1 className=\"text-3xl font-bold mb-2\">{company.name}</h1>\n                  <p className=\"text-gray-400\">{company.businessType} \u00e2\u20ac\u00a2 {company.industry}</p>\n                  <div className=\"flex gap-2 mt-2\">\n                    {company.tags.map((tag, index) => (\n                      <span\n                        key={index}\n                        className={`px-2 py-1 rounded-full text-sm ${tag.isSpecial ? 'bg-blue-500' : 'bg-gray-700'\n                          }`}\n                      >\n                        {tag.tag}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-gray-400\">Requested Amount</p>"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_15", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "<p className=\"text-gray-400\">Requested Amount</p>\n                  <p className=\"text-xl font-bold\">{company.requestedAmount}</p>\n                  <p className=\"text-sm text-gray-500\">{company.inrValue}</p>\n                </div>\n              </div>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 mt-6\">\n                <div>\n                  <p className=\"text-sm text-gray-400\">Founded</p>\n                  <p className=\"text-white\">{company.yearsInOperation} years ago</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-400\">Annual Revenue</p>\n                  <p className=\"text-white\">{company.annualRevenue}</p>\n                </div>\n                <div>"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_16", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "</div>\n                <div>\n                  <p className=\"text-sm text-gray-400\">Contact</p>\n                  <p className=\"text-white\">{company.contactPerson}</p>\n                  <p className=\"text-sm text-gray-400\">{company.phone}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-gray-400\">Purpose</p>\n                  <p className=\"text-white\">{company.purpose}</p>\n                </div>\n              </div>\n            </div>\n\n            {/* Company Description */}\n            <div className=\"border border-[#333333] rounded-xl p-6\">\n              <h2 className=\"text-xl font-bold mb-4\">About Company</h2>\n              <p className=\"text-gray-400 mb-6\">{company.description}</p>"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_17", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "<p className=\"text-gray-400 mb-6\">{company.description}</p>\n\n              <h3 className=\"text-lg font-semibold mb-3\">What they do</h3>\n              {company.videoLink && (\n                <div className=\"mb-6\">\n                  <video\n                    controls\n                    className=\"w-full rounded-lg\"\n                    poster={company.documents[0]}\n                  >\n                    <source src={company.videoLink} type=\"video/mp4\" />\n                    Your browser does not support the video tag.\n                  </video>\n                </div>\n              )}\n              <p className=\"text-gray-400 mb-6\">{company.workDescription}</p>\n            </div>\n          </div>\n\n          {/* Bid Details Section remains the same */}"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_18", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "</div>\n          </div>\n\n          {/* Bid Details Section remains the same */}\n          <div className=\"lg:col-span-1\">\n            <div className=\"border border-[#333333] rounded-xl p-6 sticky top-6\">\n              <h2 className=\"text-xl font-bold mb-6\">Bid Details</h2>\n              <form onSubmit={handleSubmit} className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-2\">\n                    Loan Amount (APT)\n                  </label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter amount\"\n                    className=\"w-full bg-transparent border border-[#333333] rounded-md p-2 text-white placeholder-gray-500 focus:outline-none focus:border-white\""}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_19", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "value={bidDetails.amount}\n                    onChange={(e) => setBidDetails({ ...bidDetails, amount: e.target.value })}\n                    required\n                    disabled={isSubmitting}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-2\">\n                    Interest Rate (%)\n                  </label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter rate\"\n                    className=\"w-full bg-transparent border border-[#333333] rounded-md p-2 text-white placeholder-gray-500 focus:outline-none focus:border-white\"\n                    value={bidDetails.interestRate}"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_20", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "value={bidDetails.interestRate}\n                    onChange={(e) => setBidDetails({ ...bidDetails, interestRate: e.target.value })}\n                    required\n                    disabled={isSubmitting}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-2\">\n                    Tenure (months)\n                  </label>\n                  <input\n                    type=\"number\"\n                    placeholder=\"Enter tenure\"\n                    className=\"w-full bg-transparent border border-[#333333] rounded-md p-2 text-white placeholder-gray-500 focus:outline-none focus:border-white\"\n                    value={bidDetails.tenure}"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_21", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "value={bidDetails.tenure}\n                    onChange={(e) => setBidDetails({ ...bidDetails, tenure: e.target.value })}\n                    required\n                    disabled={isSubmitting}\n                  />\n                </div>\n\n                <div>\n                  <label className=\"block text-sm text-gray-400 mb-2\">\n                    Additional Details\n                  </label>\n                  <textarea\n                    placeholder=\"Any additional information...\"\n                    className=\"w-full bg-transparent border border-[#333333] rounded-md p-2 text-white placeholder-gray-500 focus:outline-none focus:border-white min-h-[100px] resize-none\"\n                    value={bidDetails.additionalDetails}"}, {"id": "src/app/dashboard/investor/bid/[id]/page.tsx_22", "file": "src/app/dashboard/investor/bid/[id]/page.tsx", "content": "value={bidDetails.additionalDetails}\n                    onChange={(e) => setBidDetails({ ...bidDetails, additionalDetails: e.target.value })}\n                    disabled={isSubmitting}\n                  />\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  className=\"w-full bg-white text-black hover:bg-gray-200 py-6 text-lg mt-6\"\n                  disabled={isSubmitting}\n                >\n                  {isSubmitting ? 'Submitting...' : 'Make Bid'}\n                </Button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_0", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "================================================\n\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { useRouter } from \"next/navigation\"\nimport { Button } from \"@/components/ui/button\"\nimport { PercentageCircle } from \"@/components/ui/percentage-circle\"\nimport { db } from \"@/app/firebase\"\nimport { collection, query, where, getDocs, doc, getDoc } from \"firebase/firestore\"\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\"\nimport { Loader2 } from \"lucide-react\"\n\nexport interface Bid {\n  id: string\n  userId: string\n  applicationId: string\n  loanAmount: string\n  interestRate: string\n  tenure: string\n  status: string\n  additionalDetails: string\n}\n\nexport interface ApplicationDetails {\n  id: number\n  companyName: string\n  fundingStatus: string\n}"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_1", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "export interface ApplicationDetails {\n  id: number\n  companyName: string\n  fundingStatus: string\n}\n\nexport default function MyBids() {\n  const [bids, setBids] = useState<(Bid & { companyName: string; fundingStatus: string })[]>([])\n  const [loading, setLoading] = useState(true)\n  const [uid, setUid] = useState<string | null>(null)\n  const router = useRouter()\n\n  useEffect(() => {\n    const auth = getAuth()\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUid(user.uid)\n      } else {\n        router.push(\"/login\")\n      }\n    })\n    return () => unsubscribe()\n  }, [router])\n\n  useEffect(() => {\n    const fetchBids = async () => {\n      if (!uid) return\n      try {\n        const q = query(collection(db, \"bids\"), where(\"userId\", \"==\", uid))"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_2", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "try {\n        const q = query(collection(db, \"bids\"), where(\"userId\", \"==\", uid))\n        const querySnapshot = await getDocs(q)\n        const fetchedBids: (Bid & { companyName: string; fundingStatus: string })[] = []\n\n        for (const docSnap of querySnapshot.docs) {\n          const bidData = docSnap.data() as Bid\n          const applicationRef = doc(db, \"applications\", bidData.applicationId)\n          const applicationSnap = await getDoc(applicationRef)\n          if (applicationSnap.exists()) {\n            const applicationData = applicationSnap.data() as ApplicationDetails\n            fetchedBids.push({\n              ...bidData,\n              id: docSnap.id,\n              companyName: applicationData.companyName,\n              fundingStatus: applicationData.fundingStatus,"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_3", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "fundingStatus: applicationData.fundingStatus,\n            })\n          }\n        }\n        setBids(fetchedBids)\n      } catch (error) {\n        console.error(\"Error fetching bids:\", error)\n      } finally {\n        setLoading(false)\n      }\n    }\n    fetchBids()\n  }, [uid])\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"pending\":\n        return \"bg-orange-500\"\n      case \"finalized\":\n        return \"bg-green-500\"\n      default:\n        return \"bg-gray-500\"\n    }\n  }\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-black text-white flex items-center justify-center\">\n        <Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    )\n  }\n\n  return ("}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_4", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "<Loader2 className=\"h-8 w-8 animate-spin\" />\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6\">\n      <Button className=\"mb-6 bg-white text-black hover:bg-gray-200\" onClick={() => router.push(\"/dashboard/investor\")}>\n        Back to Dashboard\n      </Button>\n      {bids.length === 0 ? (\n        <div className=\"text-center mt-20\">\n          <p className=\"text-4xl\">No bids yet :/</p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {bids.map((bid) => (\n            <div\n              key={bid.id}\n              className=\"border border-[#333333] rounded-xl bg-black p-6 space-y-4 hover:border-gray-600 transition-all\"\n            >"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_5", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": ">\n              <div className=\"flex justify-between items-start\">\n                <div>\n                  <h2 className=\"text-xl font-semibold mb-1\">{bid.companyName}</h2>\n                </div>\n                <span className={`px-3 py-1 rounded-full text-xs text-black ${getStatusColor(bid.fundingStatus)}`}>\n                  {bid.fundingStatus}\n                </span>\n              </div>\n\n              <p className=\"text-sm text-gray-400\">{bid.additionalDetails}</p>\n\n              <div className=\"grid grid-cols-3 gap-4 py-4 border-y border-[#333333]\">\n                <div>\n                  <p className=\"text-sm text-gray-400\">Invested Amount</p>\n                  <p className=\"text-white font-medium\">{bid.loanAmount}</p>\n                </div>\n                <div>"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_6", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "</div>\n                <div>\n                  <p className=\"text-sm text-gray-400\">Tenure</p>\n                  <p className=\"text-white font-medium\">{bid.tenure}</p>\n                </div>\n                <div className=\"flex flex-col items-center\">\n                  <p className=\"text-sm text-gray-400 mb-2\">Interest Rate</p>\n                  <PercentageCircle percentage={parseFloat(bid.interestRate)} />\n                </div>\n              </div>\n              <div className=\"flex justify-end\">\n                <Button className=\"mt-4 bg-blue-500 text-white hover:bg-blue-600\" onClick={() => router.push(`/dashboard/investor/viewapplication/?id=${bid.applicationId}`)}>\n                  View Application\n                </Button>\n              </div>\n            </div>"}, {"id": "src/app/dashboard/investor/MyBids/page.tsx_7", "file": "src/app/dashboard/investor/MyBids/page.tsx", "content": "</Button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_0", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "================================================\n\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Leaf } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { auth, db } from '@/app/firebase';\n\n// Type definitions\ntype Category = {\n  name: string;\n  sustainable: boolean;\n};\n\ntype InvestorInfo = {\n  amount: string;\n  duration: string;\n  goals: string;\n};\n\nexport default function Preferences() {\n  const router = useRouter();\n  const [userId, setUserId] = useState<string | null>(null);\n  const [investorInfo, setInvestorInfo] = useState<InvestorInfo>({\n    amount: \"\",\n    duration: \"\",\n    goals: \"\"\n  });"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_1", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "amount: \"\",\n    duration: \"\",\n    goals: \"\"\n  });\n  const [selectedPreferences, setSelectedPreferences] = useState<string[]>([]);\n\n  // Categories with sustainability flags\n  const categories: Category[] = [\n    { name: \"Technology\", sustainable: false },\n    { name: \"Manufacturing\", sustainable: false },\n    { name: \"Healthcare\", sustainable: false },\n    { name: \"Agribusiness\", sustainable: true },\n    { name: \"Renewable-Energy\", sustainable: true },\n    { name: \"Education\", sustainable: false },\n    { name: \"E-commerce\", sustainable: false },\n    { name: \"Infrastructure\", sustainable: false },\n    { name: \"Financial-Services\", sustainable: false },\n    { name: \"Consumer-Goods\", sustainable: false },\n    { name: \"Artisanal-and-Handicrafts\", sustainable: true },"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_2", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "{ name: \"Artisanal-and-Handicrafts\", sustainable: true },\n    { name: \"Sustainable-and-Social-Enterprises\", sustainable: true }\n  ];\n\n  // Check authentication status\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserId(user.uid);\n      } else {\n        router.push(\"/login\");\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  const togglePreference = (category: string) => {\n    setSelectedPreferences(prev =>\n      prev.includes(category)\n        ? prev.filter(p => p !== category)\n        : [...prev, category]\n    );\n  };\n\n  const handleSubmit = async () => {\n    const preferencesId = Math.floor(Math.random() * 1000000000);\n    try {\n      const preferenceData = {\n        preferencesId,"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_3", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "try {\n      const preferenceData = {\n        preferencesId,\n        amountToInvest: investorInfo.amount,\n        investmentDuration: investorInfo.duration,\n        goals: investorInfo.goals,\n        preferences: selectedPreferences,\n        userId\n      };\n      \n      await setDoc(doc(db, \"preferences\", preferencesId.toString()), preferenceData);\n      router.push(`/dashboard/investor/recom/${preferencesId}`);\n    } catch (error) {\n      console.error(\"Error adding/updating document: \", error);\n      // You might want to add error handling UI here\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6 relative\">\n      <Button\n        onClick={() => router.push(\"/dashboard/investor\")}"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_4", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "<Button\n        onClick={() => router.push(\"/dashboard/investor\")}\n        className=\"absolute top-6 right-6 bg-white hover:bg-gray-200 text-black px-4 py-2 rounded-lg\"\n      >\n        Back to Dashboard\n      </Button>\n\n      <div className=\"max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Investment Details Section */}\n        <div className=\"space-y-6 bg-black border border-[#333333] rounded-xl p-6\">\n          <h2 className=\"text-2xl font-bold\">Investment Details</h2>\n          \n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"block text-gray-400 mb-2\">Amount to Invest</label>\n              <input\n                type=\"text\"\n                placeholder=\"Enter amount\"\n                value={investorInfo.amount}"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_5", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "placeholder=\"Enter amount\"\n                value={investorInfo.amount}\n                onChange={(e) => setInvestorInfo(prev => ({ ...prev, amount: e.target.value }))}\n                className=\"w-full bg-black border border-[#333333] rounded-lg p-3 text-white placeholder:text-gray-600 focus:border-white focus:ring-0 transition-colors\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-gray-400 mb-2\">Investment Duration</label>\n              <input\n                type=\"text\"\n                placeholder=\"e.g., 2 years\"\n                value={investorInfo.duration}\n                onChange={(e) => setInvestorInfo(prev => ({ ...prev, duration: e.target.value }))}"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_6", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "onChange={(e) => setInvestorInfo(prev => ({ ...prev, duration: e.target.value }))}\n                className=\"w-full bg-black border border-[#333333] rounded-lg p-3 text-white placeholder:text-gray-600 focus:border-white focus:ring-0 transition-colors\"\n              />\n            </div>\n\n            <div>\n              <label className=\"block text-gray-400 mb-2\">Goals and Objectives</label>\n              <textarea\n                placeholder=\"Describe your investment goals\"\n                value={investorInfo.goals}\n                onChange={(e) => setInvestorInfo(prev => ({ ...prev, goals: e.target.value }))}"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_7", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "onChange={(e) => setInvestorInfo(prev => ({ ...prev, goals: e.target.value }))}\n                className=\"w-full bg-black border border-[#333333] rounded-lg p-3 text-white placeholder:text-gray-600 focus:border-white focus:ring-0 transition-colors min-h-[150px]\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Investment Preferences Section */}\n        <div className=\"space-y-6 bg-black border border-[#333333] rounded-xl p-6\">\n          <h2 className=\"text-2xl font-bold\">Investment Preferences</h2>\n          \n          <div>\n            <p className=\"text-gray-400 mb-4\">Available Preferences:</p>\n            <div className=\"flex flex-wrap gap-3\">\n              {categories.map((category) => (\n                <button"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_8", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "{categories.map((category) => (\n                <button\n                  key={category.name}\n                  onClick={() => togglePreference(category.name)}\n                  className={`group relative flex items-center gap-2 px-4 py-2 rounded-full border transition-all ${\n                    selectedPreferences.includes(category.name)\n                      ? \"border-white text-white\"\n                      : \"border-[#333333] text-gray-400 hover:border-white hover:text-white\"\n                  }`}\n                >\n                  {category.sustainable && (\n                    <Leaf className=\"w-4 h-4 text-green-500\" />\n                  )}\n                  {category.name.replace(/-/g, ' ')}"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_9", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": ")}\n                  {category.name.replace(/-/g, ' ')}\n                  <span className=\"ml-1 text-gray-400 group-hover:text-white\">+</span>\n                </button>\n              ))}\n            </div>\n          </div>\n\n          <div className=\"mt-6\">\n            <p className=\"text-gray-400 mb-4\">Selected Preferences:</p>\n            <div className=\"min-h-[100px] border border-[#333333] rounded-lg p-4\">\n              {selectedPreferences.length === 0 ? (\n                <p className=\"text-gray-600\">No preferences selected</p>\n              ) : (\n                <div className=\"flex flex-wrap gap-2\">\n                  {selectedPreferences.map(pref => (\n                    <span key={pref} className=\"px-3 py-1 rounded-full bg-white/10 text-white text-sm\">"}, {"id": "src/app/dashboard/investor/preferences/page.tsx_10", "file": "src/app/dashboard/investor/preferences/page.tsx", "content": "{pref.replace(/-/g, ' ')}\n                    </span>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Submit Button */}\n      <div className=\"max-w-6xl mx-auto mt-6\">\n        <Button \n          className=\"w-full bg-white text-black hover:bg-gray-200 py-6 text-lg rounded-xl\"\n          onClick={handleSubmit}\n        >\n          Submit Details\n        </Button>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_0", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Loader2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { doc, getDoc, collection, query, getDocs } from \"firebase/firestore\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from \"@/app/firebase\";\nimport { useParams } from \"next/navigation\";\n\n// Type definitions\ntype Application = {\n  applicationId: number;\n  companyName: string;\n  businessType: string;\n  annualRevenue: string;\n  contactPerson: string;\n  loanAmount: number;\n  loanAmountInINR: number;\n  yearsInOperation: string;\n  fundingStatus: string;\n  loanPurpose: string;\n  tags: string[];\n};"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_1", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "yearsInOperation: string;\n  fundingStatus: string;\n  loanPurpose: string;\n  tags: string[];\n};\n\nexport default function Preferences() {\n  const router = useRouter();\n  const params = useParams();\n  const preferencesId = params.id;\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [prefsFetched, setPrefsFetched] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [userId, setUserId] = useState<string | null>(null);\n  const [selectedPreferences, setSelectedPreferences] = useState<string[]>([]);\n  const [applications, setApplications] = useState<Application[]>([]);\n\n  // Auth check\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserId(user.uid);\n      } else {"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_2", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "if (user) {\n        setUserId(user.uid);\n      } else {\n        router.push(\"/login\");\n      }\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  // Fetch preferences\n  useEffect(() => {\n    if (!preferencesId) {\n      setError(\"Missing preferences ID\");\n      setIsLoading(false);\n      return;\n    }\n\n    const fetchPreferences = async () => {\n      try {\n        const prefDoc = await getDoc(doc(db, \"preferences\", String(preferencesId)));\n\n        if (!prefDoc.exists()) {\n          setError(\"Preferences not found\");\n          setIsLoading(false);\n          return;\n        }\n\n        const data = prefDoc.data();\n\n        if (!data.preferences || !Array.isArray(data.preferences)) {\n          setError(\"Invalid preferences format\");\n          setIsLoading(false);"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_3", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "setError(\"Invalid preferences format\");\n          setIsLoading(false);\n          return;\n        }\n\n        setSelectedPreferences(data.preferences);\n        setPrefsFetched(true);\n      } catch (error) {\n        console.error(\"Error fetching preferences:\", error);\n        setError(\"Failed to load preferences\");\n        setIsLoading(false);\n      }\n    };\n\n    fetchPreferences();\n  }, [preferencesId]);\n\n  // Fetch applications\n  useEffect(() => {\n    if (!prefsFetched || selectedPreferences.length === 0) {\n      return;\n    }\n\n    const fetchApplications = async () => {\n      try {\n        const q = query(collection(db, \"applications\"));\n        const querySnapshot = await getDocs(q);\n\n        const allApps = querySnapshot.docs.map(doc => {\n          const data = doc.data();"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_4", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "const allApps = querySnapshot.docs.map(doc => {\n          const data = doc.data();\n          return {\n            applicationId: data.applicationId,\n            companyName: data.companyName || \"Unnamed Company\",\n            businessType: data.businessType || \"Unknown\",\n            annualRevenue: data.annualRevenue || \"0\",\n            contactPerson: data.contactPerson || \"Unknown\",\n            loanAmount: data.loanAmount || 0,\n            loanAmountInINR: data.loanAmountInINR || 0,\n            yearsInOperation: data.yearsInOperation || \"0\",\n            fundingStatus: data.fundingStatus || \"pending\",\n            loanPurpose: data.loanPurpose || \"Not specified\",\n            tags: Array.isArray(data.tags) ? data.tags : []\n          } as Application;\n        });"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_5", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "} as Application;\n        });\n\n        const filteredApps = allApps.filter(app =>\n          app.tags && app.tags.some(tag => selectedPreferences.includes(tag))\n        );\n\n        setApplications(filteredApps);\n      } catch (error) {\n        console.error(\"Error fetching applications:\", error);\n        setError(\"Failed to load applications\");\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchApplications();\n  }, [prefsFetched, selectedPreferences]);\n\n  // Format currency\n  const formatCurrency = (amount: number) => {\n    return `\u00e2\u201a\u00b9${amount.toLocaleString()}`;\n  };\n\n  // Get status display\n  const getStatusDisplay = (status: string) => {\n    switch (status.toLowerCase()) {\n      case \"finalized\":"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_6", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "switch (status.toLowerCase()) {\n      case \"finalized\":\n        return { text: \"Active\", className: \"bg-green-900/60 text-green-400\" };\n      case \"pending\":\n        return { text: \"Pending\", className: \"bg-yellow-900/60 text-yellow-400\" };\n      default:\n        return { text: status, className: \"bg-gray-900/60 text-gray-400\" };\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-black text-white p-6 relative\">\n      <Button\n        onClick={() => router.push(\"/dashboard/investor\")}\n        className=\"absolute top-6 right-6 bg-white hover:bg-gray-200 text-black px-4 py-2 rounded-lg\"\n      >\n        Back to Dashboard\n      </Button>\n\n      <div className=\"max-w-6xl mx-auto\">\n        <h1 className=\"text-3xl font-bold mb-8\">Matching Investments</h1>\n\n        {isLoading && ("}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_7", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "<h1 className=\"text-3xl font-bold mb-8\">Matching Investments</h1>\n\n        {isLoading && (\n          <div className=\"flex justify-center items-center h-64\">\n            <Loader2 className=\"h-12 w-12 animate-spin text-gray-400\" />\n          </div>\n        )}\n\n        {error && (\n          <div className=\"bg-red-900/30 border border-red-500 rounded-lg p-4 mb-6\">\n            <p className=\"text-red-400\">{error}</p>\n          </div>\n        )}\n\n        {!isLoading && !error && applications.length === 0 && (\n          <div className=\"bg-gray-900/30 border border-gray-700 rounded-lg p-8 text-center\">\n            <p className=\"text-gray-400 text-lg\">No matching applications found based on your preferences.</p>\n          </div>\n        )}"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_8", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "</div>\n        )}\n\n        {!isLoading && !error && applications.length > 0 && (\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n            {applications.map(app => {\n              const status = getStatusDisplay(app.fundingStatus);\n\n              return (\n                <div key={app.applicationId} className=\"bg-black border border-[#333333] rounded-xl p-6 flex flex-col\">\n                  <div className=\"flex justify-between items-start mb-2\">\n                    <div>\n                      <h2 className=\"text-2xl font-bold\">{app.companyName}</h2>\n                      <p className=\"text-gray-400\">{app.businessType}</p>\n                    </div>\n                    <span className={`px-3 py-1 rounded-full text-xs ${status.className}`}>"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_9", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "<span className={`px-3 py-1 rounded-full text-xs ${status.className}`}>\n                      {status.text}\n                    </span>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4 mb-4 mt-3\">\n                    <div>\n                      <p className=\"text-gray-400 text-sm\">Loan Amount</p>\n                      <p className=\"font-bold\">{Math.abs(app.loanAmount)} APT</p>\n                      <p className=\"text-sm text-gray-500\">{formatCurrency(app.loanAmountInINR)}</p>\n                    </div>\n\n                    <div>\n                      <p className=\"text-gray-400 text-sm\">Annual Revenue</p>\n                      <p className=\"font-bold\">{app.annualRevenue}</p>\n                    </div>\n                  </div>"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_10", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "</div>\n                  </div>\n\n                  <div className=\"grid grid-cols-2 gap-4 mb-4\">\n                    <div>\n                      <p className=\"text-gray-400 text-sm\">Years in Operation</p>\n                      <p className=\"font-bold\">{app.yearsInOperation} years</p>\n                    </div>\n\n                    <div className=\"mb-6\">\n                      <p className=\"text-gray-400 text-sm\">Loan Purpose</p>\n                      <p className=\"font-medium\">{app.loanPurpose}</p>\n                    </div>\n                  </div>\n                  <div className=\"mt-auto flex justify-end\">\n                    <Button\n                      onClick={() => router.push(`/dashboard/investor/viewapplication?id=${app.applicationId}`)}"}, {"id": "src/app/dashboard/investor/recom/[id]/page.tsx_11", "file": "src/app/dashboard/investor/recom/[id]/page.tsx", "content": "className=\"bg-white hover:bg-gray-200 text-black\"\n                    >\n                      View Application\n                    </Button>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_0", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useState, useEffect } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { db } from \"@/app/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Award,\n  Calendar,\n  DollarSign,\n  IndianRupee,\n  Phone,\n  Tag,\n  X,\n  Building,\n  Briefcase,\n  Clock,\n  AlertCircle,\n  CheckCircle,\n  Users,\n\n} from \"lucide-react\";\nimport toast from \"react-hot-toast\";\nimport {\n  AreaChart,\n  Area,\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from 'recharts';\n\n// Types\ninterface Application {\n  id: string | number;\n  companyName: string;\n  businessType: string;"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_1", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "interface Application {\n  id: string | number;\n  companyName: string;\n  businessType: string;\n  tags?: Array<string | { tag: string; isSpecial: boolean }>;\n  loanPurpose: string;\n  yearsInOperation: number | string;\n  annualRevenue: number | string;\n  phone: string;\n  fundingStatus: string;\n  fundingReceived: number;\n  loanAmount: number | string;\n  loanAmountInINR: number;\n  pitch?: string;\n  videoLink?: string;\n  videoUrl?: string;\n  companyDescription?: string;\n  status?: string;\n  contact?: {\n    companyEmail: string;\n    companyPhone: string;\n  };\n  documents?: {\n    identityProof: string;\n    bankStatements: string;\n    taxReturns: string;\n    addressProof: string;\n  };\n  contactPerson?: string;\n  submittedDate?: string;\n}\n\ninterface ShowGraphs {\n  revenue: boolean;"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_2", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "contactPerson?: string;\n  submittedDate?: string;\n}\n\ninterface ShowGraphs {\n  revenue: boolean;\n  customers: boolean;\n  market: boolean;\n  burnRate: boolean;\n}\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n// Default categories if none are provided\nconst DEFAULT_CATEGORIES = [\"Financial Services\", \"Technology\", \"Services\"];\n\nexport default function ApplicationView() {\n  const router = useRouter();\n  const search = useSearchParams();\n  const applicationId = search.get(\"id\");\n  const [application, setApplication] = useState<Application | null>(null);\n  const [showGraphs, setShowGraphs] = useState<ShowGraphs>({\n    revenue: false,\n    customers: false,\n    market: false,\n    burnRate: false\n  });\n  const [showContactCard, setShowContactCard] = useState(false);"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_3", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "burnRate: false\n  });\n  const [showContactCard, setShowContactCard] = useState(false);\n\n  // Generate current date if submittedDate is not available\n  const currentDate = new Date().toISOString().split('T')[0];\n\n  useEffect(() => {\n    const fetchApplication = async () => {\n      if (!applicationId) return;\n\n      try {\n        const appRef = doc(db, \"applications\", applicationId);\n        const appSnap = await getDoc(appRef);\n\n        if (appSnap.exists()) {\n          const appData = appSnap.data() as Application;\n          // Calculate INR value if not already present\n          if (!appData.loanAmountInINR && appData.loanAmount) {\n            appData.loanAmountInINR = Number(appData.loanAmount) * 777.36;\n          }\n          // Set default status if none exists"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_4", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "}\n          // Set default status if none exists\n          if (!appData.status) {\n            appData.status = appData.fundingStatus || \"Under Review\";\n          }\n          // Set pitch from companyDescription if pitch is not available\n          if (!appData.pitch && appData.companyDescription) {\n            appData.pitch = appData.companyDescription;\n          }\n          // Set videoLink from videoUrl if needed\n          if (!appData.videoLink && appData.videoUrl) {\n            appData.videoLink = appData.videoUrl;\n          }\n          // Add default tags if none exist\n          if (!appData.tags) {\n            appData.tags = DEFAULT_CATEGORIES.map(cat => cat);\n          }\n          // Add submission date if missing\n          if (!appData.submittedDate) {"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_5", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "}\n          // Add submission date if missing\n          if (!appData.submittedDate) {\n            appData.submittedDate = currentDate;\n          }\n          \n          setApplication(appData);\n          toast.success('Application found!');\n        } else {\n          toast.error(\"Application not found!\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching application:\", error);\n        toast.error(\"Error fetching application!\");\n      }\n    };\n\n    fetchApplication();\n  }, [applicationId, currentDate]);\n\n  const toggleGraph = (metric: keyof ShowGraphs) => {\n    setShowGraphs(prev => ({\n      ...prev,\n      [metric]: !prev[metric]\n    }));\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status.toLowerCase()) {\n      case 'approved':"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_6", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "switch (status.toLowerCase()) {\n      case 'approved':\n        return 'bg-green-500';\n      case 'rejected':\n        return 'bg-red-500';\n      case 'under review':\n        return 'bg-yellow-500';\n      case 'pending':\n        return 'bg-blue-500';\n      default:\n        return 'bg-blue-500';\n    }\n  };\n\n  const getDocumentStatus = (status: string) => {\n    // Just check if URL exists\n    if (status && status.startsWith('https://')) {\n      return <CheckCircle className=\"w-5 h-5 text-green-500\" />;\n    }\n    return <Clock className=\"w-5 h-5 text-yellow-500\" />;\n  };\n\n  if (!application) {\n    return (\n      <div className=\"min-h-screen bg-black text-white p-6 flex items-center justify-center\">\n        <p className=\"text-xl\">Loading application details...</p>\n      </div>\n    );\n  }"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_7", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<p className=\"text-xl\">Loading application details...</p>\n      </div>\n    );\n  }\n\n  const hasSpecialTag = application.tags?.some(\n    (tag) => typeof tag === \"object\" && tag.isSpecial\n  );\n\n  // Extract loan details for clear presentation\n  const loanDetails = {\n    amount: typeof application.loanAmount === 'number' ? application.loanAmount.toString() : application.loanAmount,\n    currency: \"APT\",\n    inrValue: `\u00e2\u201a\u00b9${application.loanAmountInINR.toLocaleString('en-IN', { maximumFractionDigits: 0 })}`,\n    purpose: application.loanPurpose,\n    tenure: \"12 months\", // Default value\n    interestRate: \"12%\", // Default value\n    repaymentSchedule: \"Monthly\", // Default value\n    expectedMonthlyPayment: `${(Number(application.loanAmount) * 0.095).toFixed(1)} APT` // Approximation\n  };"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_8", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "};\n\n  return (\n    <div className=\"min-h-screen bg-black text-white\">\n      <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n        <span className=\"text-xl font-medium\">Investrix</span>\n        <Button \n          variant=\"outline\" \n          className=\"text-white bg-black hover:text-black hover:bg-white\"\n          onClick={() => router.push('/dashboard/investor')}\n        >\n          Back to Dashboard\n        </Button>\n      </nav>\n\n      <div className=\"max-w-6xl mx-auto p-6\">\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n          {/* Main content area - Loan Details and Video */}\n          <div className=\"md:col-span-2 space-y-6\">\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_9", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Loan Details</h2>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Amount</p>\n                  <div className=\"flex items-center mt-1\">\n                    <DollarSign className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{loanDetails.amount} APT</p>\n                  </div>\n                  <p className=\"text-sm text-gray-500\">{loanDetails.inrValue}</p>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Purpose</p>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_10", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<div>\n                  <p className=\"text-gray-400 text-sm\">Purpose</p>\n                  <div className=\"flex items-center mt-1\">\n                    <Briefcase className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{loanDetails.purpose}</p>\n                  </div>\n                </div>\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Founded Since</p>\n                  <div className=\"flex items-center mt-1\">\n                    <Calendar className=\"w-4 h-4 mr-1 text-gray-400\" />\n                    <p className=\"font-medium\">{application.yearsInOperation} years</p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n            \n            {/* Video Pitch Section */}"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_11", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "</div>\n            </div>\n            \n            {/* Video Pitch Section */}\n            {application.videoLink || application.videoUrl ? (\n              <div className=\"border border-[#333333] rounded-xl p-6\">\n                <h2 className=\"text-xl font-bold mb-4\">Company Pitch</h2>\n                <div className=\"relative aspect-video w-full bg-black rounded-lg overflow-hidden\">\n                  <iframe\n                    src={application.videoLink || application.videoUrl}\n                    allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n                    allowFullScreen\n                    className=\"absolute inset-0 w-full h-full\"\n                  />\n                </div>\n              </div>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_12", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "/>\n                </div>\n              </div>\n            ) : null}\n            \n            \n\n          </div>\n\n          {/* Sidebar - Company Info & Documents */}\n          <div className=\"space-y-6\">\n            <div className=\"bg-[#111111] p-6 rounded-lg border border-[#333333]\">\n              <h2 className=\"text-xl font-semibold mb-4\">Company Information</h2>\n              <div className=\"space-y-4\">\n                <div>\n                  <div className=\"flex items-center mb-2\">\n                    <Building className=\"w-4 h-4 mr-2 text-gray-400\" />\n                    <p className=\"font-medium\">{application.companyName}</p>\n                  </div>\n                  <p className=\"text-sm text-gray-400\">{application.businessType}</p>\n                </div>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_13", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "</div>\n\n                <div className=\"pt-2\">\n                  <p className=\"text-sm text-gray-400 mb-2\">Tags</p>\n                  {/* Tags */}\n              <div className=\"flex flex-wrap gap-2 mb-3\">\n                {application.tags?.map((tag, index) => {\n                  const tagText = typeof tag === \"object\" ? tag.tag : tag;\n                  const isSpecial = typeof tag === \"object\" && tag.isSpecial;\n\n                  return (\n                    <span\n                      key={index}\n                      className={`px-3 py-1 rounded-full text-sm ${\n                        isSpecial ? \"bg-green-500 text-black\" : \"bg-[#333333] text-white\"\n                      }`}\n                    >\n                      {tagText}\n                    </span>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_14", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": ">\n                      {tagText}\n                    </span>\n                  );\n                })}\n              </div>\n                </div>\n\n                <div className=\"pt-4\">\n                  <p className=\"text-sm text-gray-400 mb-3\">Document Verification</p>\n                  <div className=\"space-y-3\">\n                    {application.documents && (\n                      <>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Identity Proof</p>\n                          {getDocumentStatus(application.documents.identityProof)}\n                        </div>\n                        <div className=\"flex items-center justify-between\">"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_15", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Bank Statements</p>\n                          {getDocumentStatus(application.documents.bankStatements)}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Tax Returns</p>\n                          {getDocumentStatus(application.documents.taxReturns)}\n                        </div>\n                        <div className=\"flex items-center justify-between\">\n                          <p className=\"text-sm\">Address Proof</p>\n                          {getDocumentStatus(application.documents.addressProof)}\n                        </div>\n                      </>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_16", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "</div>\n                      </>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Contact Card Modal */}\n        {showContactCard && (\n          <div className=\"fixed inset-0 bg-black/70 flex items-center justify-center p-4 z-50\">\n            <div className=\"bg-black border border-[#333333] rounded-xl p-6 max-w-md w-full relative\">\n              <button\n                onClick={() => setShowContactCard(false)}\n                className=\"absolute top-4 right-4 text-gray-400 hover:text-white\"\n              >\n                <X className=\"w-5 h-5\" />\n              </button>\n\n              <h2 className=\"text-xl font-bold mb-6\">Contact Information</h2>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_17", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<h2 className=\"text-xl font-bold mb-6\">Contact Information</h2>\n\n              <div className=\"space-y-6\">\n                <div className=\"space-y-4\">\n                  <h3 className=\"text-lg font-medium text-gray-400\">Company</h3>\n                  <div className=\"flex items-center gap-3\">\n                    <Phone className=\"w-5 h-5 text-gray-400\" />\n                    <div>\n                      <p className=\"text-sm text-gray-400\">Phone</p>\n                      <p className=\"text-white\">{application.phone}</p>\n                    </div>\n                  </div>\n                  {application.contactPerson && (\n                    <div className=\"flex items-center gap-3\">\n                      <Users className=\"w-5 h-5 text-gray-400\" />\n                      <div>"}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_18", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<Users className=\"w-5 h-5 text-gray-400\" />\n                      <div>\n                        <p className=\"text-sm text-gray-400\">Contact Person</p>\n                        <p className=\"text-white\">{application.contactPerson}</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n\n              <Button\n                className=\"w-full mt-6 bg-white text-black hover:bg-gray-200\"\n                onClick={() => setShowContactCard(false)}\n              >\n                Close\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {/* Action Buttons */}\n        <div className=\"flex gap-4 mt-6\">\n          <Button\n          variant=\"outline\""}, {"id": "src/app/dashboard/investor/viewapplication/page.tsx_19", "file": "src/app/dashboard/investor/viewapplication/page.tsx", "content": "<div className=\"flex gap-4 mt-6\">\n          <Button\n          variant=\"outline\"\n            className=\"flex-1 bg-black text-white border-white hover:bg-white hover:text-black py-6 text-lg\"\n            onClick={() => router.push(`/dashboard/investor/bid/${application.id}`)}\n          >\n            Place Bid\n          </Button>\n          <Button\n            variant=\"outline\"\n            className=\"flex-1 border-white bg-black text-white hover:bg-white hover:text-black py-6 text-lg\"\n            onClick={() => setShowContactCard(true)}\n          >\n            Contact Company\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}"}, {"id": "src/app/login/page.tsx_0", "file": "src/app/login/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { RetroGrid } from \"@/components/magicui/retro-grid\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport { auth } from \"../firebase\";\nimport toast from \"react-hot-toast\";\nimport { \n  Rocket, \n  Mail, \n  Lock, \n  ArrowRight, \n  Wallet, \n  Lightbulb,\n  Eye,\n  EyeOff \n} from \"lucide-react\";\n\nexport default function Login() {\n  const router = useRouter();\n  const [selectedRole, setSelectedRole] = useState<string>(\"\");\n  const [formData, setFormData] = useState({\n    email: \"\","}, {"id": "src/app/login/page.tsx_1", "file": "src/app/login/page.tsx", "content": "const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError(\"\");\n  };\n\n  const validateForm = () => {\n    if (!selectedRole) {\n      setError(\"Please select a role before signing in.\");\n      return false;\n    }\n\n    if (!formData.email || !formData.password) {\n      setError(\"Please fill in all fields.\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleSignIn = async () => {\n    if (!validateForm()) return;"}, {"id": "src/app/login/page.tsx_2", "file": "src/app/login/page.tsx", "content": "}\n    return true;\n  };\n\n  const handleSignIn = async () => {\n    if (!validateForm()) return;\n\n    setIsLoading(true);\n    try {\n      await signInWithEmailAndPassword(auth, formData.email, formData.password);\n      toast.success(\"Sign in successful\");\n      \n      // Route based on selected role\n      if (selectedRole === 'investor') {\n        router.push('/dashboard/investor');\n      } else if (selectedRole === 'investee') {\n        router.push('/dashboard/investee');\n      }\n    } catch (error: any) {\n      console.error('Error signing in:', error);\n      setError(\"Failed to sign in. Please try again.\");\n      toast.error(\"Sign in failed\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return ("}, {"id": "src/app/login/page.tsx_3", "file": "src/app/login/page.tsx", "content": "} finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"relative flex h-screen w-full flex-col items-center justify-center bg-black overflow-hidden\">\n      {/* Animated Background */}\n      <motion.div \n        initial={{ opacity: 0 }}\n        animate={{ opacity: 0.2 }}\n        transition={{ duration: 1 }}\n        className=\"absolute inset-0\"\n      >\n        <RetroGrid className=\"stroke-white\" />\n      </motion.div>\n\n      {/* Floating Elements */}\n      <div className=\"absolute top-1/4 left-1/4 w-72 h-72 bg-green-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob\" />\n      <div className=\"absolute bottom-1/4 right-1/4 w-72 h-72 bg-emerald-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\" />"}, {"id": "src/app/login/page.tsx_4", "file": "src/app/login/page.tsx", "content": "{/* Logo */}\n      <motion.div\n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.5 }}\n        className=\"absolute top-8 left-8 flex items-center gap-2\"\n      >\n        <Rocket className=\"w-6 h-6 text-white\" />\n        <span className=\"text-white text-xl font-medium\">Investrix</span>\n      </motion.div>\n\n      {/* Main Content */}\n      <motion.div \n        initial={{ scale: 0.95, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        transition={{ duration: 0.5 }}\n        className=\"z-10 w-full max-w-md p-8 rounded-3xl border border-white/10 bg-black/80 backdrop-blur-xl\"\n      >\n        <div className=\"space-y-8\">\n          {/* Header */}\n          <div className=\"space-y-2\">"}, {"id": "src/app/login/page.tsx_5", "file": "src/app/login/page.tsx", "content": "<div className=\"space-y-8\">\n          {/* Header */}\n          <div className=\"space-y-2\">\n            <h1 className=\"text-4xl font-medium tracking-tight bg-clip-text text-transparent bg-gradient-to-r from-white to-gray-500\">\n              Welcome back\n            </h1>\n            <p className=\"text-base text-gray-500\">\n              Enter your credentials to access your account\n            </p>\n          </div>\n\n          {/* Error Message */}\n          {error && (\n            <motion.div\n              initial={{ opacity: 0, y: -10 }}\n              animate={{ opacity: 1, y: 0 }}\n              className=\"p-3 rounded-lg bg-red-500/10 border border-red-500/20 text-red-400 text-sm\"\n            >\n              {error}\n            </motion.div>\n          )}"}, {"id": "src/app/login/page.tsx_6", "file": "src/app/login/page.tsx", "content": ">\n              {error}\n            </motion.div>\n          )}\n\n          {/* Sign In Form */}\n          <div className=\"space-y-6\">\n            {/* Role Selector */}\n            <div className=\"space-y-3\">\n              <label className=\"text-sm text-gray-400\">Select your role</label>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {[\n                  { \n                    id: 'investor', \n                    icon: <Wallet className=\"w-5 h-5\" />, \n                    label: 'Investor',\n                    gradient: 'from-white-300 via-green-400 to-green-500'\n                  },\n                  { \n                    id: 'investee', \n                    icon: <Lightbulb className=\"w-5 h-5\" />, \n                    label: 'Investee',"}, {"id": "src/app/login/page.tsx_7", "file": "src/app/login/page.tsx", "content": "label: 'Investee',\n                    gradient: 'from-white-300 via-emerald-400 to-emerald-500'\n                  }\n                ].map((role) => (\n                  <motion.button\n                    key={role.id}\n                    whileHover={{ scale: 1.02 }}\n                    whileTap={{ scale: 0.98 }}\n                    onClick={() => setSelectedRole(role.id)}\n                    className={`\n                      p-4 rounded-xl border relative overflow-hidden transition-all duration-300\n                      ${selectedRole === role.id\n                        ? 'border-green-400/30 text-white'\n                        : 'border-white/5 text-gray-400 hover:border-white/10 hover:bg-white/5'\n                      }\n                    `}\n                  >"}, {"id": "src/app/login/page.tsx_8", "file": "src/app/login/page.tsx", "content": "}\n                    `}\n                  >\n                    {/* Background gradient when selected */}\n                    {selectedRole === role.id && (\n                      <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ duration: 0.3 }}\n                        className={`\n                          absolute inset-0 bg-gradient-to-br ${role.gradient} \n                          opacity-10 backdrop-blur-sm\n                        `}\n                      />\n                    )}\n                    \n                    {/* Glowing border effect when selected */}\n                    {selectedRole === role.id && (\n                      <motion.div"}, {"id": "src/app/login/page.tsx_9", "file": "src/app/login/page.tsx", "content": "{selectedRole === role.id && (\n                      <motion.div\n                        initial={{ opacity: 0 }}\n                        animate={{ opacity: 1 }}\n                        transition={{ duration: 0.3 }}\n                        className=\"absolute inset-0 rounded-xl\"\n                        style={{\n                          background: `\n                            linear-gradient(45deg, \n                              rgba(74, 222, 128, 0.1), \n                              rgba(34, 197, 94, 0.1), \n                              rgba(21, 128, 61, 0.1)\n                            )\n                          `,\n                        }}\n                      />\n                    )}\n\n                    {/* Content */}"}, {"id": "src/app/login/page.tsx_10", "file": "src/app/login/page.tsx", "content": "/>\n                    )}\n\n                    {/* Content */}\n                    <div className=\"relative flex flex-col items-center gap-2\">\n                      <div className={`\n                        ${selectedRole === role.id \n                          ? 'text-green-400' \n                          : 'text-gray-400'\n                        } transition-colors duration-300\n                      `}>\n                        {role.icon}\n                      </div>\n                      <span className={`\n                        ${selectedRole === role.id \n                          ? 'text-green-400' \n                          : 'text-gray-400'\n                        } font-medium transition-colors duration-300\n                      `}>"}, {"id": "src/app/login/page.tsx_11", "file": "src/app/login/page.tsx", "content": "} font-medium transition-colors duration-300\n                      `}>\n                        {role.label}\n                      </span>\n                    </div>\n                  </motion.button>\n                ))}\n              </div>\n            </div>\n\n            {/* Input Fields */}\n            <div className=\"space-y-4\">\n              <div className=\"relative\">\n                <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={formData.email}\n                  onChange={handleInputChange}"}, {"id": "src/app/login/page.tsx_12", "file": "src/app/login/page.tsx", "content": "value={formData.email}\n                  onChange={handleInputChange}\n                  className=\"h-12 pl-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n                />\n              </div>\n              <div className=\"relative\">\n                <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n                <Input\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={formData.password}\n                  onChange={handleInputChange}"}, {"id": "src/app/login/page.tsx_13", "file": "src/app/login/page.tsx", "content": "value={formData.password}\n                  onChange={handleInputChange}\n                  className=\"h-12 pl-10 pr-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-white transition-colors\"\n                >\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {/* Sign In Button */}\n            <motion.div"}, {"id": "src/app/login/page.tsx_14", "file": "src/app/login/page.tsx", "content": "</div>\n            </div>\n\n            {/* Sign In Button */}\n            <motion.div\n              whileHover={{ scale: 1.02 }}\n              whileTap={{ scale: 0.98 }}\n            >\n              <Button\n                onClick={handleSignIn}\n                disabled={isLoading}\n                className=\"w-full h-12 bg-gradient-to-r from-green-400 to-emerald-500 hover:from-green-500 hover:to-emerald-600 text-white font-medium rounded-xl transition-all duration-200 group\"\n              >\n                {isLoading ? (\n                  <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n                ) : (\n                  <>\n                    Sign in"}, {"id": "src/app/login/page.tsx_15", "file": "src/app/login/page.tsx", "content": ") : (\n                  <>\n                    Sign in\n                    <ArrowRight className=\"w-4 h-4 ml-2 group-hover:translate-x-0.5 transition-transform\" />\n                  </>\n                )}\n              </Button>\n            </motion.div>\n          </div>\n\n          {/* Additional Options */}\n          <div className=\"flex items-center justify-between\">\n            <motion.div whileHover={{ scale: 1.05 }}>\n              <Button\n                variant=\"link\"\n                className=\"text-gray-500 hover:text-green-400 transition-colors duration-200\"\n                onClick={() => router.push(\"/signup\")}\n              >\n                Don't have an account? Sign up\n              </Button>\n            </motion.div>"}, {"id": "src/app/login/page.tsx_16", "file": "src/app/login/page.tsx", "content": "Don't have an account? Sign up\n              </Button>\n            </motion.div>\n            <motion.div whileHover={{ scale: 1.05 }}>\n              <Button\n                variant=\"link\"\n                className=\"text-gray-500 hover:text-green-400 transition-colors duration-200\"\n                onClick={() => router.push(\"/forgot-password\")}\n              >\n                Forgot password?\n              </Button>\n            </motion.div>\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Background Gradients */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/80 to-black\" />\n      <div className=\"absolute bottom-0 left-0 w-full h-1/3 bg-gradient-to-t from-black to-transparent\" />\n    </div>\n  );\n}"}, {"id": "src/app/signup/page.tsx_0", "file": "src/app/signup/page.tsx", "content": "================================================\n\"use client\";\n/* eslint-disable */\nimport { useRouter } from \"next/navigation\";\nimport { Button } from \"@/components/ui/button\";\nimport { RetroGrid } from \"@/components/magicui/retro-grid\";\nimport { Input } from \"@/components/ui/input\";\nimport { useState } from \"react\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { auth, db } from \"../firebase\";\nimport toast from \"react-hot-toast\";\nimport {\n  Rocket,\n  Mail,\n  Lock,\n  User,\n  Building,\n  ArrowRight,\n  ArrowLeft,\n  Wallet,\n  Lightbulb,\n  Eye,\n  EyeOff,\n  Check,\n  Phone,\n  AlertCircle,\n  Key\n} from \"lucide-react\";\n\ntype Step = {\n  id: number;"}, {"id": "src/app/signup/page.tsx_1", "file": "src/app/signup/page.tsx", "content": "Check,\n  Phone,\n  AlertCircle,\n  Key\n} from \"lucide-react\";\n\ntype Step = {\n  id: number;\n  title: string;\n  subtitle: string;\n};\n\nconst steps: Step[] = [\n  {\n    id: 1,\n    title: \"Choose your role\",\n    subtitle: \"Select how you'll use Investrix\"\n  },\n  {\n    id: 2,\n    title: \"Create account\",\n    subtitle: \"Enter your basic information\"\n  }\n];\n\nexport default function Signup() {\n  const router = useRouter();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [formData, setFormData] = useState({\n    role: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    fullName: \"\",\n    companyName: \"\",\n    phoneNumber: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const [error, setError] = useState(\"\");"}, {"id": "src/app/signup/page.tsx_2", "file": "src/app/signup/page.tsx", "content": "const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleRoleSelect = (role: string) => {\n    setFormData(prev => ({ ...prev, role }));\n    setError(\"\");\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    setError(\"\");\n  };\n\n  const validateStep = () => {\n    switch (currentStep) {\n      case 1:\n        if (!formData.role) {\n          setError(\"Please select a role to continue\");\n          return false;\n        }\n        break;\n      case 2:\n        if (!formData.email || !formData.password || !formData.confirmPassword) {\n          setError(\"Please fill in all fields\");\n          return false;\n        }"}, {"id": "src/app/signup/page.tsx_3", "file": "src/app/signup/page.tsx", "content": "setError(\"Please fill in all fields\");\n          return false;\n        }\n        if (formData.password !== formData.confirmPassword) {\n          setError(\"Passwords do not match\");\n          return false;\n        }\n        if (formData.password.length < 8) {\n          setError(\"Password must be at least 8 characters long\");\n          return false;\n        }\n        break;\n    }\n    return true;\n  };\n\n  const handleNext = () => {\n    if (validateStep()) {\n      setCurrentStep(prev => prev + 1);\n      setError(\"\");\n    }\n  };\n\n  const handleBack = () => {\n    setCurrentStep(prev => prev - 1);\n    setError(\"\");\n  };\n\n  const handleSubmit = async () => {\n    if (!validateStep()) return;\n\n    setIsLoading(true);\n    try {\n      // Create user with Firebase"}, {"id": "src/app/signup/page.tsx_4", "file": "src/app/signup/page.tsx", "content": "setIsLoading(true);\n    try {\n      // Create user with Firebase\n      const userCredential = await createUserWithEmailAndPassword(\n        auth,\n        formData.email,\n        formData.password\n      );\n      const user = userCredential.user;\n\n      // Update profile\n      await updateProfile(user, {\n        displayName: formData.fullName || formData.email.split(\"@\")[0],\n      });\n\n      // Store additional user data\n      await setDoc(doc(db, \"users\", user.uid), {\n        email: user.email,\n        role: formData.role,\n        fullName: formData.fullName,\n        companyName: formData.role === 'investee' ? formData.companyName : null,\n        phoneNumber: formData.phoneNumber\n      });\n\n      toast.success(\"Account created successfully\");\n\n      // Route based on selected role"}, {"id": "src/app/signup/page.tsx_5", "file": "src/app/signup/page.tsx", "content": "toast.success(\"Account created successfully\");\n\n      // Route based on selected role\n      if (formData.role === 'investor') {\n        router.push('/dashboard/investor');\n      } else if (formData.role === 'investee') {\n        router.push('/dashboard/investee');\n      }\n    } catch (error: any) {\n      console.error(error);\n      setError(error.message || \"Failed to create account\");\n      toast.error(error.message || \"Failed to create account\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Rest of the component remains the same...\n  // (Keep all the renderStepContent and return JSX exactly as it was)\n  const renderStepContent = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}"}, {"id": "src/app/signup/page.tsx_6", "file": "src/app/signup/page.tsx", "content": "case 1:\n        return (\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"space-y-6\"\n          >\n            <div className=\"grid grid-cols-2 gap-4\">\n              {[\n                {\n                  id: 'investor',\n                  icon: <Wallet className=\"w-6 h-6\" />,\n                  label: 'Investor',\n                  description: 'I want to invest in companies',\n                  gradient: 'from-white-300 via-green-400 to-green-500'\n                },\n                {\n                  id: 'investee',\n                  icon: <Lightbulb className=\"w-6 h-6\" />,\n                  label: 'Investee',"}, {"id": "src/app/signup/page.tsx_7", "file": "src/app/signup/page.tsx", "content": "icon: <Lightbulb className=\"w-6 h-6\" />,\n                  label: 'Investee',\n                  description: 'I want to raise funds for my company',\n                  gradient: 'from-grey-300 via-emerald-400 to-emerald-500'\n                }\n              ].map((role) => (\n                <motion.button\n                  key={role.id}\n                  whileHover={{ scale: 1.02 }}\n                  whileTap={{ scale: 0.98 }}\n                  onClick={() => handleRoleSelect(role.id)}\n                  className={`\n                    p-6 rounded-xl border relative overflow-hidden text-left\n                    ${formData.role === role.id\n                      ? 'border-green-400/30 text-white'"}, {"id": "src/app/signup/page.tsx_8", "file": "src/app/signup/page.tsx", "content": "? 'border-green-400/30 text-white'\n                      : 'border-white/5 text-gray-400 hover:border-white/10 hover:bg-white/5'\n                    }\n                  `}\n                >\n                  {formData.role === role.id && (\n                    <motion.div\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      className={`\n                        absolute inset-0 bg-gradient-to-br ${role.gradient} \n                        opacity-10 backdrop-blur-sm\n                      `}\n                    />\n                  )}\n                  <div className=\"relative space-y-2\">\n                    <div className={`"}, {"id": "src/app/signup/page.tsx_9", "file": "src/app/signup/page.tsx", "content": "<div className=\"relative space-y-2\">\n                    <div className={`\n                      ${formData.role === role.id ? 'text-green-400' : 'text-gray-400'}\n                      transition-colors duration-300\n                    `}>\n                      {role.icon}\n                    </div>\n                    <div>\n                      <h3 className={`\n                        font-medium text-lg\n                        ${formData.role === role.id ? 'text-green-400' : 'text-gray-300'}\n                      `}>\n                        {role.label}\n                      </h3>\n                      <p className=\"text-sm text-gray-500 mt-1\">{role.description}</p>\n                    </div>\n                  </div>\n                </motion.button>\n              ))}"}, {"id": "src/app/signup/page.tsx_10", "file": "src/app/signup/page.tsx", "content": "</div>\n                </motion.button>\n              ))}\n            </div>\n          </motion.div>\n        );\n\n      case 2:\n        return (\n          <motion.div\n            initial={{ opacity: 0, x: 20 }}\n            animate={{ opacity: 1, x: 0 }}\n            exit={{ opacity: 0, x: -20 }}\n            className=\"space-y-4\"\n          >\n            <div className=\"relative\">\n              <Mail className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email address\"\n                value={formData.email}\n                onChange={handleInputChange}"}, {"id": "src/app/signup/page.tsx_11", "file": "src/app/signup/page.tsx", "content": "value={formData.email}\n                onChange={handleInputChange}\n                className=\"h-12 pl-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n              />\n            </div>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Password\"\n                value={formData.password}\n                onChange={handleInputChange}"}, {"id": "src/app/signup/page.tsx_12", "file": "src/app/signup/page.tsx", "content": "value={formData.password}\n                onChange={handleInputChange}\n                className=\"h-12 pl-10 pr-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n              />\n              <button\n                type=\"button\"\n                onClick={() => setShowPassword(!showPassword)}\n                className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-500 hover:text-white transition-colors\"\n              >\n                {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n              </button>\n            </div>\n            <div className=\"relative\">"}, {"id": "src/app/signup/page.tsx_13", "file": "src/app/signup/page.tsx", "content": "</button>\n            </div>\n            <div className=\"relative\">\n              <Lock className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n              <Input\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"confirmPassword\"\n                placeholder=\"Confirm password\"\n                value={formData.confirmPassword}\n                onChange={handleInputChange}\n                className=\"h-12 pl-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n              />\n            </div>\n            <div className=\"relative\">\n              <User className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />"}, {"id": "src/app/signup/page.tsx_14", "file": "src/app/signup/page.tsx", "content": "<Input\n                type=\"text\"\n                name=\"fullName\"\n                placeholder=\"Full name\"\n                value={formData.fullName}\n                onChange={handleInputChange}\n                className=\"h-12 pl-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n              />\n            </div>\n            {formData.role === 'investee' && (\n              <div className=\"relative\">\n                <Building className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n                <Input\n                  type=\"text\"\n                  name=\"companyName\"\n                  placeholder=\"Company name\"\n                  value={formData.companyName}"}, {"id": "src/app/signup/page.tsx_15", "file": "src/app/signup/page.tsx", "content": "placeholder=\"Company name\"\n                  value={formData.companyName}\n                  onChange={handleInputChange}\n                  className=\"h-12 pl-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n                />\n              </div>\n            )}\n            <div className=\"relative\">\n              <Key className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-500\" />\n              <Input\n                type=\"tel\"\n                name=\"phoneNumber\"\n                placeholder=\"APTOS Private Key\"\n                value={formData.phoneNumber}\n                onChange={handleInputChange}"}, {"id": "src/app/signup/page.tsx_16", "file": "src/app/signup/page.tsx", "content": "value={formData.phoneNumber}\n                onChange={handleInputChange}\n                className=\"h-12 pl-10 bg-white/5 border-white/10 text-white placeholder:text-gray-500 focus:border-green-400/30 focus:ring-0 rounded-xl\"\n              />\n            </div>\n          </motion.div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"relative flex h-screen w-full flex-col items-center justify-center bg-black overflow-hidden\">\n      {/* Background Elements */}\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 0.2 }}\n        transition={{ duration: 1 }}\n        className=\"absolute inset-0\"\n      >\n        <RetroGrid className=\"stroke-white\" />\n      </motion.div>"}, {"id": "src/app/signup/page.tsx_17", "file": "src/app/signup/page.tsx", "content": ">\n        <RetroGrid className=\"stroke-white\" />\n      </motion.div>\n\n      <div className=\"absolute top-1/4 left-1/4 w-72 h-72 bg-green-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob\" />\n      <div className=\"absolute bottom-1/4 right-1/4 w-72 h-72 bg-emerald-500/20 rounded-full mix-blend-multiply filter blur-xl animate-blob animation-delay-2000\" />\n\n      {/* Logo */}\n      <motion.div\n        initial={{ y: -50, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ duration: 0.5 }}\n        className=\"absolute top-8 left-8 flex items-center gap-2\"\n      >\n        <Rocket className=\"w-6 h-6 text-white\" />\n        <span className=\"text-white text-xl font-medium\">Investrix</span>\n      </motion.div>\n\n      {/* Main Content */}\n      <motion.div"}, {"id": "src/app/signup/page.tsx_18", "file": "src/app/signup/page.tsx", "content": "</motion.div>\n\n      {/* Main Content */}\n      <motion.div\n        initial={{ scale: 0.95, opacity: 0 }}\n        animate={{ scale: 1, opacity: 1 }}\n        transition={{ duration: 0.5 }}\n        className=\"z-10 w-full max-w-2xl p-8 rounded-3xl border border-white/10 bg-black/80 backdrop-blur-xl\"\n      >\n        {/* Progress Steps */}\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between\">\n            {steps.map((step, index) => (\n              <div key={step.id} className=\"flex items-center\">\n                <div className={`\n                  flex items-center justify-center w-8 h-8 rounded-full\n                  ${currentStep > step.id\n                    ? 'bg-green-400 text-black'\n                    : currentStep === step.id"}, {"id": "src/app/signup/page.tsx_19", "file": "src/app/signup/page.tsx", "content": "? 'bg-green-400 text-black'\n                    : currentStep === step.id\n                      ? 'bg-white/10 text-white border border-white/20'\n                      : 'bg-white/5 text-gray-500 border border-white/10'\n                  }\n                `}>\n                  {currentStep > step.id ? (\n                    <Check className=\"w-5 h-5 rounded-full\" />\n                  ) : (\n                    <span>{step.id}</span>\n                  )}\n                </div>\n                {index < steps.length - 1 && (\n                  <div className={`\n                    w-full h-1 mx-2\n                    ${currentStep > step.id + 1\n                      ? 'bg-green-400'\n                      : 'bg-white/10'\n                    }\n                  `} />"}, {"id": "src/app/signup/page.tsx_20", "file": "src/app/signup/page.tsx", "content": ": 'bg-white/10'\n                    }\n                  `} />\n                )}\n              </div>\n            ))}\n          </div>\n          <div className=\"mt-4\">\n            <h2 className=\"text-2xl font-medium text-white\">\n              {steps[currentStep - 1].title}\n            </h2>\n            <p className=\"text-gray-400 mt-1\">\n              {steps[currentStep - 1].subtitle}\n            </p>\n          </div>\n        </div>\n\n        {/* Error Message */}\n        <AnimatePresence mode=\"wait\">\n          {error && (\n            <motion.div\n              initial={{ opacity: 0, y: -10 }}\n              animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}"}, {"id": "src/app/signup/page.tsx_21", "file": "src/app/signup/page.tsx", "content": "animate={{ opacity: 1, y: 0 }}\n              exit={{ opacity: 0, y: -10 }}\n              className=\"mb-6 p-3 rounded-lg bg-red-500/10 border border-red-500/20 text-red-400 text-sm flex items-center gap-2\"\n            >\n              <AlertCircle className=\"w-4 h-4\" />\n              {error}\n            </motion.div>\n          )}\n        </AnimatePresence>\n\n        {/* Form Content */}\n        <div className=\"min-h-[280px]\">\n          <AnimatePresence mode=\"wait\">\n            {renderStepContent()}\n          </AnimatePresence>\n        </div>\n\n        {/* Navigation Buttons */}\n        <div className=\"flex justify-between mt-8\">\n          {currentStep > 1 ? (\n            <Button\n              onClick={handleBack}\n              variant=\"outline\""}, {"id": "src/app/signup/page.tsx_22", "file": "src/app/signup/page.tsx", "content": "<Button\n              onClick={handleBack}\n              variant=\"outline\"\n              className=\"border-white/10 bg-black text-white\"\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back\n            </Button>\n          ) : (\n            <Button\n              variant=\"ghost\"\n              onClick={() => router.push('/login')}\n              className=\"text-gray-400 hover:bg-black hover:text-white\"\n            >\n              Already have an account? Log in\n            </Button>\n          )}\n\n          <Button\n            onClick={currentStep === steps.length ? handleSubmit : handleNext}\n            disabled={isLoading}"}, {"id": "src/app/signup/page.tsx_23", "file": "src/app/signup/page.tsx", "content": "disabled={isLoading}\n            className=\"bg-gradient-to-r from-green-400 to-emerald-500 hover:from-green-500 hover:to-emerald-600 text-white px-8\"\n          >\n            {isLoading ? (\n              <div className=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\" />\n            ) : (\n              <>\n                {currentStep === steps.length ? 'Create Account' : 'Continue'}\n                <ArrowRight className=\"w-4 h-4 ml-2\" />\n              </>\n            )}\n          </Button>\n        </div>\n      </motion.div>\n\n      {/* Background Gradients */}\n      <div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/80 to-black\" />"}, {"id": "src/app/signup/page.tsx_24", "file": "src/app/signup/page.tsx", "content": "<div className=\"absolute inset-0 bg-gradient-to-t from-black via-black/80 to-black\" />\n      <div className=\"absolute bottom-0 left-0 w-full h-1/3 bg-gradient-to-t from-black to-transparent\" />\n    </div>\n  );\n}"}, {"id": "src/components/ChatToggleButton.tsx_0", "file": "src/components/ChatToggleButton.tsx", "content": "================================================\n'use client';\n/* eslint-disable */\nimport { useState, useEffect, useCallback } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { MessageCircle, X } from 'lucide-react';\n\nexport function ChatToggleButton() {\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [botresponse, setBotresponse] = useState([\n    { message: \"Hello, I am Investrix. How can I help you?\", type: \"bot\" },\n  ]);\n\n  const handleToggle = useCallback(() => {\n    setIsChatOpen((prev) => !prev);\n  }, []);\n\n  const handleInputChange = useCallback((e: any) => {\n    setInputValue(e.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (e: any) => {"}, {"id": "src/components/ChatToggleButton.tsx_1", "file": "src/components/ChatToggleButton.tsx", "content": "}, []);\n\n  const handleSubmit = useCallback(\n    async (e: any) => {\n      e.preventDefault();\n      try {\n        setBotresponse((prev) => [...prev, { message: inputValue, type: \"user\" }]);\n\n        const response = await fetch(`${process.env.NEXT_PUBLIC_CHATBOT_URL}/chat`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ message: inputValue }),\n        });\n\n        const data = await response.json();\n\n        setBotresponse((prev) => [\n          ...prev,\n          { message: data.response || \"Error: No response from server.\", type: \"bot\" },\n        ]);\n\n        setInputValue(\"\");\n      } catch (error) {\n        console.error(\"Fetch error:\", error);\n        setBotresponse((prev) => ["}, {"id": "src/components/ChatToggleButton.tsx_2", "file": "src/components/ChatToggleButton.tsx", "content": "console.error(\"Fetch error:\", error);\n        setBotresponse((prev) => [\n          ...prev,\n          { message: \"Error: Unable to reach the server.\", type: \"bot\" },\n        ]);\n      }\n    },\n    [inputValue]\n  );\n\n  return (\n    <>\n      <AnimatePresence>\n        {isChatOpen && (\n          <motion.div\n            initial={{ opacity: 0, y: 20, scale: 0.95 }}\n            animate={{ opacity: 1, y: 0, scale: 1 }}\n            exit={{ opacity: 0, y: 20, scale: 0.95 }}\n            transition={{ duration: 0.2 }}\n            className=\"fixed bottom-24 right-6 w-[350px] h-[500px] bg-white rounded-2xl shadow-2xl z-50 overflow-hidden\"\n          >\n            <div className=\"bg-gradient-to-r from-green-500 to-emerald-600 p-4\">"}, {"id": "src/components/ChatToggleButton.tsx_3", "file": "src/components/ChatToggleButton.tsx", "content": ">\n            <div className=\"bg-gradient-to-r from-green-500 to-emerald-600 p-4\">\n              <h3 className=\"text-white font-medium\">AI Assistant</h3>\n            </div>\n            <div className=\"p-4 h-[380px] overflow-y-auto\">\n              {botresponse.map((item, index) => (\n                <div\n                  key={index}\n                  className={`rounded-lg p-3 mb-2 max-w-[80%] ${\n                    item.type === \"bot\" ? \"bg-gray-100 text-gray-800\" : \"bg-green-500 text-white self-end\"\n                  }`}\n                >\n                  <p className=\"text-sm\">{item.message}</p>\n                </div>\n              ))}\n            </div>\n            <form onSubmit={handleSubmit} className=\"absolute bottom-0 left-0 right-0 p-4 bg-white border-t\">"}, {"id": "src/components/ChatToggleButton.tsx_4", "file": "src/components/ChatToggleButton.tsx", "content": "<div className=\"flex gap-2\">\n                <input\n                  type=\"text\"\n                  value={inputValue}\n                  onChange={handleInputChange}\n                  placeholder=\"Type your message...\"\n                  className=\"flex-1 px-4 py-2 border rounded-full focus:outline-none focus:ring-2 focus:ring-green-500\"\n                />\n                <button\n                  type=\"submit\"\n                  className=\"p-2 bg-green-500 text-white rounded-full hover:bg-green-600 transition-colors\"\n                >\n                  <MessageCircle className=\"w-5 h-5\" />\n                </button>\n              </div>\n            </form>\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <motion.button\n        initial={{ scale: 0 }}"}, {"id": "src/components/ChatToggleButton.tsx_5", "file": "src/components/ChatToggleButton.tsx", "content": ")}\n      </AnimatePresence>\n      <motion.button\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        transition={{ type: \"spring\", stiffness: 260, damping: 20, delay: 1.5 }}\n        onClick={handleToggle}\n        className=\"fixed bottom-6 right-6 z-50 p-4 rounded-full bg-white text-green-500 shadow-lg hover:shadow-xl transition-all duration-300 group\"\n      >\n        <motion.div animate={{ rotate: isChatOpen ? 180 : 0 }} transition={{ duration: 0.3 }}>\n          {isChatOpen ? <X className=\"w-6 h-6\" /> : <MessageCircle className=\"w-6 h-6\" />}\n        </motion.div>\n      </motion.button>\n    </>\n  );\n}"}, {"id": "src/components/clientProviders.tsx_0", "file": "src/components/clientProviders.tsx", "content": "================================================\n'use client'\n\nimport { AptosWalletAdapterProvider } from \"@aptos-labs/wallet-adapter-react\"\nimport { EdgeStoreProvider } from \"@/lib/edgestore\"\nimport { Toaster } from \"react-hot-toast\"\n\nexport function ClientProviders({ children }: { children: React.ReactNode }) {\n  return (\n    <EdgeStoreProvider>\n      <AptosWalletAdapterProvider optInWallets={[\"Petra\"]}>\n        <Toaster position=\"bottom-right\" />\n        {children}\n      </AptosWalletAdapterProvider>\n    </EdgeStoreProvider>\n  )\n}"}, {"id": "src/components/Navbar.tsx_0", "file": "src/components/Navbar.tsx", "content": "================================================\n'use client';\n/* eslint-disable */\nimport React, { useEffect, useState } from 'react';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { auth } from '@/app/firebase';\nimport { useRouter } from 'next/navigation';\nimport toast from 'react-hot-toast';\nimport { Button } from '@/components/ui/button';\nimport { Rocket } from 'lucide-react';\n\nconst Navbar = () => {\n  const [user, setUser] = useState(null);\n  const router = useRouter();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user: any) => {\n      setUser(user);\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const handleSignOut = () => {\n    signOut(auth)\n      .then(() => {\n        toast.success('Sign out successful');\n        setUser(null);"}, {"id": "src/components/Navbar.tsx_1", "file": "src/components/Navbar.tsx", "content": ".then(() => {\n        toast.success('Sign out successful');\n        setUser(null);\n        router.push('/');\n      })\n      .catch((error) => {\n        console.error(error);\n        toast.error('Unable to sign out');\n      });\n  };\n\n  return (\n    <nav className=\"flex justify-between items-center px-6 py-4 bg-black border-b border-[#333333]\">\n      <Rocket className=\"w-8 h-8 text-white\" />\n      <span className=\"text-white text-xl font-medium\">Investrix</span>\n      <div className=\"flex gap-4\">\n        {user ? (\n          <Button variant=\"ghost\" className=\"text-gray-300\" onClick={handleSignOut}>Sign Out</Button>\n        ) : (\n          <Button variant=\"ghost\" className=\"text-gray-300\" onClick={() => router.push('/login')}>Login</Button>\n        )}\n      </div>\n    </nav>\n  );\n};"}, {"id": "src/components/Navbar.tsx_2", "file": "src/components/Navbar.tsx", "content": ")}\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;"}, {"id": "src/components/magicui/interactive-grid-pattern.tsx_0", "file": "src/components/magicui/interactive-grid-pattern.tsx", "content": "================================================\n\"use client\";\n\nimport { cn } from \"@/lib/utils\";\nimport React, { useState } from \"react\";\n\n/**\n * InteractiveGridPattern is a component that renders a grid pattern with interactive squares.\n *\n * @param width - The width of each square.\n * @param height - The height of each square.\n * @param squares - The number of squares in the grid. The first element is the number of horizontal squares, and the second element is the number of vertical squares.\n * @param className - The class name of the grid.\n * @param squaresClassName - The class name of the squares.\n */\ninterface InteractiveGridPatternProps extends React.SVGProps<SVGSVGElement> {\n  width?: number;\n  height?: number;\n  squares?: [number, number]; // [horizontal, vertical]"}, {"id": "src/components/magicui/interactive-grid-pattern.tsx_1", "file": "src/components/magicui/interactive-grid-pattern.tsx", "content": "width?: number;\n  height?: number;\n  squares?: [number, number]; // [horizontal, vertical]\n  className?: string;\n  squaresClassName?: string;\n}\n\n/**\n * The InteractiveGridPattern component.\n *\n * @see InteractiveGridPatternProps for the props interface.\n * @returns A React component.\n */\nexport function InteractiveGridPattern({\n  width = 40,\n  height = 40,\n  squares = [24, 24],\n  className,\n  squaresClassName,\n  ...props\n}: InteractiveGridPatternProps) {\n  const [horizontal, vertical] = squares;\n  const [hoveredSquare, setHoveredSquare] = useState<number | null>(null);\n\n  return (\n    <svg\n      width={width * horizontal}\n      height={height * vertical}\n      className={cn(\n        \"absolute inset-0 h-full w-full border border-gray-400/30\",\n        className,\n      )}\n      {...props}"}, {"id": "src/components/magicui/interactive-grid-pattern.tsx_2", "file": "src/components/magicui/interactive-grid-pattern.tsx", "content": "className,\n      )}\n      {...props}\n    >\n      {Array.from({ length: horizontal * vertical }).map((_, index) => {\n        const x = (index % horizontal) * width;\n        const y = Math.floor(index / horizontal) * height;\n        return (\n          <rect\n            key={index}\n            x={x}\n            y={y}\n            width={width}\n            height={height}\n            className={cn(\n              \"stroke-gray-400/30 transition-all duration-100 ease-in-out [&:not(:hover)]:duration-1000\",\n              hoveredSquare === index ? \"fill-gray-300/30\" : \"fill-transparent\",\n              squaresClassName,\n            )}\n            onMouseEnter={() => setHoveredSquare(index)}\n            onMouseLeave={() => setHoveredSquare(null)}\n          />\n        );\n      })}\n    </svg>"}, {"id": "src/components/magicui/interactive-grid-pattern.tsx_3", "file": "src/components/magicui/interactive-grid-pattern.tsx", "content": "/>\n        );\n      })}\n    </svg>\n  );\n}"}, {"id": "src/components/magicui/retro-grid.tsx_0", "file": "src/components/magicui/retro-grid.tsx", "content": "================================================\nimport { cn } from \"@/lib/utils\";\n\ninterface RetroGridProps extends React.HTMLAttributes<HTMLDivElement> {\n  /**\n   * Additional CSS classes to apply to the grid container\n   */\n  className?: string;\n  /**\n   * Rotation angle of the grid in degrees\n   * @default 65\n   */\n  angle?: number;\n  /**\n   * Grid cell size in pixels\n   * @default 60\n   */\n  cellSize?: number;\n  /**\n   * Grid opacity value between 0 and 1\n   * @default 0.5\n   */\n  opacity?: number;\n  /**\n   * Grid line color in light mode\n   * @default \"gray\"\n   */\n  lightLineColor?: string;\n  /**\n   * Grid line color in dark mode\n   * @default \"gray\"\n   */\n  darkLineColor?: string;\n}\n\nexport function RetroGrid({\n  className,\n  angle = 65,\n  cellSize = 60,\n  opacity = 0.5,"}, {"id": "src/components/magicui/retro-grid.tsx_1", "file": "src/components/magicui/retro-grid.tsx", "content": "}\n\nexport function RetroGrid({\n  className,\n  angle = 65,\n  cellSize = 60,\n  opacity = 0.5,\n  lightLineColor = \"gray\",\n  darkLineColor = \"gray\",\n  ...props\n}: RetroGridProps) {\n  const gridStyles = {\n    \"--grid-angle\": `${angle}deg`,\n    \"--cell-size\": `${cellSize}px`,\n    \"--opacity\": opacity,\n    \"--light-line\": lightLineColor,\n    \"--dark-line\": darkLineColor,\n  } as React.CSSProperties;\n\n  return (\n    <div\n      className={cn(\n        \"pointer-events-none absolute size-full overflow-hidden [perspective:200px]\",\n        `opacity-[var(--opacity)]`,\n        className,\n      )}\n      style={gridStyles}\n      {...props}\n    >\n      <div className=\"absolute inset-0 [transform:rotateX(var(--grid-angle))]\">"}, {"id": "src/components/magicui/retro-grid.tsx_2", "file": "src/components/magicui/retro-grid.tsx", "content": ">\n      <div className=\"absolute inset-0 [transform:rotateX(var(--grid-angle))]\">\n        <div className=\"animate-grid [background-image:linear-gradient(to_right,var(--light-line)_1px,transparent_0),linear-gradient(to_bottom,var(--light-line)_1px,transparent_0)] [background-repeat:repeat] [background-size:var(--cell-size)_var(--cell-size)] [height:300vh] [inset:0%_0px] [margin-left:-200%] [transform-origin:100%_0_0] [width:600vw] dark:[background-image:linear-gradient(to_right,var(--dark-line)_1px,transparent_0),linear-gradient(to_bottom,var(--dark-line)_1px,transparent_0)]\" />\n      </div>\n\n      <div className=\"absolute inset-0 bg-gradient-to-t from-white to-transparent to-90% dark:from-black\" />\n    </div>\n  );\n}"}, {"id": "src/components/magicui/sparkles-text.tsx_0", "file": "src/components/magicui/sparkles-text.tsx", "content": "================================================\n\"use client\";\n\nimport { motion } from \"motion/react\";\nimport { CSSProperties, ReactElement, useEffect, useState } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface Sparkle {\n  id: string;\n  x: string;\n  y: string;\n  color: string;\n  delay: number;\n  scale: number;\n  lifespan: number;\n}\n\nconst Sparkle: React.FC<Sparkle> = ({ id, x, y, color, delay, scale }) => {\n  return (\n    <motion.svg\n      key={id}\n      className=\"pointer-events-none absolute z-20\"\n      initial={{ opacity: 0, left: x, top: y }}\n      animate={{\n        opacity: [0, 1, 0],\n        scale: [0, scale, 0],\n        rotate: [75, 120, 150],\n      }}\n      transition={{ duration: 0.8, repeat: Infinity, delay }}\n      width=\"21\"\n      height=\"21\""}, {"id": "src/components/magicui/sparkles-text.tsx_1", "file": "src/components/magicui/sparkles-text.tsx", "content": "transition={{ duration: 0.8, repeat: Infinity, delay }}\n      width=\"21\"\n      height=\"21\"\n      viewBox=\"0 0 21 21\"\n    >\n      <path"}, {"id": "src/components/magicui/sparkles-text.tsx_2", "file": "src/components/magicui/sparkles-text.tsx", "content": "width=\"21\"\n      height=\"21\"\n      viewBox=\"0 0 21 21\"\n    >\n      <path\n        d=\"M9.82531 0.843845C10.0553 0.215178 10.9446 0.215178 11.1746 0.843845L11.8618 2.72026C12.4006 4.19229 12.3916 6.39157 13.5 7.5C14.6084 8.60843 16.8077 8.59935 18.2797 9.13822L20.1561 9.82534C20.7858 10.0553 20.7858 10.9447 20.1561 11.1747L18.2797 11.8618C16.8077 12.4007 14.6084 12.3916 13.5 13.5C12.3916 14.6084 12.4006 16.8077 11.8618 18.2798L11.1746 20.1562C10.9446 20.7858 10.0553 20.7858 9.82531 20.1562L9.13819 18.2798C8.59932 16.8077 8.60843 14.6084 7.5 13.5C6.39157 12.3916 4.19225 12.4007 2.72023 11.8618L0.843814 11.1747C0.215148 10.9447 0.215148 10.0553 0.843814 9.82534L2.72023 9.13822C4.19225 8.59935 6.39157 8.60843 7.5 7.5C8.60843 6.39157 8.59932 4.19229 9.13819 2.72026L9.82531 0.843845Z\""}, {"id": "src/components/magicui/sparkles-text.tsx_3", "file": "src/components/magicui/sparkles-text.tsx", "content": "fill={color}\n      />\n    </motion.svg>\n  );\n};\n\ninterface SparklesTextProps {\n  /**\n   * @default <div />\n   * @type ReactElement\n   * @description\n   * The component to be rendered as the text\n   * */\n  as?: ReactElement;\n\n  /**\n   * @default \"\"\n   * @type string\n   * @description\n   * The className of the text\n   */\n  className?: string;\n\n  /**\n   * @required\n   * @type string\n   * @description\n   * The text to be displayed\n   * */\n  text: string;\n\n  /**\n   * @default 10\n   * @type number\n   * @description\n   * The count of sparkles\n   * */\n  sparklesCount?: number;\n\n  /**\n   * @default \"{first: '#9E7AFF', second: '#FE8BBB'}\"\n   * @type string\n   * @description\n   * The colors of the sparkles\n   * */\n  colors?: {\n    first: string;\n    second: string;\n  };\n}"}, {"id": "src/components/magicui/sparkles-text.tsx_4", "file": "src/components/magicui/sparkles-text.tsx", "content": "* The colors of the sparkles\n   * */\n  colors?: {\n    first: string;\n    second: string;\n  };\n}\n\nexport const SparklesText: React.FC<SparklesTextProps> = ({\n  text,\n  colors = { first: \"#9E7AFF\", second: \"#FE8BBB\" },\n  className,\n  sparklesCount = 10,\n  ...props\n}) => {\n  const [sparkles, setSparkles] = useState<Sparkle[]>([]);\n\n  useEffect(() => {\n    const generateStar = (): Sparkle => {\n      const starX = `${Math.random() * 100}%`;\n      const starY = `${Math.random() * 100}%`;\n      const color = Math.random() > 0.5 ? colors.first : colors.second;\n      const delay = Math.random() * 2;\n      const scale = Math.random() * 1 + 0.3;\n      const lifespan = Math.random() * 10 + 5;\n      const id = `${starX}-${starY}-${Date.now()}`;"}, {"id": "src/components/magicui/sparkles-text.tsx_5", "file": "src/components/magicui/sparkles-text.tsx", "content": "const lifespan = Math.random() * 10 + 5;\n      const id = `${starX}-${starY}-${Date.now()}`;\n      return { id, x: starX, y: starY, color, delay, scale, lifespan };\n    };\n\n    const initializeStars = () => {\n      const newSparkles = Array.from({ length: sparklesCount }, generateStar);\n      setSparkles(newSparkles);\n    };\n\n    const updateStars = () => {\n      setSparkles((currentSparkles) =>\n        currentSparkles.map((star) => {\n          if (star.lifespan <= 0) {\n            return generateStar();\n          } else {\n            return { ...star, lifespan: star.lifespan - 0.1 };\n          }\n        }),\n      );\n    };\n\n    initializeStars();\n    const interval = setInterval(updateStars, 100);\n\n    return () => clearInterval(interval);"}, {"id": "src/components/magicui/sparkles-text.tsx_6", "file": "src/components/magicui/sparkles-text.tsx", "content": "const interval = setInterval(updateStars, 100);\n\n    return () => clearInterval(interval);\n  }, [colors.first, colors.second, sparklesCount]);\n\n  return (\n    <div\n      className={cn(\"text-6xl font-bold\", className)}\n      {...props}\n      style={\n        {\n          \"--sparkles-first-color\": `${colors.first}`,\n          \"--sparkles-second-color\": `${colors.second}`,\n        } as CSSProperties\n      }\n    >\n      <span className=\"relative inline-block\">\n        {sparkles.map((sparkle) => (\n          <Sparkle key={sparkle.id} {...sparkle} />\n        ))}\n        <strong>{text}</strong>\n      </span>\n    </div>\n  );\n};"}, {"id": "src/components/ui/button.tsx_0", "file": "src/components/ui/button.tsx", "content": "================================================\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\","}, {"id": "src/components/ui/button.tsx_1", "file": "src/components/ui/button.tsx", "content": "\"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2\",\n        sm: \"h-8 rounded-md px-3 text-xs\",\n        lg: \"h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,"}, {"id": "src/components/ui/button.tsx_2", "file": "src/components/ui/button.tsx", "content": "},\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }"}, {"id": "src/components/ui/input.tsx_0", "file": "src/components/ui/input.tsx", "content": "================================================\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\""}, {"id": "src/components/ui/input.tsx_1", "file": "src/components/ui/input.tsx", "content": ")}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }"}, {"id": "src/components/ui/percentage-circle.tsx_0", "file": "src/components/ui/percentage-circle.tsx", "content": "================================================\ninterface PercentageCircleProps {\n    percentage: number;\n    size?: number;\n    strokeWidth?: number;\n  }\n  \n  export const PercentageCircle = ({ \n    percentage, \n    size = 80, \n    strokeWidth = 4 \n  }: PercentageCircleProps) => {\n    const radius = (size - strokeWidth) / 2;\n    const circumference = radius * 2 * Math.PI;\n    const offset = circumference - (percentage / 100) * circumference;\n  \n    return (\n      <div className=\"relative\" style={{ width: size, height: size }}>\n        <svg className=\"transform -rotate-90\" width={size} height={size}>\n          {/* Background circle */}\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"#333333\""}, {"id": "src/components/ui/percentage-circle.tsx_1", "file": "src/components/ui/percentage-circle.tsx", "content": "cy={size / 2}\n            r={radius}\n            stroke=\"#333333\"\n            strokeWidth={strokeWidth}\n            fill=\"none\"\n          />\n          {/* Percentage circle */}\n          <circle\n            cx={size / 2}\n            cy={size / 2}\n            r={radius}\n            stroke=\"white\"\n            strokeWidth={strokeWidth}\n            strokeDasharray={circumference}\n            strokeDashoffset={offset}\n            fill=\"none\"\n            className=\"transition-all duration-500 ease-out\"\n          />\n        </svg>\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <span className=\"text-white text-sm font-medium\">{percentage}%</span>\n        </div>\n      </div>\n    );\n  };"}, {"id": "src/lib/contracts.ts_0", "file": "src/lib/contracts.ts", "content": "================================================\n/* eslint-disable */\n\nimport { Account, Aptos, AptosConfig, Network, AccountAddress, NetworkToNetworkName, Ed25519PrivateKey } from \"@aptos-labs/ts-sdk\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, query, where, getDocs } from \"firebase/firestore\";\nimport { updateDoc, doc } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID\n};"}, {"id": "src/lib/contracts.ts_1", "file": "src/lib/contracts.ts", "content": "appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID\n};\n\n\nconst app = initializeApp(firebaseConfig);\nconsole.log(app);\nconst db = getFirestore(app);\nconst APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\nconst COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\nconst config = new AptosConfig({ network: Network.TESTNET });\nconst aptos = new Aptos(config);\n\nasync function get_acc_no(id: number) {\n  const collectionRef = collection(db, \"applications\");\n  const q = query(collectionRef, where(\"id\", \"==\", id));\n  const querySnapshot = await getDocs(q);\n  let data1: string = \"\";\n\n  querySnapshot.forEach((doc) => {\n    const data: any = doc.data();\n    data1 = data[\"acc_no\"];\n  });\n\n  return data1;\n\n}\n\n\nasync function push_acc_no(id: number, acc_hash: any) {"}, {"id": "src/lib/contracts.ts_2", "file": "src/lib/contracts.ts", "content": "});\n\n  return data1;\n\n}\n\n\nasync function push_acc_no(id: number, acc_hash: any) {\n  const collectionRef = collection(db, \"applications\");\n  const q = query(collectionRef, where(\"applicationId\", \"==\", id));\n\n  // Get the matching documents\n  const querySnapshot = await getDocs(q);\n  querySnapshot.forEach(async (docSnap) => {\n    const docRef = doc(db, \"applications\", docSnap.id);\n    await updateDoc(docRef, {\n      [\"acc_hash\"]: acc_hash,\n    });\n\n    console.log(`Field 'acc_hash' updated successfully for document with applicationId: ${id} and the hash is ${acc_hash}`);\n  });\n}\n\nexport async function createStartup(startup_id: number) {\n  const startup_acc = Account.generate();\n  console.log(`Startup created with hash:  ${startup_acc.accountAddress}`);\n  try {"}, {"id": "src/lib/contracts.ts_3", "file": "src/lib/contracts.ts", "content": "console.log(`Startup created with hash:  ${startup_acc.accountAddress}`);\n  try {\n    push_acc_no(startup_id, startup_acc.accountAddress);\n  }\n  catch (error) {\n    console.error(\"Firebase errror!\");\n  }\n}\n\nexport async function fundStartup(startupId: number, amt: number) {\n  try {\n    const investorStringKey = process.env.NEXT_PUBLIC_INVESTOR_PRIVATE_KEY || \"\";\n    const investorPrivateKey = new Ed25519PrivateKey(investorStringKey);\n\n\n    const investorAccount = Account.fromPrivateKey({\n      privateKey: investorPrivateKey\n    });\n    console.log(\"Investor pvt: \", investorAccount.privateKey);\n\n    const startupAddress = await get_acc_no(startupId);\n    console.log(startupAddress);\n\n    const startupStringKey = process.env.NEXT_PUBLIC_STARTUP_PRIVATE_KEY || \"\";"}, {"id": "src/lib/contracts.ts_4", "file": "src/lib/contracts.ts", "content": "const startupStringKey = process.env.NEXT_PUBLIC_STARTUP_PRIVATE_KEY || \"\";\n\n    const startupPrivateKey = new Ed25519PrivateKey(startupStringKey);\n\n    const startupAccount = Account.fromPrivateKey({\n      privateKey: startupPrivateKey\n    });\n\n    console.log(\"Startup pvt: \", startupAccount.privateKey);\n\n    const aliceBalance = await balance(\"Investor\", investorAccount.accountAddress);\n    const bobBalance = await balance(\"Startup\", startupAccount.accountAddress);\n\n    console.log(\"Balances are : \", aliceBalance, bobBalance);\n\n\n    // await aptos.fundAccount({ accountAddress: investorAccount.accountAddress, amount: 100_000_000 });\n    // await aptos.fundAccount({ accountAddress: startupAccount.accountAddress, amount: 1_000 });"}, {"id": "src/lib/contracts.ts_5", "file": "src/lib/contracts.ts", "content": "// await aptos.fundAccount({ accountAddress: startupAccount.accountAddress, amount: 1_000 });\n\n\n    const transaction = await aptos.transferCoinTransaction({\n      sender: investorAccount.accountAddress,\n      recipient: startupAccount.accountAddress,\n      amount: amt,\n    });\n\n\n    const pendingTxn = await aptos.signAndSubmitTransaction({\n      signer: investorAccount,\n      transaction,\n    });\n\n    const response = await aptos.waitForTransaction({\n      transactionHash: pendingTxn.hash,\n    });\n\n\n    console.log(\"Transaction submitted:\", response.hash);\n    console.log(\"Transaction confirmed!: \", response.hash);\n\n    return response.hash;\n  } catch (error) {\n    console.error(\"Error funding startup:\", error);\n  }\n}"}, {"id": "src/lib/contracts.ts_6", "file": "src/lib/contracts.ts", "content": "} catch (error) {\n    console.error(\"Error funding startup:\", error);\n  }\n}\n\nconst balance = async (name: string, accountAddress: AccountAddress, versionToWaitFor?: bigint): Promise<number> => {\n  const amount = await aptos.getAccountAPTAmount({\n    accountAddress,\n    minimumLedgerVersion: versionToWaitFor,\n  });\n  console.log(`${name}'s balance is: ${amount}`);\n  return amount;\n};"}, {"id": "src/lib/edgestore.ts_0", "file": "src/lib/edgestore.ts", "content": "================================================\n'use client';\nimport { type EdgeStoreRouter } from '@/app/api/edgestore/[...edgestore]/route';\nimport { createEdgeStoreProvider } from '@edgestore/react';\nconst { EdgeStoreProvider, useEdgeStore } =\n  createEdgeStoreProvider<EdgeStoreRouter>();\nexport { EdgeStoreProvider, useEdgeStore };"}, {"id": "src/lib/utils.ts_0", "file": "src/lib/utils.ts", "content": "================================================\nimport { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}"}]